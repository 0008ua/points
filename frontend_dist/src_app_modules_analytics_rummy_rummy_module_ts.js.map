{"version":3,"file":"src_app_modules_analytics_rummy_rummy_module_ts.js","mappings":"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","sources":["./src/app/modules/analytics/rummy/rummy-routing.module.ts","./src/app/modules/analytics/rummy/rummy.module.ts","./src/app/modules/analytics/rummy/rummy.page.ts","./src/app/modules/analytics/rummy/rummy.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RummyPage } from './rummy.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RummyPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RummyPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RummyPageRoutingModule } from './rummy-routing.module';\r\n\r\nimport { RummyPage } from './rummy.page';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RummyPageRoutingModule,\r\n    TranslateModule.forChild({\r\n      extend: true,\r\n    }),\r\n  ],\r\n  declarations: [RummyPage]\r\n})\r\nexport class RummyPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { IGame, IGamer } from 'src/app/interfaces';\r\nimport { GameService } from 'src/app/store/game-data.service';\r\nimport { GamerService } from 'src/app/store/gamer-data.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport * as fromAnalyticsActions from 'src/app/store/actions/analytics.actions';\r\nimport { selectRating, selectLoading } from 'src/app/store/reducers/analytics.reducer';\r\n\r\n@Component({\r\n  selector: 'app-rummy',\r\n  templateUrl: './rummy.page.html',\r\n  styleUrls: ['./rummy.page.scss'],\r\n})\r\nexport class RummyPage implements OnInit {\r\n  stats = environment.games.rummy.stats;\r\n  players: IGamer[];\r\n  analytics$: Observable<IGamer[]>;\r\n  loading$: Observable<boolean>;\r\n  stat: any = this.stats[0];\r\n  math = Math;\r\n  array = Array;\r\n\r\n  games$: Observable<IGame[]>;\r\n  gamers$: Observable<IGamer[]>;\r\n\r\n  constructor(\r\n    private store: Store,\r\n    private gameService: GameService,\r\n    private gamerService: GamerService,\r\n  ) {}\r\n\r\n  ionViewWillEnter() {\r\n    // console.log('view')\r\n    this.store.dispatch(fromAnalyticsActions[this.stats[0]._id]({ gameType: 'rummy' }));\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.games$ = this.gameService.entities$;\r\n    this.games$.subscribe(() =>\r\n      this.store.dispatch(fromAnalyticsActions[this.stat._id]({ gameType: 'rummy' })),\r\n    );\r\n\r\n    this.gamers$ = this.gamerService.entities$;\r\n    this.gamers$.subscribe((x) => console.log('gamers', x));\r\n\r\n    this.analytics$ = this.store.select(selectRating);\r\n\r\n    this.loading$ = this.store.select(selectLoading);\r\n  }\r\n}\r\n","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <!-- <ion-title>Train analytics</ion-title> -->\\r\\n\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-menu-button menu=\\\"analytics-menu\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <!-- <ion-segment [value]=\\\"stats[0]\\\" (ionChange)=\\\"onMenuClickHandler($event)\\\">\\r\\n      <ion-segment-button *ngFor=\\\"let stat of stats; let idx = index\\\" [value]=\\\"stat\\\">\\r\\n        <ion-icon [name]=\\\"stat.icon\\\"></ion-icon>\\r\\n      </ion-segment-button>\\r\\n    </ion-segment> -->\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-grid class=\\\"ion-no-margin ion-no-padding\\\">\\r\\n    <ion-row>\\r\\n      <ion-col size-lg=\\\"6\\\" size-md=\\\"8\\\" size-sm=\\\"10\\\" offset-lg=\\\"3\\\" offset-md=\\\"2\\\" offset-sm=\\\"1\\\">\\r\\n        <ion-card>\\r\\n          <ion-card-header>\\r\\n            <ion-card-title class=\\\"ion-text-center\\\">Rummy</ion-card-title>\\r\\n            <ion-card-subtitle class=\\\"ion-text-center\\\">{{'modules.analytics.' + stat.name | translate}}\\r\\n            </ion-card-subtitle>\\r\\n          </ion-card-header>\\r\\n          <ion-card-content>\\r\\n            <ion-list *ngIf=\\\"(loading$ | async) === true\\\">\\r\\n              <ion-item lines=\\\"none\\\" *ngFor=\\\"let x of array(5).fill('')\\\">\\r\\n                <ion-skeleton-text slot=\\\"start\\\" animated style=\\\"width: 60%\\\">\\r\\n                </ion-skeleton-text>\\r\\n                <ion-skeleton-text slot=\\\"end\\\" animated>\\r\\n                </ion-skeleton-text>\\r\\n              </ion-item>\\r\\n\\r\\n            </ion-list>\\r\\n\\r\\n            <ion-list *ngIf=\\\"(loading$ | async) === false\\\">\\r\\n              <ion-item *ngFor=\\\"let player of (analytics$ | async); let idx = index\\\">\\r\\n                <div slot=\\\"start\\\" [ngStyle]=\\\"{\\r\\n                  'border-right': '6px solid ' + player.color,\\r\\n                  'padding-right': '10px'\\r\\n                }\\\">{{idx+1}}</div>\\r\\n                <ion-label>\\r\\n                  {{player.name}}\\r\\n                </ion-label>\\r\\n\\r\\n                <ion-text slot=\\\"end\\\" color=\\\"primary\\\">\\r\\n                  <ion-text class=\\\"bold\\\" [color]=\\\"player.rating.scores < 0 ? 'danger' : 'success'\\\"> {{player.rating.scores}}</ion-text>\\r\\n                  / {{player.rating.totalGames}} / {{player.rating.wins}}\\r\\n                </ion-text>\\r\\n                <!-- <ion-text *ngIf=\\\"stat._id === 'getRatingByWinsToGames'\\\" slot=\\\"end\\\" color=\\\"primary\\\">\\r\\n                  {{player.rating.wins}}/{{player.rating.gamesCount}} ({{player.rating.wins ?\\r\\n                  math.floor(player.rating.winsToGames * 100) : 0}}%)\\r\\n                </ion-text> -->\\r\\n              </ion-item>\\r\\n            </ion-list>\\r\\n            <!-- <ion-row class=\\\"ion-justify-content-around\\\">\\r\\n              <ion-button fill=\\\"outline\\\" size=\\\"small\\\" [disabled]=\\\"(rounds$ | async).length === 0\\\"\\r\\n                (click)=\\\"onFinishGameHandler()\\\">\\r\\n                {{'elements.button.finishGame' | translate}}\\r\\n              </ion-button>\\r\\n              <ion-button fill=\\\"outline\\\" size=\\\"small\\\" [disabled]=\\\"(rounds$ | async).length === 0\\\"\\r\\n                (click)=\\\"onCancelGameHandler()\\\">\\r\\n                {{'elements.button.cancelGame' | translate}}\\r\\n              </ion-button> -->\\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-content>\";"],"names":[],"sourceRoot":"webpack:///"}