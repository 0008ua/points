{"version":3,"file":"src_app_modules_auth_telegram_telegram_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AACE;AAEzD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kEAAiB;KAC7B;IACD;QACE,IAAI,EAAE,IAAI;QACV,UAAU,EAAE,EAAE;KACf;CACF,CAAC;IAMW,qBAAqB,SAArB,qBAAqB;CAAG;AAAxB,qBAAqB;IAJjC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,qBAAqB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;ACnBgB;AACd;AAG4B;AAEX;IAOxC,iBAAiB,SAAjB,iBAAiB;IAG5B,YACY,KAAY,EACZ,YAA0B,EAC1B,eAAgC;QAFhC,UAAK,GAAL,KAAK,CAAO;QACZ,iBAAY,GAAZ,YAAY,CAAc;QAC1B,oBAAe,GAAf,eAAe,CAAiB;IACzC,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC;IAC7C,CAAC;IAED,iBAAiB,CAAC,OAAe;QAC/B,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,SAAS,CACvD,CAAC,MAAM,EAAE,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAE,MAAM,CAAC,CAAC;QAClD,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC;QAChD,CAAC,CACF,CAAC;IACJ,CAAC;CACF;;YAnCQ,8CAAK;YAGL,0EAAY;YAEZ,8DAAe;;AAOX,iBAAiB;IAL7B,wDAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,yJAAwC;;KAEzC,CAAC;GACW,iBAAiB,CAuB7B;AAvB6B;;;;;;;;;;;;;;;;;;;;;;;ACbW;AACM;AACF;AACS;AACG;AACS;IAarD,cAAc,SAAd,cAAc;CAAG;AAAjB,cAAc;IAX1B,uDAAQ,CAAC;QACR,YAAY,EAAE,CAAC,kEAAiB,CAAC;QACjC,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,2EAAqB;YACrB,yEAAwB,CAAC;gBACvB,MAAM,EAAE,IAAI;aACb,CAAC;SACH;KACF,CAAC;GACW,cAAc,CAAG;AAAH;;;;;;;;;;;;;;;AClB3B,iEAAe,kDAAkD,8CAA8C,0gBAA0gB,gFAAgF,8EAA8E,sFAAsF,kPAAkP,2UAA2U,kCAAkC,mNAAmN,cAAc,oQAAoQ,sFAAsF,wCAAwC,0BAA0B,k8BAAk8B,oCAAoC,oWAAoW,uCAAuC,gWAAgW,0CAA0C,qfAAqf,0CAA0C,6MAA6M","sources":["./src/app/modules/auth/telegram/telegram-routing.module.ts","./src/app/modules/auth/telegram/telegram.component.ts","./src/app/modules/auth/telegram/telegram.module.ts","./src/app/modules/auth/telegram/telegram.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { TelegramComponent } from './telegram.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TelegramComponent,\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: '',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class TelegramRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { IGamer } from 'src/app/interfaces';\nimport { GamerService } from 'src/app/store/gamer-data.service';\nimport { selectAllPlayers } from 'src/app/store/reducers/player.reducer';\nimport { TelegramService } from './telegram.service';\n\n@Component({\n  selector: 'app-telegram',\n  templateUrl: './telegram.component.html',\n  styleUrls: ['./telegram.component.scss'],\n})\nexport class TelegramComponent implements OnInit {\n  gamers$: Observable<IGamer[]>;\n\n  constructor(\n    protected store: Store,\n    protected gamerService: GamerService,\n    protected telegramService: TelegramService,\n  ) {}\n\n  ngOnInit() {\n    this.gamers$ = this.gamerService.entities$;\n  }\n\n  unsubscibeFromBot(gamerId: string) {\n    this.telegramService.unsubscibeFromBot(gamerId).subscribe(\n      (result) => {\n        console.log('unsubscibeFromBot result', result);\n      },\n      (error) => {\n        console.log('unsubscibeFromBot error', error);\n      },\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { TelegramComponent } from './telegram.component';\nimport { TelegramRoutingModule } from './telegram-routing.module';\n\n@NgModule({\n  declarations: [TelegramComponent],\n  imports: [\n    CommonModule,\n    IonicModule,\n    TelegramRoutingModule,\n    TranslateModule.forChild({\n      extend: true,\n    }),\n  ],\n})\nexport class TelegramModule {}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>{{ 'modules.profile.telegramSetup' | translate }}</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-menu-button menu=\\\"profile-menu\\\"></ion-menu-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <ion-grid class=\\\"ion-no-margin ion-no-padding\\\">\\n    <ion-row>\\n      <ion-col\\n        size-lg=\\\"6\\\"\\n        size-md=\\\"8\\\"\\n        size-sm=\\\"10\\\"\\n        offset-lg=\\\"3\\\"\\n        offset-md=\\\"2\\\"\\n        offset-sm=\\\"1\\\"\\n      >\\n        <ion-card>\\n          <ion-card-header>\\n            <ion-card-title class=\\\"ion-text-center\\\">{{\\n              'modules.profile.telegramSetupTitle' | translate\\n            }}</ion-card-title>\\n            <ion-card-subtitle class=\\\"ion-text-center\\\">{{\\n              'modules.profile.telegramSetupDescription' | translate\\n            }}</ion-card-subtitle>\\n          </ion-card-header>\\n          <ion-card-content class=\\\"choose-players\\\">\\n            <ion-list class=\\\"choose-players__list\\\">\\n              <ion-item\\n                *ngFor=\\\"let gamer of gamers$ | async; let index = index\\\"\\n                lines=\\\"none\\\"\\n              >\\n                <!-- <ion-item lines=\\\"none\\\"> -->\\n                <div class=\\\"players-list\\\">\\n                  <div class=\\\"players-list__color\\\">\\n                    <div\\n                      class=\\\"select-color\\\"\\n                      [ngStyle]=\\\"{ 'background-color': gamer?.color }\\\"\\n                    ></div>\\n                  </div>\\n                  <div class=\\\"players-list__name\\\">\\n                    <ion-item lines=\\\"full\\\">\\n                      <ion-label slot=\\\"start\\\">{{ gamer.name }} </ion-label>\\n                      <ion-label slot=\\\"end\\\">\\n                        <ion-button *ngIf=\\\"gamer.telegramSubscriptionName\\\" (click)=\\\"unsubscibeFromBot(gamer._id)\\\">Unsubscribe</ion-button>\\n                        <ion-text color=\\\"primary\\\">{{\\n                          gamer.telegramSubscriptionName\\n                        }}</ion-text>\\n                        {{ gamer.telegramCheckCode }}</ion-label\\n                      >\\n                      <!-- <ion-note slot=\\\"end\\\" color=\\\"danger\\\">\\n                          <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\n                          <ion-icon name=\\\"caret-back-outline\\\"></ion-icon>\\n                        </ion-note> -->\\n                    </ion-item>\\n                  </div>\\n                </div>\\n              </ion-item>\\n\\n              <!-- </ion-item> -->\\n            </ion-list>\\n\\n            <!-- <ion-row class=\\\"choose-players__btn-block\\\">\\n              <ion-col>\\n                <ion-button\\n                  expand=\\\"block\\\"\\n                  fill=\\\"outline\\\"\\n                  size=\\\"small\\\"\\n                  color=\\\"secondary\\\"\\n                  (click)=\\\"addPlayerHandler()\\\"\\n                  [disabled]=\\\"\\n                    players.length >= environment.games[gameType]?.maxPlayersQty\\n                  \\\"\\n                >\\n                  {{ 'elements.button.add' | translate }}\\n                </ion-button>\\n              </ion-col>\\n              <ion-col>\\n                <ion-button\\n                  expand=\\\"block\\\"\\n                  fill=\\\"outline\\\"\\n                  size=\\\"small\\\"\\n                  color=\\\"success\\\"\\n                  (click)=\\\"showCreateGamerPopup($event)\\\"\\n                >\\n                  {{ 'elements.button.create' | translate }}\\n                </ion-button>\\n              </ion-col>\\n              <ion-col>\\n                <ion-button\\n                  expand=\\\"block\\\"\\n                  fill=\\\"outline\\\"\\n                  size=\\\"small\\\"\\n                  color=\\\"danger\\\"\\n                  (click)=\\\"removeAllPlayersHandler()\\\"\\n                >\\n                  {{ 'elements.button.removeAll' | translate }}\\n                </ion-button>\\n              </ion-col>\\n            </ion-row>\\n            <ion-row class=\\\"choose-players__btn-block\\\">\\n              <ion-col>\\n                <ion-button\\n                  expand=\\\"block\\\"\\n                  (click)=\\\"startGameHandler()\\\"\\n                  [disabled]=\\\"\\n                    players.length < 2 ||\\n                    players.length > environment.games[gameType]?.maxPlayersQty\\n                  \\\"\\n                >\\n                  {{ 'elements.button.startGame' | translate }}\\n                </ion-button>\\n              </ion-col>\\n            </ion-row> -->\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\";"],"names":[],"sourceRoot":"webpack:///"}