{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/config/jwt.config.ts","./src/app/modules/analytics-tab/analytics.service.ts","./src/app/modules/auth/auth.service.ts","./src/app/modules/auth/error-log/error-log.service.ts","./src/app/modules/games/game/game-result/game-result.component.ts","./src/app/services/error-handler.service.ts","./src/app/services/http-interceptor.service.ts","./src/app/services/modal.service.ts","./src/app/services/shared.service.ts","./src/app/services/toast.service.ts","./src/app/store/actions/analytics.actions.ts","./src/app/store/actions/app.actions.ts","./src/app/store/actions/auth.actions.ts","./src/app/store/actions/error-log.actions.ts","./src/app/store/actions/hydration.actions.ts","./src/app/store/actions/persist-store.actions.ts","./src/app/store/actions/player.actions.ts","./src/app/store/actions/round-member.actions.ts","./src/app/store/actions/round.actions.ts","./src/app/store/effects/analytics.effects.ts","./src/app/store/effects/app.effects.ts","./src/app/store/effects/auth.effects.ts","./src/app/store/effects/error-log.effects.ts","./src/app/store/effects/hydration.effects.ts","./src/app/store/effects/persist-store.effects.ts","./src/app/store/effects/player.effects.ts","./src/app/store/effects/round-member.effects.ts","./src/app/store/effects/round.effects.ts","./src/app/store/entity-metadata.ts","./src/app/store/game-data.service.ts","./src/app/store/gamer-data.service.ts","./src/app/store/reducers/analytics.reducer.ts","./src/app/store/reducers/app.reducer.ts","./src/app/store/reducers/auth.reducer.ts","./src/app/store/reducers/error-log.reducer.ts","./src/app/store/reducers/hydration.reducer.ts","./src/app/store/reducers/index.ts","./src/app/store/reducers/persist-store.reducer.ts","./src/app/store/reducers/player.reducer.ts","./src/app/store/reducers/round-member.reducer.ts","./src/app/store/reducers/round.reducer.ts","./src/app/store/store.module.ts","./src/environments/environment.ts","./src/main.ts","./node_modules/@ionic/core/dist/esm/ lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","./src/app/app.component.scss","./src/app/modules/games/game/game-result/game-result.component.scss"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    loadChildren: () => import('./tabs/tabs.module').then((m) => m.TabsPageModule),\r\n    // pathMatch: 'full'\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: '',\r\n  },\r\n];\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes, {\r\n      preloadingStrategy: PreloadAllModules,\r\n      // paramsInheritanceStrategy: 'always'\r\n    }),\r\n  ],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AuthService } from './modules/auth/auth.service';\r\nimport {\r\n  NavigationEnd,\r\n  NavigationError,\r\n  NavigationStart,\r\n  Router,\r\n  Event,\r\n} from '@angular/router';\r\nimport { SharedService } from './services/shared.service';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: 'app.component.html',\r\n  styleUrls: ['app.component.scss'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  lang: string;\r\n\r\n  constructor(\r\n    private store: Store,\r\n    private translate: TranslateService,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private sharedService: SharedService,\r\n  ) {\r\n    // static translation initialization\r\n    // this language will be used as a fallback when a translation isn't found in the current language\r\n    translate.setDefaultLang('en');\r\n\r\n    // the lang to use, if the lang isn't available, it will use the current loader to get them\r\n    // this.lang = 'en';\r\n    // for automatic lang detection\r\n    const browserLang = translate.getBrowserLang();\r\n    this.lang = browserLang.match(/uk|ru/) ? 'uk' : 'en';\r\n    translate.use(this.lang);\r\n\r\n    // set to store static translation language\r\n    // this.store.dispatch(new LoadLang());\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.router.events.subscribe((event: Event) => {\r\n      if (event instanceof NavigationStart) {\r\n        // console.log('NavigationStart', event);\r\n      }\r\n\r\n      if (event instanceof NavigationEnd) {\r\n        // console.log('NavigationEnd', event);\r\n      }\r\n\r\n      if (event instanceof NavigationError) {\r\n        // Hide loading indicator\r\n        // Present error to user\r\n        // console.log('NavigationError', event.error);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { ErrorHandler, NgModule, isDevMode } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouteReuseStrategy } from '@angular/router';\r\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AppStoreModule } from './store/store.module';\r\n// Translator\r\nimport { HttpClientModule, HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { HttpInterceptorService } from './services/http-interceptor.service';\r\n\r\n// AoT requires an exported function for factories\r\n// eslint-disable-next-line prefer-arrow/prefer-arrow-functions\r\nexport function createTranslateLoader(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\nimport { JwtDecodeFactory, JWT_DECODE } from './config/jwt.config';\r\nimport { ErrorHandlerService } from './services/error-handler.service';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreRouterConnectingModule } from '@ngrx/router-store';\r\n\r\n@NgModule({\r\n    declarations: [AppComponent],\r\n    imports: [\r\n        BrowserModule,\r\n        IonicModule.forRoot(),\r\n        AppRoutingModule,\r\n        HttpClientModule,\r\n        TranslateModule.forRoot({\r\n            loader: {\r\n                provide: TranslateLoader,\r\n                useFactory: createTranslateLoader,\r\n                deps: [HttpClient],\r\n            },\r\n        }),\r\n        AppStoreModule,\r\n        // StoreModule.forRoot({}, {}),\r\n        // StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: !isDevMode() }),\r\n        // EffectsModule.forRoot([]),\r\n        // StoreRouterConnectingModule.forRoot(),\r\n    ],\r\n    providers: [\r\n        { provide: JWT_DECODE, useFactory: JwtDecodeFactory, deps: [] },\r\n        { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\r\n        {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: HttpInterceptorService,\r\n            multi: true,\r\n        },\r\n        { provide: ErrorHandler, useExisting: ErrorHandlerService },\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { InjectionToken } from '@angular/core';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nexport const JwtDecodeFactory = () => {\r\n  return jwtDecode;\r\n};\r\n\r\nexport type JwtDecode = typeof jwtDecode;\r\n\r\nexport const JWT_DECODE = new InjectionToken('JWT_DECODE');\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { GameType, IGamer } from 'src/app/interfaces';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AnalyticsService {\n  constructor(private http: HttpClient) {}\n\n  getRating(gameType: GameType): Observable<IGamer[]> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        // eslint-disable-next-line  @typescript-eslint/naming-convention\n        'Content-Type': 'application/json',\n      }),\n      // params: {\n      //   query,\n      // },\n    };\n    return this.http.get<IGamer[]>(\n      environment.host + 'api/analytics/get-rating/' + gameType,\n      httpOptions,\n    );\n    // .pipe(catchError((err) => throwError(err)));\n  }\n\n  getRatingByWins(gameType: GameType): Observable<IGamer[]> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        // eslint-disable-next-line  @typescript-eslint/naming-convention\n        'Content-Type': 'application/json',\n      }),\n      // params: {\n      //   gameType,\n      // },\n    };\n    return this.http.get<IGamer[]>(\n      environment.host + 'api/analytics/get-wins/' + gameType,\n      httpOptions,\n    );\n    // .pipe(catchError((err) => throwError(err)));\n  }\n\n  getRatingByWinsToGames(gameType: GameType): Observable<IGamer[]> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        // eslint-disable-next-line  @typescript-eslint/naming-convention\n        'Content-Type': 'application/json',\n      }),\n      // params: {\n      //   gameType,\n      // },\n    };\n    return this.http.get<IGamer[]>(\n      environment.host + 'api/analytics/get-wins-to-games/' + gameType,\n      httpOptions,\n    );\n    // .pipe(catchError((err) => throwError(err)));\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AbstractControl, ValidationErrors } from '@angular/forms';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { IUser } from '../../interfaces';\r\n\r\nimport { Router } from '@angular/router';\r\nimport { redirection } from 'src/app/store/actions/auth.actions';\r\nimport { selectRedirectionUrl, selectUser } from '../../store/reducers/auth.reducer';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  host = environment.host;\r\n  url$: Observable<string>;\r\n\r\n  constructor(private http: HttpClient, private store: Store, private router: Router) {\r\n    this.url$ = this.store.select(selectRedirectionUrl);\r\n    this.url$.subscribe((url) => {\r\n      if (url) {\r\n        this.router.navigateByUrl(url);\r\n        this.store.dispatch(redirection({ redirectionUrl: null }));\r\n      }\r\n    });\r\n  }\r\n\r\n  // testProtected(): Observable<string> {\r\n  //   // return this.http.post('/api/auth/signin', { body: user });\r\n  //   const httpOptions = {\r\n  //     headers: new HttpHeaders({\r\n  //       'Content-Type': 'application/json',\r\n  //       // Authorization: 'token',\r\n  //     }),\r\n  //   };\r\n  //   return this.http.get<string>(\r\n  //     this.host + '/api/auth/protected',\r\n  //     httpOptions,\r\n  //   );\r\n  // }\r\n\r\n  signin(user: IUser): Observable<string> {\r\n    // return this.http.post('/api/auth/signin', { body: user });\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n      }),\r\n    };\r\n    return this.http.post<string>(this.host + '/api/auth/signin', user, httpOptions);\r\n  }\r\n\r\n  signup(user: IUser | null): Observable<string> {\r\n    // return this.http.post('/api/auth/signin', { body: user });\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n      }),\r\n    };\r\n    return this.http.post<string>(this.host + '/api/auth/signup', user, httpOptions);\r\n  }\r\n\r\n  // sync validator\r\n  matchPassword(abstractControl: AbstractControl): ValidationErrors | null {\r\n    const password = abstractControl.get('password').value;\r\n    const passwordConfirm = abstractControl.get('passwordConfirm').value;\r\n    if (password === passwordConfirm) {\r\n      abstractControl.get('passwordConfirm').setErrors(null);\r\n      return null;\r\n    } else {\r\n      /**\r\n       * set error to 'passwordConfirm' element\r\n       */\r\n\r\n      abstractControl.get('passwordConfirm').setErrors({ mismatch: true });\r\n      /**\r\n       * and don't set error (null) to formGroup\r\n       */\r\n      return null;\r\n    }\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport {\n  EnvironmentInjector,\n  Injectable,\n  Injector,\n  OnInit,\n  Signal,\n  WritableSignal,\n  computed,\n  inject,\n  runInInjectionContext,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport {\n  ErrorLogQueryDto,\n  ErrorLoggerDocumentDto,\n  ErrorLogCreateDto,\n  OwnerDataDto,\n  OwnerQueryDto,\n} from 'src/app/dtos';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorLogService implements OnInit {\n  host = environment.host;\n\n  // injector = inject(EnvironmentInjector);\n  // ownersWithQueryS: WritableSignal<OwnerDataDto>;\n\n  constructor(private injector: Injector, private http: HttpClient) {}\n\n  ngOnInit() {\n    // this.ownersWithQueryS = computed(() => this.getOwnersWithQueryS);\n  }\n\n  // addAll -> getWithQuery (GET /api/heroes/?name=bombasto)\n  getWithQuery(query: ErrorLogQueryDto): Observable<ErrorLoggerDocumentDto[]> {\n    let params = new HttpParams();\n    Object.entries(query).forEach(([key, value]) => {\n      params = params.append(key, value);\n    });\n    const httpOptions = {\n      headers: new HttpHeaders({\n        // eslint-disable-next-line  @typescript-eslint/naming-convention\n        'Content-Type': 'application/json',\n      }),\n      params,\n    };\n    return this.http.get<ErrorLoggerDocumentDto[]>(\n      this.host + '/api/logger/get-with-query',\n      httpOptions,\n    );\n  }\n\n  // null -> add (POST /api/hero/)\n  logErrorToDB(error: ErrorLogCreateDto): Observable<string> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        // eslint-disable-next-line  @typescript-eslint/naming-convention\n        'Content-Type': 'application/json',\n      }),\n    };\n    return this.http\n      .post<string>(this.host + '/api/logger/log-error-to-db', error, httpOptions)\n      .pipe(tap((x) => console.log('error log result', x)));\n  }\n\n  getOwnersWithQuery$(query: OwnerQueryDto): Observable<OwnerDataDto> {\n    let params = new HttpParams();\n    Object.entries(query).forEach(([key, value]) => {\n      params = params.append(key, value);\n    });\n    const httpOptions = {\n      headers: new HttpHeaders({\n        // eslint-disable-next-line  @typescript-eslint/naming-convention\n        'Content-Type': 'application/json',\n      }),\n      params,\n    };\n    return this.http.get<OwnerDataDto>(\n      this.host + '/api/logger/get-owners-with-query',\n      httpOptions,\n    );\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { GameResultModalData, IGamer, PlayersResult, UID } from 'src/app/interfaces';\nimport { selectAllPlayers } from 'src/app/store/reducers/player.reducer';\n\n@Component({\n  selector: 'app-game-result',\n  templateUrl: './game-result.component.html',\n  styleUrls: ['./game-result.component.scss'],\n})\nexport class GameResultComponent implements OnInit {\n  @Input() data: GameResultModalData;\n\n  resultWithNames: Array<PlayersResult & { name: string; color: string }>;\n  players$: Observable<IGamer[]>;\n  constructor(private modalController: ModalController, protected store: Store) {}\n  \n\n  ngOnInit() {\n    this.players$ = this.store.select(selectAllPlayers);\n    this.players$.subscribe((players) => {\n      this.resultWithNames = this.data.results.map((result) => {\n        const player = players.find((pl) => pl._id === result._id);\n        return { ...result, name: player?.name, color: player?.color };\n      });\n      this.resultWithNames.sort((a, b) => (a.score - b.score) * this.data.order);\n    });\n  }\n\n  confirm() {\n    return this.modalController.dismiss(null, 'confirm');\n  }\n}\n","import { ErrorHandler, Inject, Injectable, Injector } from '@angular/core';\nimport { DataServiceError } from '@ngrx/data';\nimport { Observable } from 'rxjs';\nimport { IErrorData, ErrorTypes } from '../interfaces';\nimport { ErrorLogService } from '../modules/auth/error-log/error-log.service';\nimport { SharedService } from './shared.service';\nimport { ToastService } from './toast.service';\n\n// catch all unhandled errors\n@Injectable({ providedIn: 'root' })\nexport class ErrorHandlerService implements ErrorHandler {\n  constructor(@Inject(Injector) private injector: Injector) {}\n\n  private get toastService() {\n    return this.injector.get(ToastService);\n  }\n\n  private get sharedService() {\n    return this.injector.get(ErrorLogService);\n  }\n\n  handleError(error: any): void {\n    console.log('global error handler ', error);\n    this.logError({ errorType: 'unknownError', error }).subscribe();\n  }\n\n  logError({ error, errorType }: IErrorData): Observable<string> {\n    console.log('global error loger ', error);\n\n    const message = this.deepErrorChecker(error);\n    this.toastService.presentErrorToast(errorType, message.join('</br>'));\n    return this.sharedService.logErrorToDB({\n      message: message.join('\\n'),\n      errorType,\n      error,\n    });\n  }\n\n  private deepErrorChecker(error: any): string[] {\n    const mes = [error.message];\n    if (error.hasOwnProperty('error')) {\n      mes.push(...this.deepErrorChecker(error.error));\n    }\n    return mes;\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpRequest,\r\n  HttpResponse,\r\n  HttpErrorResponse,\r\n  HttpClient,\r\n  HttpHeaders,\r\n} from '@angular/common/http';\r\n\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { catchError, map, mergeMap, switchMap, tap } from 'rxjs/operators';\r\n\r\nimport { Store } from '@ngrx/store';\r\nimport { environment } from 'src/environments/environment';\r\nimport { AuthService } from '../modules/auth/auth.service';\r\nimport { signinSuccess, storeToken } from '../store/actions/auth.actions';\r\nimport { SharedService } from './shared.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HttpInterceptorService implements HttpInterceptor {\r\n  host = environment.host;\r\n  refreshInProgress = false;\r\n\r\n  constructor(\r\n    private store: Store,\r\n    private http: HttpClient,\r\n    private authService: AuthService,\r\n    private sharedService: SharedService,\r\n  ) {}\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler,\r\n  ): Observable<HttpEvent<any>> {\r\n    return this.sharedService.getToken().pipe(\r\n      switchMap((token) => {\r\n        if (token) {\r\n          req = req.clone({\r\n            headers: req.headers.set('Authorization', token),\r\n          });\r\n        }\r\n        return next.handle(req);\r\n      }),\r\n      catchError((error: HttpErrorResponse) => {\r\n        if (error.status === 401) {\r\n          // get protected resource fail\r\n          // bad token or new guest user without token\r\n          // try to get valid guest token\r\n          const httpOptions = {\r\n            headers: new HttpHeaders({\r\n              'Content-Type': 'application/json',\r\n            }),\r\n          };\r\n          return this.http\r\n            .post<string>(this.host + '/api/auth/signup', null, httpOptions)\r\n            .pipe(\r\n              catchError((getTokenError: HttpErrorResponse) => {\r\n                // error get valid guest token\r\n                // forward error\r\n                return throwError(getTokenError);\r\n              }),\r\n              switchMap((token: string) => {\r\n                // successeful get valid guest token\r\n                // save new token to store\r\n                this.store.dispatch(signinSuccess({ token }));\r\n                req = req.clone({\r\n                  headers: req.headers.set('Authorization', token),\r\n                });\r\n                // second try to get protected resource\r\n                return next.handle(req);\r\n              }),\r\n            );\r\n        }\r\n        return throwError(error);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, ofType } from '@ngrx/effects';\r\n\r\nimport { filter } from 'rxjs/operators';\r\nimport { EntityAction, ofEntityOp, OP_ERROR, OP_SUCCESS, EntityCacheAction } from '@ngrx/data';\r\nimport { ModalController, ToastController } from '@ionic/angular';\r\nimport * as fromAnalyticsActions from '../store/actions/analytics.actions';\r\nimport * as fromAnalyticsReducer from '../store/reducers/analytics.reducer';\r\nimport { AnalyticsActionTypes } from '../store/actions/analytics.actions';\r\nimport * as fromAuthActions from '../store/actions/auth.actions';\r\nimport { Action, Store } from '@ngrx/store';\r\nimport { OperatorFunction } from 'rxjs';\r\n\r\n/** Report ngrx-data success/error actions as toast messages **/\r\n@Injectable({ providedIn: 'root' })\r\nexport class ModalService {\r\n  constructor(public modalController: ModalController) {}\r\n  async presentModal(component: any, data: any) {\r\n    const modal = await this.modalController.create({\r\n      component,\r\n      componentProps: data,\r\n    });\r\n    modal.present();\r\n\r\n    return modal.onWillDismiss();\r\n  }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { from, Observable, of, throwError } from 'rxjs';\r\nimport { Preferences } from '@capacitor/preferences';\r\nimport { catchError, map, switchMap, tap } from 'rxjs/operators';\r\nimport {\r\n  GameResultModalData,\r\n  GameType,\r\n  IGame,\r\n  IGamer,\r\n  IUser,\r\n  NamedScore,\r\n  ResultRoundWithTotal,\r\n  Round,\r\n  RoundCfg,\r\n  RoundMember,\r\n  RoundWithTotal,\r\n  UID,\r\n} from '../interfaces';\r\nimport { Store } from '@ngrx/store';\r\nimport { selectAllPlayers } from '../store/reducers/player.reducer';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { selectAllRounds } from '../store/reducers/round.reducer';\r\nimport {\r\n  selectAllRoundMembers,\r\n  selectByIdRoundMember,\r\n} from '../store/reducers/round-member.reducer';\r\nimport * as fromAppActions from '../store/actions/app.actions';\r\nimport { selectRedirectionUrl, selectGameType } from '../store/reducers/app.reducer';\r\nimport { Router } from '@angular/router';\r\nimport { redirection } from '../store/actions/app.actions';\r\nimport * as fromRoundMembersActions from '../store/actions/round-member.actions';\r\nimport { JwtDecodeOptions } from 'jwt-decode';\r\nimport { JWT_DECODE, JwtDecode } from '../config/jwt.config';\r\nimport { ModalService } from './modal.service';\r\nimport { GameResultComponent } from '../modules/games/game/game-result/game-result.component';\r\nimport * as fns from 'date-fns';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SharedService {\r\n  environment = environment;\r\n  players: IGamer[] = [];\r\n  players$: Observable<IGamer[]>;\r\n\r\n  gameType: GameType;\r\n  gameType$: Observable<GameType>;\r\n\r\n  rounds: Round[] = [];\r\n  rounds$: Observable<Round[]>;\r\n\r\n  roundMembers: RoundMember[] = [];\r\n  roundMembers$: Observable<RoundMember[]>;\r\n\r\n  host = environment.host;\r\n  url$: Observable<string>;\r\n\r\n  constructor(\r\n    private store: Store,\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    protected modalService: ModalService,\r\n    @Inject(JWT_DECODE) private jwtDecode: JwtDecode,\r\n  ) {\r\n    this.url$ = this.store.select(selectRedirectionUrl);\r\n    this.url$.subscribe((url) => {\r\n      if (url) {\r\n        this.router.navigateByUrl(url);\r\n        this.store.dispatch(redirection({ redirectionUrl: null }));\r\n      }\r\n    });\r\n\r\n    this.players$ = this.store.select(selectAllPlayers);\r\n    this.players$.subscribe((players) => {\r\n      this.players = players;\r\n    });\r\n\r\n    this.gameType$ = this.store.select(selectGameType);\r\n    this.gameType$.subscribe((gameType) => {\r\n      this.gameType = gameType;\r\n    });\r\n\r\n    this.rounds$ = this.store.select(selectAllRounds);\r\n    this.rounds$.subscribe((rounds) => {\r\n      this.rounds = rounds;\r\n    });\r\n\r\n    this.roundMembers$ = this.store.select(selectAllRoundMembers);\r\n    this.roundMembers$.subscribe((roundMembers) => {\r\n      this.roundMembers = roundMembers;\r\n    });\r\n  }\r\n\r\n  // '2020-12-01T00:00:00.000Z' => 2020-12-01\r\n  convertISOToShort(ISO: string): string {\r\n    return ISO.substring(0, 10);\r\n  }\r\n\r\n  convertISOToDate(ISO: string): Date {\r\n    return fns.parseISO(ISO);\r\n  }\r\n\r\n  // Tue Dec 01 2020 00:00:00 GMT-1000 => '2020-12-01'\r\n  convertDateToShort(date: Date): string {\r\n    return fns.formatISO(date, { representation: 'date' });\r\n  }\r\n\r\n  // Tue Dec 01 2020 00:00:00 GMT-1000 => '2020-12-01T00:00:00.000Z'\r\n  convertDateToISO(date: Date): string {\r\n    return fns.formatISO(date);\r\n  }\r\n\r\n  setToStorage(key: string, value: any): Observable<void> {\r\n    return from(Preferences.set({ key, value }));\r\n  }\r\n\r\n  setToken(token: string): Observable<void> {\r\n    return this.setToStorage('token', token);\r\n  }\r\n\r\n  getFromStorage(key: string): Observable<string | null> {\r\n    return from(Preferences.get({ key })).pipe(map((getResult) => getResult.value));\r\n  }\r\n\r\n  getToken(): Observable<string | null> {\r\n    return this.getFromStorage('token');\r\n  }\r\n\r\n  getTokenAndDecode(): Observable<IUser> {\r\n    return this.getToken().pipe(\r\n      map((token) => {\r\n        return this.jwtDecode<IUser>(token);\r\n      }),\r\n    );\r\n  }\r\n\r\n  removeFromStorage(key: string): Observable<void> {\r\n    return from(Preferences.remove({ key }));\r\n  }\r\n\r\n  removeToken(): Observable<void> {\r\n    return this.removeFromStorage('token');\r\n  }\r\n\r\n  getPlayerTotalScores(player: string): number {\r\n    let sum = 0;\r\n    this.roundMembers.forEach((roundMember) => {\r\n      if (roundMember.player === player) {\r\n        sum += roundMember.scoresLine.reduce((prev, cur) => prev + cur, 0);\r\n      }\r\n    });\r\n    return sum;\r\n  }\r\n\r\n  createClientRoundsWithTotal(): RoundWithTotal[] {\r\n    return this.rounds.map((round) => {\r\n      const players = round.roundMembers.map((memberId) => {\r\n        const member = this.roundMembers.find(\r\n          (roundMember) => roundMember._id === memberId,\r\n        );\r\n        return {\r\n          _id: member.player,\r\n          score: member.scoresLine.reduce((prev, cur) => prev + cur, 0),\r\n        };\r\n      });\r\n      return { _id: round._id, players };\r\n    });\r\n  }\r\n\r\n  createResultRoundWithTotal(): ResultRoundWithTotal {\r\n    if (this.gameType !== 'rummy') {\r\n      return {\r\n        _id: 'result',\r\n        players: this.players\r\n          .map((player) => ({\r\n            _id: player._id,\r\n            score: this.getPlayerTotalScores(player._id),\r\n          }))\r\n          .sort(\r\n            (a, b) =>\r\n              (a.score - b.score) * this.environment.games[this.gameType].resultsOrder,\r\n          ),\r\n      };\r\n    }\r\n    let acc = 0;\r\n    return {\r\n      _id: 'result',\r\n      players: this.players\r\n        .map((player) => {\r\n          const score = this.getPlayerTotalScores(player._id);\r\n          acc += score;\r\n          return {\r\n            _id: player._id,\r\n            score,\r\n          };\r\n        })\r\n        .sort(\r\n          (a, b) =>\r\n            (a.score - b.score) * this.environment.games[this.gameType].resultsOrder,\r\n        )\r\n        .map((player) => ({ ...player, score: player.score || acc * -1 })),\r\n    };\r\n  }\r\n\r\n  createResultOfGame(): IGame {\r\n    return {\r\n      type: this.gameType,\r\n      rounds: [...this.createClientRoundsWithTotal(), this.createResultRoundWithTotal()],\r\n    };\r\n  }\r\n\r\n  async presentModalFinishGame(game: IGame) {\r\n    const order = this.environment.games[game.type].resultsOrder as -1 | 1;\r\n    const results = game.rounds.find((round) => round._id === 'result').players;\r\n    const data: GameResultModalData = {\r\n      results,\r\n      order,\r\n    };\r\n    return this.modalService.presentModal(GameResultComponent, { data });\r\n  }\r\n\r\n  calcQtyOfArrItems(item: string | number, playerId: string, roundId: string): number {\r\n    let count = 0;\r\n\r\n    this.getMemberByPlayerId(playerId, roundId).scoresLine.forEach((arrItem) => {\r\n      if (arrItem === item) {\r\n        count++;\r\n      }\r\n    });\r\n    return count;\r\n  }\r\n\r\n  calcScores(playerId: UID, roundId: string): number {\r\n    return this.getMemberByPlayerId(playerId, roundId).scoresLine.reduce(\r\n      (prev, cur) => prev + cur,\r\n      0,\r\n    );\r\n  }\r\n\r\n  getPlayerColor(playerId: UID): string {\r\n    return this.players.find((player) => player._id === playerId).color;\r\n  }\r\n\r\n  getPlayerName(playerId: UID): string {\r\n    return this.players.find((player) => player._id === playerId).name;\r\n  }\r\n\r\n  getRoundById(roundId: string): Round {\r\n    return this.rounds.find((round) => round._id === roundId);\r\n  }\r\n\r\n  getMemberByPlayerId(playerId: UID, roundId: string): RoundMember {\r\n    const round = this.getRoundById(roundId);\r\n    return this.roundMembers.find(\r\n      (roundMember) =>\r\n        roundMember.player === playerId && round?.roundMembers.includes(roundMember._id),\r\n    );\r\n  }\r\n  getRoundMemberById$(roundMemberId: UID): Observable<RoundMember> {\r\n    return this.store.select(selectByIdRoundMember(roundMemberId));\r\n  }\r\n\r\n  // logErrorToDB(error: ErrorLogDto): Observable<string> {\r\n  //   // return of(error);\r\n  //   const httpOptions = {\r\n  //     headers: new HttpHeaders({\r\n  //       // eslint-disable-next-line  @typescript-eslint/naming-convention\r\n  //       'Content-Type': 'application/json',\r\n  //     }),\r\n  //   };\r\n  //   return this.http.post<string>(this.host + '/api/logger/log-error-to-db', error, httpOptions);\r\n  // }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, ofType } from '@ngrx/effects';\r\n\r\nimport { filter } from 'rxjs/operators';\r\nimport { EntityAction, ofEntityOp, OP_ERROR, OP_SUCCESS, EntityCacheAction } from '@ngrx/data';\r\nimport { ToastController } from '@ionic/angular';\r\nimport * as fromAnalyticsActions from '../store/actions/analytics.actions';\r\nimport * as fromAnalyticsReducer from '../store/reducers/analytics.reducer';\r\nimport { AnalyticsActionTypes } from '../store/actions/analytics.actions';\r\nimport * as fromAuthActions from '../store/actions/auth.actions';\r\nimport { Action, Store } from '@ngrx/store';\r\nimport { OperatorFunction } from 'rxjs';\r\n\r\n/** Report ngrx-data success/error actions as toast messages **/\r\n@Injectable({ providedIn: 'root' })\r\nexport class ToastService {\r\n  constructor(private store: Store, public toastController: ToastController) {}\r\n\r\n  async presentErrorToast(\r\n    header = 'Error occurred',\r\n    message = '',\r\n    // action?: typeof fromAnalyticsActions.error | typeof fromAuthActions.error,\r\n  ) {\r\n    const toast = await this.toastController.create({\r\n      header,\r\n      message,\r\n      icon: 'bug-outline',\r\n      position: 'top',\r\n      duration: 5000,\r\n      buttons: [\r\n        {\r\n          text: 'Ok',\r\n          role: 'cancel',\r\n          handler: () => {},\r\n        },\r\n      ],\r\n    });\r\n    await toast.present();\r\n\r\n    const { role, ...rest } = await toast.onDidDismiss();\r\n    // if (action) {\r\n    //   this.store.dispatch(action({ error: null }));\r\n    // }\r\n  }\r\n}\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { createAction, props, union } from '@ngrx/store';\r\nimport { GameType, IGamer } from 'src/app/interfaces';\r\n\r\nexport enum AnalyticsActionTypes {\r\n  getRatingByWinsType = 'analytics/ratingByWins',\r\n  getRatingByWinsToGamesType = 'analytics/ratingByWinsToGames',\r\n  getRatingType = 'analytics/rating',\r\n  getRatingSuccessType = 'analytics/getRatingSuccess',\r\n  addManyType = 'analytics/addMany',\r\n  addErrorType = 'analytics/addError',\r\n  removeErrorType = 'analytics/removeError',\r\n  loadingType = 'analytics/loading',\r\n}\r\n\r\nexport const getRatingByWins = createAction(\r\n  AnalyticsActionTypes.getRatingByWinsType,\r\n  props<{\r\n    gameType: GameType;\r\n    query?: any;\r\n  }>(),\r\n);\r\n\r\nexport const getRatingByWinsToGames = createAction(\r\n  AnalyticsActionTypes.getRatingByWinsToGamesType,\r\n  props<{\r\n    gameType: GameType;\r\n    query?: any;\r\n  }>(),\r\n);\r\n\r\nexport const getRating = createAction(\r\n  AnalyticsActionTypes.getRatingType,\r\n  props<{\r\n    gameType: GameType;\r\n    query?: any;\r\n  }>(),\r\n);\r\n\r\nexport const getRatingSuccess = createAction(\r\n  AnalyticsActionTypes.getRatingSuccessType,\r\n  props<{ analytics: IGamer[] }>(),\r\n);\r\n\r\nexport const addMany = createAction(\r\n  AnalyticsActionTypes.addManyType,\r\n  props<{ analytics: IGamer[] }>(),\r\n);\r\n\r\nexport const addError = createAction(\r\n  AnalyticsActionTypes.addErrorType,\r\n  props<{ error: HttpErrorResponse }>(),\r\n);\r\n\r\nexport const removeError = createAction(AnalyticsActionTypes.removeErrorType);\r\n\r\nexport const loading = createAction(\r\n  AnalyticsActionTypes.loadingType,\r\n  props<{ loading: boolean }>(),\r\n);\r\n\r\nconst all = union({\r\n  addError,\r\n  removeError,\r\n  getRatingByWins,\r\n  getRatingByWinsToGames,\r\n  getRating,\r\n  getRatingSuccess,\r\n  loading,\r\n});\r\n\r\nexport type CoreActionsUnion = typeof all;\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { createAction, props, union } from '@ngrx/store';\r\nimport { Round, RoundMember, GameType, IGamer, IGame, ErrorTypes } from 'src/app/interfaces';\r\n\r\nexport enum AppActionTypes {\r\n  loadingType = 'app/loading',\r\n  clearGameType = 'app/clearGame',\r\n  loadGameType = 'app/loadGame',\r\n  gameTypeType = 'app/gameType',\r\n  gameTypeAndClearGameType = 'app/gameTypeAndClearGame',\r\n  finishGameType = 'app/finish game',\r\n  openNextRoundType = 'app/open next round',\r\n  createRoundsType = 'app/create rounds',\r\n  redirectionType = 'app/redirection',\r\n  nopType = 'app/nopType',\r\n  addErrorType = 'app/addError',\r\n  removeErrorType = 'app/removeError',\r\n}\r\n\r\nexport const loading = createAction(AppActionTypes.loadingType, props<{ loading: boolean }>());\r\n\r\nexport const clearGame = createAction(AppActionTypes.clearGameType);\r\n\r\nexport const loadGame = createAction(\r\n  AppActionTypes.loadGameType,\r\n  props<{ roundMembers: RoundMember[]; rounds: Round[] }>(),\r\n);\r\n\r\nexport const gameType = createAction(AppActionTypes.gameTypeType, props<{ gameType: GameType }>());\r\n\r\nexport const gameTypeAndClearGame = createAction(\r\n  AppActionTypes.gameTypeAndClearGameType,\r\n  props<{ gameType: GameType }>(),\r\n);\r\n\r\nexport const finishGame = createAction(AppActionTypes.finishGameType);\r\n\r\nexport const openNextRound = createAction(AppActionTypes.openNextRoundType);\r\n\r\nexport const createRounds = createAction(AppActionTypes.createRoundsType);\r\n\r\nexport const redirection = createAction(\r\n  AppActionTypes.redirectionType,\r\n  props<{ redirectionUrl: string | null }>(),\r\n);\r\n\r\nexport const addError = createAction(\r\n  AppActionTypes.addErrorType,\r\n  props<{ error: HttpErrorResponse; errorType?: ErrorTypes }>(),\r\n);\r\n\r\nexport const removeError = createAction(AppActionTypes.removeErrorType);\r\n\r\nexport const nop = createAction(AppActionTypes.nopType);\r\n\r\nconst all = union({\r\n  loading,\r\n  clearGame,\r\n  loadGame,\r\n  createRounds,\r\n  openNextRound,\r\n  finishGame,\r\n  gameType,\r\n  gameTypeAndClearGame,\r\n  redirection,\r\n  addError,\r\n  removeError,\r\n  nop,\r\n});\r\n\r\nexport type CoreActionsUnion = typeof all;\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Action, createAction, props, union } from '@ngrx/store';\r\nimport { IUser } from 'src/app/interfaces';\r\n\r\nexport enum AuthActionTypes {\r\n  storeTokenType = 'auth/storeToken',\r\n  storeTokenSuccessType = 'auth/storeTokenSuccess',\r\n\r\n  storeUserFromTokenType = 'auth/storeUserFromToken',\r\n  storeUserFromTokenSuccessType = 'auth/storeUserFromTokenSuccess',\r\n\r\n  signinType = 'auth/signin',\r\n  signinSuccessType = 'auth/signinSuccess',\r\n  signupType = 'auth/signup',\r\n\r\n  logoutType = 'auth/logout',\r\n\r\n  redirectionType = 'auth/redirection',\r\n\r\n  addErrorType = 'auth/addError',\r\n  removeErrorType = 'auth/removeError',\r\n  loadingType = 'auth/loading',\r\n}\r\n\r\nexport const storeToken = createAction(AuthActionTypes.storeTokenType, props<{ token: string }>());\r\n\r\nexport const storeUserFromToken = createAction(AuthActionTypes.storeUserFromTokenType);\r\n\r\nexport const storeUserFromTokenSuccess = createAction(\r\n  AuthActionTypes.storeUserFromTokenSuccessType,\r\n  props<{ user: IUser }>(),\r\n);\r\n\r\nexport const signin = createAction(AuthActionTypes.signinType, props<{ user: IUser }>());\r\n\r\nexport const signinSuccess = createAction(\r\n  AuthActionTypes.signinSuccessType,\r\n  props<{ token: string }>(),\r\n);\r\n\r\nexport const signup = createAction(AuthActionTypes.signupType, props<{ user?: IUser }>());\r\n\r\nexport const logout = createAction(AuthActionTypes.logoutType);\r\n\r\nexport const redirection = createAction(\r\n  AuthActionTypes.redirectionType,\r\n  props<{ redirectionUrl: string | null }>(),\r\n);\r\n\r\nexport const addError = createAction(\r\n  AuthActionTypes.addErrorType,\r\n  props<{ error: HttpErrorResponse }>(),\r\n);\r\n\r\nexport const removeError = createAction(AuthActionTypes.removeErrorType);\r\n\r\nexport const loading = createAction(AuthActionTypes.loadingType, props<{ loading: boolean }>());\r\n\r\nconst all = union({\r\n  storeToken,\r\n  storeUserFromToken,\r\n  storeUserFromTokenSuccess,\r\n  signin,\r\n  signup,\r\n  addError,\r\n  removeError,\r\n  loading,\r\n  redirection,\r\n  logout,\r\n});\r\n\r\nexport type CoreActionsUnion = typeof all;\r\n","import { createAction, props } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\nimport { ErrorLogQueryDto, ErrorLoggerDocumentDto } from 'src/app/dtos';\n\nexport const loadErrorLogs = createAction(\n  '[ErrorLog/API] Load ErrorLogs',\n  props<{ errorLogs: ErrorLoggerDocumentDto[] }>(),\n);\n\nexport const addErrorLog = createAction(\n  '[ErrorLog/API] Add ErrorLog',\n  props<{ errorLog: ErrorLoggerDocumentDto }>(),\n);\n\nexport const upsertErrorLog = createAction(\n  '[ErrorLog/API] Upsert ErrorLog',\n  props<{ errorLog: ErrorLoggerDocumentDto }>(),\n);\n\nexport const addErrorLogs = createAction(\n  '[ErrorLog/API] Add ErrorLogs',\n  props<{ errorLogs: ErrorLoggerDocumentDto[] }>(),\n);\n\nexport const upsertErrorLogs = createAction(\n  '[ErrorLog/API] Upsert ErrorLogs',\n  props<{ errorLogs: ErrorLoggerDocumentDto[] }>(),\n);\n\nexport const updateErrorLog = createAction(\n  '[ErrorLog/API] Update ErrorLog',\n  props<{ errorLog: Update<ErrorLoggerDocumentDto> }>(),\n);\n\nexport const updateErrorLogs = createAction(\n  '[ErrorLog/API] Update ErrorLogs',\n  props<{ errorLogs: Update<ErrorLoggerDocumentDto>[] }>(),\n);\n\nexport const deleteErrorLog = createAction(\n  '[ErrorLog/API] Delete ErrorLog',\n  props<{ id: string }>(),\n);\n\nexport const deleteErrorLogs = createAction(\n  '[ErrorLog/API] Delete ErrorLogs',\n  props<{ ids: string[] }>(),\n);\n\nexport const clearErrorLogs = createAction('[ErrorLog/API] Clear ErrorLogs');\n\n// data\nexport const getWithQuery = createAction(\n  '[ErrorLog/API/data] getWithQuery ErrorLogs',\n  props<{ query: ErrorLogQueryDto }>(),\n);\n","import { createAction, props } from '@ngrx/store';\r\nimport { State } from '../reducers';\r\n\r\nexport const hydrate = createAction('[Hydration] Hydrate');\r\n\r\nexport const hydrateSuccess = createAction(\r\n  '[Hydration] Hydrate Success',\r\n  props<{ state: State }>(),\r\n);\r\n\r\nexport const hydrateFailure = createAction('[Hydration] Hydrate Failure');\r\n","import { createAction, props } from '@ngrx/store';\r\nimport { Update } from '@ngrx/entity';\r\n\r\nimport { PersistStore } from '../../interfaces';\r\n\r\nexport const loadPersistStores = createAction(\r\n  '[PersistStore/API] Load PersistStores',\r\n  props<{ persistStores: PersistStore[] }>(),\r\n);\r\n\r\nexport const addPersistStore = createAction(\r\n  '[PersistStore/API] Add PersistStore',\r\n  props<{ persistStore: PersistStore }>(),\r\n);\r\n\r\nexport const upsertPersistStore = createAction(\r\n  '[PersistStore/API] Upsert PersistStore',\r\n  props<{ persistStore: PersistStore }>(),\r\n);\r\n\r\nexport const addPersistStores = createAction(\r\n  '[PersistStore/API] Add PersistStores',\r\n  props<{ persistStores: PersistStore[] }>(),\r\n);\r\n\r\nexport const upsertPersistStores = createAction(\r\n  '[PersistStore/API] Upsert PersistStores',\r\n  props<{ persistStores: PersistStore[] }>(),\r\n);\r\n\r\nexport const updatePersistStore = createAction(\r\n  '[PersistStore/API] Update PersistStore',\r\n  props<{ persistStore: Update<PersistStore> }>(),\r\n);\r\n\r\nexport const updatePersistStores = createAction(\r\n  '[PersistStore/API] Update PersistStores',\r\n  props<{ persistStores: Update<PersistStore>[] }>(),\r\n);\r\n\r\nexport const deletePersistStore = createAction(\r\n  '[PersistStore/API] Delete PersistStore',\r\n  props<{ id: string }>(),\r\n);\r\n\r\nexport const deletePersistStores = createAction(\r\n  '[PersistStore/API] Delete PersistStores',\r\n  props<{ ids: string[] }>(),\r\n);\r\n\r\nexport const clearPersistStores = createAction('[PersistStore/API] Clear PersistStores');\r\n","import { createAction, props, union } from '@ngrx/store';\r\nimport { Update } from '@ngrx/entity';\r\n\r\nimport { IGamer } from '../../interfaces';\r\n\r\nexport const loadPlayers = createAction(\r\n  '[Player/API] Load Players',\r\n  props<{ players: IGamer[] }>(),\r\n);\r\n\r\nexport const addPlayer = createAction('[Player/API] Add Player', props<{ player: IGamer }>());\r\n\r\nexport const upsertPlayer = createAction('[Player/API] Upsert Player', props<{ player: IGamer }>());\r\n\r\nexport const addPlayers = createAction('[Player/API] Add Players', props<{ players: IGamer[] }>());\r\n\r\nexport const upsertPlayers = createAction(\r\n  '[Player/API] Upsert Players',\r\n  props<{ players: IGamer[] }>(),\r\n);\r\n\r\nexport const updatePlayer = createAction(\r\n  '[Player/API] Update Player',\r\n  props<{ player: Update<IGamer> }>(),\r\n);\r\n\r\nexport const updatePlayers = createAction(\r\n  '[Player/API] Update Players',\r\n  props<{ players: Update<IGamer>[] }>(),\r\n);\r\n\r\nexport const deletePlayer = createAction('[Player/API] Delete Player', props<{ id: string }>());\r\n\r\nexport const deletePlayers = createAction(\r\n  '[Player/API] Delete Players',\r\n  props<{ ids: string[] }>(),\r\n);\r\n\r\nexport const clearPlayers = createAction('[Player/API] Clear Players');\r\n\r\nconst all = union({\r\n  loadPlayers,\r\n  addPlayer,\r\n  upsertPlayer,\r\n  addPlayers,\r\n  upsertPlayers,\r\n  updatePlayer,\r\n  updatePlayers,\r\n  deletePlayer,\r\n  deletePlayers,\r\n  clearPlayers,\r\n});\r\n\r\nexport type CoreActionsUnion = typeof all;\r\n","import { createAction, props, union } from '@ngrx/store';\r\nimport { Update } from '@ngrx/entity';\r\n\r\nimport { RoundMember } from '../../interfaces';\r\n\r\nexport const loadRoundMembers = createAction(\r\n  '[RoundMember/API] Load RoundMembers',\r\n  props<{ roundMembers: RoundMember[] }>(),\r\n);\r\n\r\nexport const addRoundMember = createAction(\r\n  '[RoundMember/API] Add RoundMember',\r\n  props<{ roundMember: RoundMember }>(),\r\n);\r\n\r\nexport const upsertRoundMember = createAction(\r\n  '[RoundMember/API] Upsert RoundMember',\r\n  props<{ roundMember: RoundMember }>(),\r\n);\r\n\r\nexport const addRoundMembers = createAction(\r\n  '[RoundMember/API] Add RoundMembers',\r\n  props<{ roundMembers: RoundMember[] }>(),\r\n);\r\n\r\nexport const upsertRoundMembers = createAction(\r\n  '[RoundMember/API] Upsert RoundMembers',\r\n  props<{ roundMembers: RoundMember[] }>(),\r\n);\r\n\r\nexport const updateRoundMember = createAction(\r\n  '[RoundMember/API] Update RoundMember',\r\n  props<{ roundMember: Update<RoundMember> }>(),\r\n);\r\n\r\nexport const updateRoundMembers = createAction(\r\n  '[RoundMember/API] Update RoundMembers',\r\n  props<{ roundMembers: Update<RoundMember>[] }>(),\r\n);\r\n\r\nexport const deleteRoundMember = createAction(\r\n  '[RoundMember/API] Delete RoundMember',\r\n  props<{ id: string }>(),\r\n);\r\n\r\nexport const deleteRoundMembers = createAction(\r\n  '[RoundMember/API] Delete RoundMembers',\r\n  props<{ ids: string[] }>(),\r\n);\r\n\r\nexport const clearRoundMembers = createAction('[RoundMember/API] Clear RoundMembers');\r\n\r\n// custom\r\nexport const updateRoundMembersSuccess = createAction(\r\n  '[RoundMember/API] Update RoundMembers Success',\r\n  props<{ roundMembers: RoundMember[] }>(),\r\n);\r\n\r\nexport const addRoundMembersSuccess = createAction(\r\n  '[RoundMember/API] Add RoundMembers Success',\r\n  props<{ roundMembers: RoundMember[] }>(),\r\n);\r\n\r\nexport const all = union({\r\n  loadRoundMembers,\r\n  addRoundMember,\r\n  upsertRoundMember,\r\n  addRoundMembers,\r\n  upsertRoundMembers,\r\n  updateRoundMember,\r\n  updateRoundMembers,\r\n  deleteRoundMember,\r\n  deleteRoundMembers,\r\n  clearRoundMembers,\r\n  updateRoundMembersSuccess,\r\n  addRoundMembersSuccess,\r\n});\r\n\r\nexport type CoreActionsUnion = typeof all;\r\n","import { createAction, props, union } from '@ngrx/store';\r\nimport { Update } from '@ngrx/entity';\r\n\r\nimport { Round } from '../../interfaces';\r\n\r\nexport const loadRounds = createAction('[Round/API] Load Rounds', props<{ rounds: Round[] }>());\r\n\r\nexport const addRound = createAction('[Round/API] Add Round', props<{ round: Round }>());\r\n\r\nexport const upsertRound = createAction('[Round/API] Upsert Round', props<{ round: Round }>());\r\n\r\nexport const addRounds = createAction('[Round/API] Add Rounds', props<{ rounds: Round[] }>());\r\n\r\nexport const upsertRounds = createAction('[Round/API] Upsert Rounds', props<{ rounds: Round[] }>());\r\n\r\nexport const updateRound = createAction(\r\n  '[Round/API] Update Round',\r\n  props<{ round: Update<Round> }>(),\r\n);\r\n\r\nexport const updateRounds = createAction(\r\n  '[Round/API] Update Rounds',\r\n  props<{ rounds: Update<Round>[] }>(),\r\n);\r\n\r\nexport const deleteRound = createAction('[Round/API] Delete Round', props<{ id: string }>());\r\n\r\nexport const deleteRounds = createAction('[Round/API] Delete Rounds', props<{ ids: string[] }>());\r\n\r\nexport const clearRounds = createAction('[Round/API] Clear Rounds');\r\n\r\nconst all = union({\r\n  loadRounds,\r\n  addRound,\r\n  upsertRound,\r\n  addRounds,\r\n  upsertRounds,\r\n  updateRound,\r\n  updateRounds,\r\n  deleteRound,\r\n  deleteRounds,\r\n  clearRounds,\r\n});\r\n\r\nexport type CoreActionsUnion = typeof all;\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, switchMap, catchError, tap, mergeMap, filter, withLatestFrom } from 'rxjs/operators';\r\nimport * as fromAuthActions from '../actions/auth.actions';\r\nimport { SharedService } from 'src/app/services/shared.service';\r\nimport * as fromAnalyticsActions from '../actions/analytics.actions';\r\nimport { Store } from '@ngrx/store';\r\nimport { GamerService } from '../gamer-data.service';\r\nimport { IGamer, ErrorTypes } from 'src/app/interfaces';\r\nimport { AnalyticsService } from 'src/app/modules/analytics-tab/analytics.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { ErrorHandlerService } from 'src/app/services/error-handler.service';\r\n\r\n@Injectable()\r\nexport class AnalyticsEffects {\r\n  setLoading = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(\r\n        fromAnalyticsActions.getRatingByWins,\r\n        fromAnalyticsActions.getRatingByWinsToGames,\r\n        fromAnalyticsActions.getRating,\r\n      ),\r\n      map((_) => fromAnalyticsActions.loading({ loading: true })),\r\n    );\r\n  });\r\n\r\n  cancelLoading = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAnalyticsActions.getRatingSuccess, fromAnalyticsActions.addError),\r\n      // filter(\r\n      //   (action) =>\r\n      //     // ignore error cancelling (null) actions\r\n      //     action.type !== fromAnalyticsActions.AnalyticsActionTypes.errorType ||\r\n      //     (action.type === fromAnalyticsActions.AnalyticsActionTypes.errorType && !!action.error),\r\n      // ),\r\n      map((_) => fromAnalyticsActions.loading({ loading: false })),\r\n    );\r\n  });\r\n\r\n  errorHadler = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAnalyticsActions.addError),\r\n      map(({ error }) =>\r\n        this.errorHandlerService.logError({\r\n          error,\r\n          errorType: 'analytics/error',\r\n        }),\r\n      ),\r\n      map((_) => fromAnalyticsActions.removeError()),\r\n    );\r\n  });\r\n\r\n  getRatingByWins = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAnalyticsActions.getRatingByWins),\r\n      switchMap(({ gameType }) =>\r\n        this.analyticsService.getRatingByWins(gameType).pipe(\r\n          switchMap((result) => this.addLoosers(of(result))),\r\n          map((analytics) => fromAnalyticsActions.getRatingSuccess({ analytics })),\r\n          catchError((error: HttpErrorResponse) => of(fromAnalyticsActions.addError({ error }))),\r\n        ),\r\n      ),\r\n    );\r\n  });\r\n\r\n  getRatingByWinsToGames = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAnalyticsActions.getRatingByWinsToGames),\r\n      switchMap(({ gameType }) =>\r\n        this.analyticsService.getRatingByWinsToGames(gameType).pipe(\r\n          map((analytics) => fromAnalyticsActions.getRatingSuccess({ analytics })),\r\n          catchError((error: HttpErrorResponse) => of(fromAnalyticsActions.addError({ error }))),\r\n        ),\r\n      ),\r\n    );\r\n  });\r\n\r\n  getRating = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAnalyticsActions.getRating),\r\n      switchMap(({ gameType }) => {\r\n        return this.analyticsService.getRating(gameType).pipe(\r\n          map((analytics) => fromAnalyticsActions.getRatingSuccess({ analytics })),\r\n          catchError((error: HttpErrorResponse) => of(fromAnalyticsActions.addError({ error }))),\r\n        );\r\n      }),\r\n    );\r\n  });\r\n\r\n  constructor(\r\n    private actions$: Actions<fromAuthActions.CoreActionsUnion>,\r\n    private errorHandlerService: ErrorHandlerService,\r\n    private analyticsService: AnalyticsService,\r\n    private gamerService: GamerService,\r\n  ) {}\r\n\r\n  // append gamers which hasn't wins yet\r\n  addLoosers(stream: Observable<IGamer[]>): Observable<IGamer[]> {\r\n    return stream.pipe(\r\n      withLatestFrom(this.gamerService.entities$),\r\n      map(([analytics, gamers]) => {\r\n        const losers = gamers\r\n          .filter((gamer) => !analytics.some((winner) => winner._id === gamer._id))\r\n          .map(({ _id, name, color, telegramCheckCode, telegramSubscriptionName }) => ({\r\n            _id,\r\n            name,\r\n            color,\r\n            telegramCheckCode,\r\n            telegramSubscriptionName,\r\n            rating: { wins: 0 },\r\n          }));\r\n        const fullList = analytics.concat(losers);\r\n        return fullList;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, concatLatestFrom, createEffect, ofType } from '@ngrx/effects';\r\nimport { catchError, filter, map, mergeMap, switchMap, take, tap } from 'rxjs/operators';\r\n\r\nimport * as fromAnalyticsActions from '../actions/analytics.actions';\r\nimport * as fromAuthActions from '../actions/auth.actions';\r\nimport * as fromRoundActions from '../actions/round.actions';\r\nimport * as fromRoundMemberActions from '../actions/round-member.actions';\r\nimport * as fromRoundMemberReducer from '../reducers/round-member.reducer';\r\nimport * as fromRoundReducer from '../reducers/round.reducer';\r\nimport * as fromAppActions from '../actions/app.actions';\r\nimport * as fromPlayerActions from '../actions/player.actions';\r\nimport { routerNavigatedAction } from '@ngrx/router-store';\r\n\r\nimport * as fromAppReducer from '../reducers/app.reducer';\r\nimport * as fromPlayerReducer from '../reducers/player.reducer';\r\nimport * as fromPersistStoreReducer from '../reducers/persist-store.reducer';\r\n\r\nimport { ErrorTypes, GameType, IGame, Round, RoundCfg } from 'src/app/interfaces';\r\nimport { combineLatest, of, OperatorFunction } from 'rxjs';\r\nimport { Store } from '@ngrx/store';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { environment } from 'src/environments/environment';\r\nimport { SharedService } from 'src/app/services/shared.service';\r\nimport { GameService } from '../game-data.service';\r\nimport {\r\n  EntityAction,\r\n  EntityActionFactory,\r\n  EntityOp,\r\n  ofEntityOp,\r\n  ofEntityType,\r\n  OP_ERROR,\r\n} from '@ngrx/data';\r\nimport { once } from 'events';\r\nimport { TelegramService } from 'src/app/modules/auth/telegram/telegram.service';\r\nimport { ErrorHandlerService } from 'src/app/services/error-handler.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { GamerService } from '../gamer-data.service';\r\n\r\n@Injectable()\r\nexport class AppEffects {\r\n  setLoading = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAnalyticsActions.loading, fromAuthActions.loading),\r\n      map((action) => fromAppActions.loading({ loading: action.loading })),\r\n    );\r\n  });\r\n\r\n  cancelLoading = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromRoundActions.clearRounds, fromAppActions.addError),\r\n      map((_) => fromAppActions.loading({ loading: false })),\r\n    );\r\n  });\r\n\r\n  // entityOpErrorHadler = createEffect(() => {\r\n  //   return this.actions$.pipe(\r\n  //     ofEntityOp(),\r\n  //     tap((x) => console.log('action ', x)),\r\n  //     filter((ea: EntityAction) => ea.payload.entityOp.endsWith(OP_ERROR)),\r\n  //     tap((x) => console.log('x', x)),\r\n  //     map(({ payload }) =>\r\n  //       fromAppActions.addError({\r\n  //         error: payload.data.error,\r\n  //         errorType: ErrorTypesEnum.ngrxDataError,\r\n  //       }),\r\n  //     ),\r\n  //   );\r\n  // });\r\n\r\n  errorHadler = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAppActions.addError),\r\n      switchMap(({ error, errorType }) =>\r\n        this.errorHandlerService.logError({\r\n          error,\r\n          errorType: errorType || 'app/error',\r\n        }),\r\n      ),\r\n      map((_) => fromAnalyticsActions.removeError()),\r\n    );\r\n  });\r\n\r\n  finishGame = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAppActions.finishGame),\r\n      switchMap(() => {\r\n        const game: IGame = this.sharedService.createResultOfGame();\r\n        console.log('game', game);\r\n        // save to db\r\n        return this.gameService.add(game).pipe(\r\n          switchMap((_) => this.sharedService.presentModalFinishGame(game)),\r\n          map(() => fromAppActions.clearGame()),\r\n          catchError((error: HttpErrorResponse) =>\r\n            of(fromAppActions.addError({ error, errorType: 'ngrxDataError' })),\r\n          ),\r\n        );\r\n      }),\r\n    );\r\n  });\r\n\r\n  getGamers = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAuthActions.storeUserFromTokenSuccess),\r\n      switchMap(() =>\r\n        this.gamerService.load().pipe(\r\n          map(() => fromAppActions.nop()),\r\n          catchError((error: HttpErrorResponse) =>\r\n            of(fromAppActions.addError({ error, errorType: 'ngrxDataError' })),\r\n          ),\r\n        ),\r\n      ),\r\n      // map(() =>\r\n      //   this.entityActionFactory.create('gamer', EntityOp.QUERY_LOAD, null, {\r\n      //     tag: 'gamer/on storeUserFromToken Success',\r\n      //   }),\r\n      // ),\r\n    );\r\n  });\r\n\r\n  gameType = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(routerNavigatedAction),\r\n      concatLatestFrom(() => this.store.select(fromAppReducer.selectGameType)),\r\n      map(([{ payload }, gameType]) => {\r\n        const { urlAfterRedirects } = payload.event;\r\n        const payloadGameType = urlAfterRedirects.split('/');\r\n        if (payloadGameType[1] === 'games' || payloadGameType[1] === 'analytics') {\r\n          if (!gameType) {\r\n            // initial state, get gameType from url\r\n            return fromAppActions.gameType({\r\n              gameType: payloadGameType[2] as GameType,\r\n            });\r\n          }\r\n          if (payloadGameType[2] !== gameType) {\r\n            // fire action only if game was changed\r\n            // change game type and clear previous game\r\n            return fromAppActions.gameTypeAndClearGame({\r\n              gameType: payloadGameType[2] as GameType,\r\n            });\r\n          }\r\n        }\r\n        return fromAppActions.nop();\r\n      }),\r\n    );\r\n  });\r\n\r\n  clearGame = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAppActions.gameTypeAndClearGame),\r\n      map(() => fromAppActions.clearGame()),\r\n    );\r\n  });\r\n\r\n  clearRounds = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAppActions.clearGame),\r\n      map((_) => fromRoundActions.clearRounds()),\r\n    );\r\n  });\r\n\r\n  clearRoundMembers = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAppActions.clearGame),\r\n      map((_) => fromRoundMemberActions.clearRoundMembers()),\r\n    );\r\n  });\r\n\r\n  addRounds = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAppActions.loadGame),\r\n      map(({ rounds }) => fromRoundActions.addRounds({ rounds })),\r\n      catchError((error: HttpErrorResponse) => of(fromAnalyticsActions.addError({ error }))),\r\n    );\r\n  });\r\n\r\n  addRoundMembers = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAppActions.loadGame),\r\n      map(({ roundMembers }) => fromRoundMemberActions.addRoundMembers({ roundMembers })),\r\n      catchError((error: HttpErrorResponse) => of(fromAnalyticsActions.addError({ error }))),\r\n    );\r\n  });\r\n\r\n  checkOpenNextRound = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromRoundMemberActions.updateRoundMembersSuccess),\r\n      concatLatestFrom(() => this.store.select(fromAppReducer.selectGameType)),\r\n      filter(([action, gameType]) => false), // gameType === 'thousand'),\r\n      concatLatestFrom(() => this.store.select(fromRoundMemberReducer.selectAllRoundMembers)),\r\n      map(([action, roundMembers]) => {\r\n        const qtyOfPlayedSubrounds = roundMembers[roundMembers.length - 1].namedScoresLine.length;\r\n        const qtyOfPlayers = new Set(roundMembers.map((roundMember) => roundMember.player)).size;\r\n        if (qtyOfPlayedSubrounds >= qtyOfPlayers) {\r\n          // TODO  === or error\r\n          return fromAppActions.openNextRound();\r\n        }\r\n        return fromAppActions.nop();\r\n      }),\r\n    );\r\n  });\r\n\r\n  openNextRound = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAppActions.openNextRound),\r\n      concatLatestFrom(() => [\r\n        this.store.select(fromRoundReducer.selectAllRounds),\r\n        this.store.select(fromPlayerReducer.selectAllPlayers),\r\n        this.store.select(fromAppReducer.selectGameType),\r\n      ]),\r\n      map(([action, rounds, players, gameType]) => {\r\n        const nextRound: RoundCfg = environment.games[gameType].rounds[1];\r\n\r\n        const members = players.map((player) => ({\r\n          _id: uuidv4(),\r\n          player: player._id,\r\n          scoresLine: nextRound.initialScoresLine,\r\n          namedScoresLine: nextRound.initialNamedScoresLine,\r\n        }));\r\n        const newRoundMembers = [...members];\r\n        const newRounds = [\r\n          {\r\n            _id: nextRound._id + (rounds.length + 1),\r\n            roundMembers: members.map((member) => member._id),\r\n            clientGame: rounds[0].clientGame,\r\n            icon: nextRound.icon,\r\n            name: nextRound._id,\r\n            namePostfix: rounds.length + 1 + '',\r\n          },\r\n        ];\r\n        return fromAppActions.loadGame({\r\n          roundMembers: newRoundMembers,\r\n          rounds: newRounds,\r\n        });\r\n      }),\r\n    );\r\n  });\r\n\r\n  createRounds = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAppActions.createRounds),\r\n      concatLatestFrom(() => [\r\n        this.store.select(fromPlayerReducer.selectAllPlayers),\r\n        this.store.select(fromAppReducer.selectGameType),\r\n      ]),\r\n      map(([action, players, gameType]) => {\r\n        const clientGame = {\r\n          _id: uuidv4(),\r\n          type: gameType,\r\n        };\r\n        const roundsCfg: RoundCfg[] = environment.games[gameType].rounds;\r\n        let roundMembers = [];\r\n        const rounds: Round[] = roundsCfg\r\n          .filter((roundCfg: RoundCfg) => roundCfg._id !== 'start')\r\n          .map((roundCfg: RoundCfg) => {\r\n            const members = players.map((player) => ({\r\n              _id: uuidv4(),\r\n              player: player._id,\r\n              scoresLine: roundCfg.initialScoresLine,\r\n              namedScoresLine: roundCfg.initialNamedScoresLine,\r\n            }));\r\n            roundMembers = [...roundMembers, ...members];\r\n            return {\r\n              _id: roundCfg._id + roundCfg.namePostfix,\r\n              roundMembers: members.map((member) => member._id),\r\n              clientGame,\r\n              icon: roundCfg.icon,\r\n              name: roundCfg._id,\r\n              namePostfix: roundCfg.namePostfix,\r\n            };\r\n          });\r\n        return fromAppActions.loadGame({ roundMembers, rounds });\r\n      }),\r\n    );\r\n  });\r\n\r\n  environment = environment;\r\n  constructor(\r\n    private actions$: Actions<fromAppActions.CoreActionsUnion | EntityAction<any>>,\r\n    private store: Store,\r\n    private sharedService: SharedService,\r\n    private gameService: GameService,\r\n    private gamerService: GamerService,\r\n    private errorHandlerService: ErrorHandlerService,\r\n    private entityActionFactory: EntityActionFactory,\r\n  ) {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Action, Store } from '@ngrx/store';\r\nimport {\r\n  Actions,\r\n  concatLatestFrom,\r\n  createEffect,\r\n  ofType,\r\n  OnInitEffects,\r\n} from '@ngrx/effects';\r\nimport { noop, Observable, of, throwError } from 'rxjs';\r\nimport {\r\n  map,\r\n  switchMap,\r\n  catchError,\r\n  tap,\r\n  mergeMap,\r\n  filter,\r\n  withLatestFrom,\r\n} from 'rxjs/operators';\r\n\r\nimport * as fromAuthActions from '../actions/auth.actions';\r\nimport * as fromRoundActions from '../actions/round.actions';\r\nimport * as fromPlayerActions from '../actions/player.actions';\r\nimport * as fromAppActions from '../actions/app.actions';\r\n\r\nimport { AuthService } from '../../modules/auth/auth.service';\r\nimport { ErrorTypes, IUser } from 'src/app/interfaces';\r\nimport { userInfo } from 'os';\r\nimport { GamerService } from '../gamer-data.service';\r\nimport { EntityActionFactory, EntityOp, MergeStrategy } from '@ngrx/data';\r\nimport { SharedService } from 'src/app/services/shared.service';\r\nimport { State } from '../reducers';\r\nimport { selectUser } from '../reducers/auth.reducer';\r\nimport { nop } from '../actions/app.actions';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { ErrorHandlerService } from 'src/app/services/error-handler.service';\r\n\r\n@Injectable()\r\nexport class AuthEffects implements OnInitEffects {\r\n  setLoading = createEffect(() =>\r\n     this.actions$.pipe(\r\n      ofType(fromAuthActions.signin, fromAuthActions.signup, fromAuthActions.logout),\r\n      map((_) => fromAuthActions.loading({ loading: true })),\r\n    )\r\n  );\r\n\r\n  cancelLoading = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAuthActions.storeUserFromTokenSuccess, fromAuthActions.addError),\r\n      // filter(\r\n      //   (action) =>\r\n      //     // ignore error cancelling (null) actions\r\n      //     action.type !== fromAuthActions.AuthActionTypes.errorType ||\r\n      //     (action.type === fromAuthActions.AuthActionTypes.errorType && !!action.error),\r\n      // ),\r\n      map((_) => fromAuthActions.loading({ loading: false })),\r\n    );\r\n  });\r\n\r\n  errorHadler = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAuthActions.addError),\r\n      map(({ error }) =>\r\n        this.errorHandlerService.logError({\r\n          error,\r\n          errorType: 'auth/error',\r\n        }),\r\n      ),\r\n      map((_) => fromAuthActions.removeError()),\r\n    );\r\n  });\r\n\r\n  // signin, signup, logout -> clearRounds\r\n  // signup, logout -> clearPlayers\r\n  // signin, signup, logout -> storeToken -> storeUserFromToken -> storeUserFromTokenSuccess\r\n\r\n  signin = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAuthActions.signin),\r\n      map((action) => action.user),\r\n      switchMap((user) =>\r\n        this.authService.signin(user).pipe(\r\n          map((token) => fromAuthActions.storeToken({ token })),\r\n          catchError((error: HttpErrorResponse) =>\r\n            of(fromAuthActions.addError({ error })),\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n  });\r\n\r\n  signup = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAuthActions.signup, fromAuthActions.logout),\r\n      map((action = null) => {\r\n        if ('user' in action) {\r\n          return action.user;\r\n        }\r\n        return null;\r\n      }),\r\n      switchMap((user) =>\r\n        this.authService.signup(user).pipe(\r\n          map((token) => fromAuthActions.storeToken({ token })),\r\n          catchError((error: HttpErrorResponse) =>\r\n            of(fromAuthActions.addError({ error })),\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n  });\r\n\r\n  clearRounds = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAuthActions.signup, fromAuthActions.signin, fromAuthActions.logout),\r\n      map(() => fromRoundActions.clearRounds()),\r\n      catchError((error: HttpErrorResponse) => of(fromAuthActions.addError({ error }))),\r\n    );\r\n  });\r\n\r\n  clearPlayers = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAuthActions.signup, fromAuthActions.logout),\r\n      map(() => fromPlayerActions.clearPlayers()),\r\n      catchError((error: HttpErrorResponse) => of(fromAuthActions.addError({ error }))),\r\n    );\r\n  });\r\n\r\n  storeToken = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAuthActions.storeToken),\r\n      map((action) => action.token),\r\n      switchMap((token) => this.sharedService.setToken(token)),\r\n      map(() => fromAuthActions.storeUserFromToken()),\r\n      catchError((error: HttpErrorResponse) => of(fromAuthActions.addError({ error }))),\r\n    );\r\n  });\r\n\r\n  storeUserFromToken = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAuthActions.storeUserFromToken),\r\n      switchMap(() =>\r\n        this.sharedService.getTokenAndDecode().pipe(\r\n          map((user) => fromAuthActions.storeUserFromTokenSuccess({ user })),\r\n          catchError((error) => {\r\n            return of(fromAuthActions.signup({}));\r\n          }),\r\n        ),\r\n      ),\r\n      catchError((error: HttpErrorResponse) => of(fromAuthActions.addError({ error }))),\r\n    );\r\n  });\r\n\r\n  redirectAfterSignin = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAuthActions.storeUserFromTokenSuccess),\r\n      map((payload) => {\r\n        if (payload.user?.role === 'member' || payload.user?.role === 'admin') {\r\n          return fromAuthActions.redirection({ redirectionUrl: '/' });\r\n        }\r\n        return nop();\r\n      }),\r\n    );\r\n  });\r\n\r\n  removeAllRecentPlayers = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAuthActions.signinSuccess),\r\n      map((action) => action.token),\r\n      map((token) => fromAuthActions.storeToken({ token })),\r\n      catchError((error: HttpErrorResponse) => of(fromAuthActions.addError({ error }))),\r\n    );\r\n  });\r\n\r\n  constructor(\r\n    private actions$: Actions<fromAuthActions.CoreActionsUnion>,\r\n    private errorHandlerService: ErrorHandlerService,\r\n    private authService: AuthService,\r\n    private sharedService: SharedService,\r\n    private entityActionFactory: EntityActionFactory,\r\n    private gamerService: GamerService,\r\n  ) {}\r\n\r\n  ngrxOnInitEffects(): Action {\r\n    return fromAuthActions.storeUserFromToken();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { ErrorLogService } from 'src/app/modules/auth/error-log/error-log.service';\nimport * as fromErrorLogActions from '../actions/error-log.actions';\n\n@Injectable()\nexport class ErrorLogEffects {\n  getWithQuery = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(fromErrorLogActions.getWithQuery),\n      switchMap(({ query }) => this.errorLogService.getWithQuery(query)),\n      map((errorLogs) => fromErrorLogActions.loadErrorLogs({ errorLogs })),\n    );\n  });\n\n  constructor(private actions$: Actions, private errorLogService: ErrorLogService) {}\n}\n","import { Injectable } from '@angular/core';\r\nimport { Actions, concatLatestFrom, createEffect, ofType, OnInitEffects } from '@ngrx/effects';\r\nimport { Action, Store } from '@ngrx/store';\r\nimport { distinctUntilChanged, map, switchMap, tap } from 'rxjs/operators';\r\nimport { selectUrlRouter, State } from '../reducers';\r\nimport * as HydrationActions from '../actions/hydration.actions';\r\nimport { SharedService } from 'src/app/services/shared.service';\r\nimport { Router } from '@angular/router';\r\nimport { RouterState } from '@ngrx/router-store';\r\nimport { redirection } from '../actions/app.actions';\r\n\r\n@Injectable()\r\nexport class HydrationEffects implements OnInitEffects {\r\n  hydrate$ = createEffect(() => {\r\n    return this.action$.pipe(\r\n      ofType(HydrationActions.hydrate),\r\n      switchMap(() => this.sharedService.getFromStorage('appState')),\r\n      map((storageValue) => {\r\n        if (storageValue) {\r\n          const state = JSON.parse(storageValue);\r\n          return HydrationActions.hydrateSuccess({ state });\r\n        }\r\n        return HydrationActions.hydrateFailure();\r\n      }),\r\n    );\r\n  });\r\n\r\n  navigate$ = createEffect(() => {\r\n    return this.action$.pipe(\r\n      ofType(HydrationActions.hydrateSuccess),\r\n      concatLatestFrom(() => this.store.select(selectUrlRouter)),\r\n      map(([action, url]) => {\r\n        return redirection({ redirectionUrl: url });\r\n      }),\r\n    );\r\n  });\r\n\r\n  serialize$ = createEffect(\r\n    () => {\r\n      return this.action$.pipe(\r\n        ofType(HydrationActions.hydrateSuccess, HydrationActions.hydrateFailure),\r\n        switchMap(() => this.store),\r\n        distinctUntilChanged(),\r\n        switchMap((store: State) => {\r\n          return this.sharedService.setToStorage(\r\n            'appState',\r\n            JSON.stringify({\r\n              players: store.players,\r\n              rounds: store.rounds,\r\n              roundMembers: store.roundMembers,\r\n              persistStore: store.persistStore,\r\n              router: store.router,\r\n            }),\r\n          );\r\n        }),\r\n      );\r\n    },\r\n    { dispatch: false },\r\n  );\r\n\r\n  constructor(\r\n    private action$: Actions,\r\n    private store: Store,\r\n    private sharedService: SharedService,\r\n    private router: Router,\r\n  ) {}\r\n\r\n  ngrxOnInitEffects(): Action {\r\n    return HydrationActions.hydrate();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, concatLatestFrom, createEffect, ofType, OnInitEffects } from '@ngrx/effects';\r\nimport { Action, Store } from '@ngrx/store';\r\nimport {\r\n  distinctUntilChanged,\r\n  map,\r\n  mergeMap,\r\n  switchMap,\r\n  tap,\r\n  withLatestFrom,\r\n} from 'rxjs/operators';\r\nimport { State } from '../reducers';\r\nimport * as fromPlayerReducer from '../reducers/player.reducer';\r\nimport * as fromRoundMemberReducer from '../reducers/round-member.reducer';\r\nimport * as fromRoundReducer from '../reducers/round.reducer';\r\nimport * as fromAppReducer from '../reducers/app.reducer';\r\nimport * as fromPersistStoreReducer from '../reducers/persist-store.reducer';\r\nimport * as fromPersistStoreActions from '../actions/persist-store.actions';\r\nimport * as fromAppActions from '../actions/app.actions';\r\nimport * as fromPlayerActions from '../actions/player.actions';\r\n\r\nimport { SharedService } from 'src/app/services/shared.service';\r\n\r\n@Injectable()\r\nexport class PersistStoreEffects {\r\n  upsertPersistStore$ = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(\r\n        fromPlayerActions.addPlayer,\r\n        fromPlayerActions.addPlayers,\r\n        fromPlayerActions.clearPlayers,\r\n        fromPlayerActions.deletePlayer,\r\n        fromPlayerActions.deletePlayers,\r\n        fromPlayerActions.loadPlayers,\r\n        fromPlayerActions.updatePlayer,\r\n        fromPlayerActions.updatePlayer,\r\n        fromPlayerActions.updatePlayers,\r\n        fromPlayerActions.upsertPlayer,\r\n        fromPlayerActions.upsertPlayers,\r\n      ),\r\n      concatLatestFrom(() => [\r\n        this.store.select(fromAppReducer.selectGameType),\r\n        this.store.select(fromPlayerReducer.selectAllPlayers),\r\n      ]),\r\n      map(([_, gameType, players]) => {\r\n        if (!gameType) {\r\n          return fromAppActions.nop();\r\n        }\r\n        return fromPersistStoreActions.upsertPersistStore({\r\n          persistStore: { _id: gameType, players },\r\n        });\r\n      }),\r\n    );\r\n  });\r\n\r\n  getFromPersistStore = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAppActions.clearGame),\r\n      concatLatestFrom(() => this.store.select(fromAppReducer.selectGameType)),\r\n      concatLatestFrom(([action, gameType]) =>\r\n        this.store.select(fromPersistStoreReducer.selectByIdPersistStore(gameType)),\r\n      ),\r\n      map(([action, persistStore]) => {\r\n        if (persistStore && persistStore.players) {\r\n          return fromPlayerActions.loadPlayers({ players: persistStore.players });\r\n        } else {\r\n          return fromPlayerActions.clearPlayers();\r\n        }\r\n      }),\r\n    );\r\n  });\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private store: Store,\r\n    private sharedService: SharedService,\r\n  ) {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, concatLatestFrom, createEffect, ofType } from '@ngrx/effects';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport * as fromPlayerActions from '../actions/player.actions';\r\nimport * as fromAppActions from '../actions/app.actions';\r\nimport * as fromPersistStoreReducer from '../reducers/persist-store.reducer';\r\nimport { Store } from '@ngrx/store';\r\n\r\n@Injectable()\r\nexport class PlayerEffects {\r\n  constructor(\r\n    private actions$: Actions<fromPlayerActions.CoreActionsUnion>,\r\n    private store: Store,\r\n  ) {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, concatLatestFrom, createEffect, ofType } from '@ngrx/effects';\r\nimport { filter, map, tap } from 'rxjs/operators';\r\n\r\nimport * as fromRoundMemberActions from '../actions/round-member.actions';\r\nimport * as fromAppActions from '../actions/app.actions';\r\nimport * as fromRoundMemberReducer from '../reducers/round-member.reducer';\r\nimport { Store } from '@ngrx/store';\r\n\r\n@Injectable()\r\nexport class RoundMemberEffects {\r\n  updateRoundMembersSuccess = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromRoundMemberActions.updateRoundMembers),\r\n      concatLatestFrom(() => this.store.select(fromRoundMemberReducer.selectAllRoundMembers)),\r\n      map(([action, roundMembers]) =>\r\n        fromRoundMemberActions.updateRoundMembersSuccess({ roundMembers }),\r\n      ),\r\n    );\r\n  });\r\n\r\n  addRoundMembersSuccess = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromRoundMemberActions.addRoundMembers),\r\n      map(({ roundMembers }) => fromRoundMemberActions.addRoundMembersSuccess({ roundMembers })),\r\n    );\r\n  });\r\n\r\n  // loadGame = createEffect(() => {\r\n  //     return this.actions$.pipe(\r\n  //         ofType(fromAppActions.loadGame),\r\n  //         map(({roundMembers}) => fromRoundMemberActions.loadRoundMembers({roundMembers})),\r\n  //     );\r\n  // });\r\n\r\n  constructor(\r\n    private actions$: Actions<fromRoundMemberActions.CoreActionsUnion>,\r\n    private store: Store,\r\n  ) {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, concatLatestFrom, createEffect, ofType } from '@ngrx/effects';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport * as fromRoundActions from '../actions/round.actions';\r\nimport * as fromAppActions from '../actions/app.actions';\r\nimport * as fromPersistStoreReducer from '../reducers/persist-store.reducer';\r\n\r\nimport { Store } from '@ngrx/store';\r\n\r\n@Injectable()\r\nexport class RoundEffects {\r\n  // clearGame = createEffect(() => {\r\n  //     return this.actions$.pipe(\r\n  //         ofType(fromAppActions.clearGame),\r\n  //         map((_) => fromRoundActions.clearRounds()),\r\n  //     );\r\n  // });\r\n\r\n  // loadGame = createEffect(() => {\r\n  //     return this.actions$.pipe(\r\n  //         ofType(fromAppActions.loadGame),\r\n  //         map(({ rounds }) => fromRoundActions.loadRounds({ rounds })),\r\n  //     );\r\n  // });\r\n\r\n  constructor(private actions$: Actions<fromRoundActions.CoreActionsUnion>, private store: Store) {}\r\n}\r\n","import { EntityMetadataMap, EntityDataModuleConfig } from '@ngrx/data';\r\n\r\nexport const entityMetadata: EntityMetadataMap = {\r\n  gamer: {\r\n    selectId: (gamer) => gamer._id,\r\n    entityDispatcherOptions: {\r\n      optimisticAdd: false,\r\n      optimisticUpdate: false,\r\n      optimisticDelete: false,\r\n    },\r\n  },\r\n  game: {\r\n    selectId: (game) => game._id,\r\n    entityDispatcherOptions: {\r\n      optimisticAdd: false,\r\n      optimisticUpdate: false,\r\n      optimisticDelete: false,\r\n    },\r\n  },\r\n};\r\n\r\nconst pluralNames = {\r\n  gamer: 'gamers',\r\n  game: 'games',\r\n};\r\n\r\nexport const entityConfig: EntityDataModuleConfig = {\r\n  entityMetadata,\r\n  pluralNames,\r\n};\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  DefaultDataService,\r\n  EntityCollectionServiceBase,\r\n  EntityCollectionServiceElementsFactory,\r\n  HttpUrlGenerator,\r\n} from '@ngrx/data';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { IGame } from '../interfaces';\r\n\r\n@Injectable()\r\nexport class GameDataService extends DefaultDataService<IGame> {\r\n  constructor(http: HttpClient, httpUrlGenerator: HttpUrlGenerator) {\r\n    super('game', http, httpUrlGenerator);\r\n  }\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class GameService extends EntityCollectionServiceBase<IGame> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('game', serviceElementsFactory);\r\n  }\r\n\r\n  // add(entity: IGame): Observable<IGame> {\r\n  //   console.log('game data service - add', entity);\r\n  //   return super.add(entity);\r\n  //   // .pipe(\r\n  //   //       catchError((error) => {\r\n  //   //         console.log('game data service - add error', error);\r\n  //   // return of(null)\r\n  //   //         return throwError(error);\r\n  //   //       }),\r\n  //   // );\r\n  // }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  EntityCollectionServiceBase,\r\n  DefaultDataService,\r\n  HttpUrlGenerator,\r\n  EntityCollectionServiceElementsFactory,\r\n  EntityActionOptions,\r\n} from '@ngrx/data';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { IGamer, IUser } from '../interfaces';\r\n\r\n@Injectable()\r\nexport class GamerDataService extends DefaultDataService<IGamer> {\r\n  constructor(http: HttpClient, httpUrlGenerator: HttpUrlGenerator) {\r\n    super('gamer', http, httpUrlGenerator);\r\n  }\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class GamerService extends EntityCollectionServiceBase<IGamer> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('gamer', serviceElementsFactory);\r\n  }\r\n}\r\n","import { createReducer, on } from '@ngrx/store';\r\nimport { IGamer } from '../../interfaces';\r\nimport * as fromAnalyticsActions from '../actions/analytics.actions';\r\nimport { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\nexport const analyticsFeatureKey = 'analytics';\r\n\r\nexport interface State {\r\n  analytics: IGamer[];\r\n  error: HttpErrorResponse | null;\r\n  loading: boolean;\r\n}\r\n\r\nexport const initialState: State = {\r\n  analytics: [],\r\n  error: null,\r\n  loading: false,\r\n};\r\n\r\nexport const reducer = createReducer(\r\n  initialState,\r\n  on(\r\n    fromAnalyticsActions.getRatingSuccess,\r\n    (state, { analytics }): State => ({\r\n      ...state,\r\n      analytics,\r\n      error: null,\r\n    }),\r\n  ),\r\n  on(\r\n    fromAnalyticsActions.addMany,\r\n    (state, { analytics }): State => ({\r\n      ...state,\r\n      analytics: [...state.analytics, ...analytics],\r\n      error: null,\r\n    }),\r\n  ),\r\n  on(\r\n    fromAnalyticsActions.addError,\r\n    (state, { error }): State => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n  ),\r\n  on(\r\n    fromAnalyticsActions.removeError,\r\n    (state, _): State => ({\r\n      ...state,\r\n      error: null,\r\n    }),\r\n  ),\r\n  on(\r\n    fromAnalyticsActions.loading,\r\n    (state, { loading }): State => ({\r\n      ...state,\r\n      loading,\r\n    }),\r\n  ),\r\n);\r\n\r\nconst selectFeature = createFeatureSelector<State>(analyticsFeatureKey);\r\n\r\nexport const selectRating = createSelector(selectFeature, (state) => state.analytics);\r\nexport const selectLoading = createSelector(selectFeature, (state) => state.loading);\r\n","import { createReducer, on } from '@ngrx/store';\r\nimport * as fromAppActions from '../actions/app.actions';\r\nimport { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport { ErrorTypes, GameType } from 'src/app/interfaces';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nexport const appFeatureKey = 'app';\r\n\r\nexport interface State {\r\n  loading: boolean;\r\n  gameType: GameType | null;\r\n  redirectionUrl: string | null;\r\n  error: any | null;\r\n  errorType?: ErrorTypes | null;\r\n}\r\n\r\nexport const initialState: State = {\r\n  loading: false,\r\n  gameType: null, //Object.keys(environment.games)[0] as GameType,\r\n  redirectionUrl: null,\r\n  error: null,\r\n};\r\n\r\nexport const reducer = createReducer(\r\n  initialState,\r\n  on(\r\n    fromAppActions.loading,\r\n    (state, { loading }): State => ({\r\n      ...state,\r\n      loading,\r\n    }),\r\n  ),\r\n  on(\r\n    fromAppActions.finishGame,\r\n    (state, _): State => ({\r\n      ...state,\r\n      loading: true,\r\n    }),\r\n  ),\r\n  on(\r\n    fromAppActions.gameType,\r\n    (state, { gameType }): State => ({\r\n      ...state,\r\n      gameType,\r\n    }),\r\n  ),\r\n  on(\r\n    fromAppActions.gameTypeAndClearGame,\r\n    (state, { gameType }): State => ({\r\n      ...state,\r\n      gameType,\r\n    }),\r\n  ),\r\n  on(\r\n    fromAppActions.redirection,\r\n    (state, { redirectionUrl }): State => ({\r\n      ...state,\r\n      redirectionUrl,\r\n    }),\r\n  ),\r\n  on(\r\n    fromAppActions.addError,\r\n    (state, { error, errorType }): State => ({\r\n      ...state,\r\n      error,\r\n      errorType,\r\n    }),\r\n  ),\r\n  on(\r\n    fromAppActions.removeError,\r\n    (state, _): State => ({\r\n      ...state,\r\n      error: null,\r\n      errorType: null,\r\n    }),\r\n  ),\r\n);\r\n\r\nconst selectFeature = createFeatureSelector<State>(appFeatureKey);\r\n\r\nexport const selectLoading = createSelector(selectFeature, (state) => state.loading);\r\nexport const selectGameType = createSelector(selectFeature, (state) => state.gameType);\r\nexport const selectRedirectionUrl = createSelector(selectFeature, (state) => state.redirectionUrl);\r\n","import { createReducer, on } from '@ngrx/store';\r\nimport { IUser } from '../../interfaces';\r\nimport * as fromAuthActions from '../actions/auth.actions';\r\nimport { createFeatureSelector, createSelector } from '@ngrx/store';\r\n\r\nexport const authFeatureKey = 'auth';\r\n\r\nexport interface State {\r\n  user: IUser;\r\n  error: any;\r\n  redirectionUrl: string | null;\r\n  loading: boolean;\r\n}\r\n\r\nexport const initialState: State = {\r\n  user: null,\r\n  error: null,\r\n  redirectionUrl: null,\r\n  loading: false,\r\n};\r\n\r\nexport const reducer = createReducer(\r\n  initialState,\r\n  on(\r\n    fromAuthActions.storeUserFromTokenSuccess,\r\n    (state, { user }): State => ({\r\n      ...state,\r\n      user,\r\n      error: null,\r\n    }),\r\n  ),\r\n  on(\r\n    fromAuthActions.addError,\r\n    (state, { error }): State => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n  ),\r\n  on(\r\n    fromAuthActions.removeError,\r\n    (state, _): State => ({\r\n      ...state,\r\n      error: null,\r\n    }),\r\n  ),\r\n  on(\r\n    fromAuthActions.loading,\r\n    (state, { loading }): State => ({\r\n      ...state,\r\n      loading,\r\n    }),\r\n  ),\r\n  on(\r\n    fromAuthActions.redirection,\r\n    (state, { redirectionUrl }): State => ({\r\n      ...state,\r\n      redirectionUrl,\r\n    }),\r\n  ),\r\n);\r\n\r\nconst selectFeature = createFeatureSelector<State>(authFeatureKey);\r\n\r\nexport const selectUser = createSelector(selectFeature, (state) => state.user);\r\nexport const selectUserRole = createSelector(selectFeature, (state) => state.user?.role);\r\nexport const selectRedirectionUrl = createSelector(selectFeature, (state) => state.redirectionUrl);\r\n","import { Action, createFeatureSelector, createReducer, createSelector, on } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport * as ErrorLogActions from '../actions/error-log.actions';\nimport { ErrorLoggerDocumentDto } from 'src/app/dtos';\n\nexport const errorLogsFeatureKey = 'errorLogs';\n\nexport type State = EntityState<ErrorLoggerDocumentDto>;\n\nexport const adapter: EntityAdapter<ErrorLoggerDocumentDto> =\n  createEntityAdapter<ErrorLoggerDocumentDto>({\n    selectId: (errorLog: ErrorLoggerDocumentDto) => errorLog._id,\n  });\n\nexport const initialState: State = adapter.getInitialState({\n  // additional entity state properties\n});\n\nexport const reducer = createReducer(\n  initialState,\n  on(ErrorLogActions.addErrorLog, (state, action) =>\n    adapter.addOne(action.errorLog, state),\n  ),\n  on(ErrorLogActions.upsertErrorLog, (state, action) =>\n    adapter.upsertOne(action.errorLog, state),\n  ),\n  on(ErrorLogActions.addErrorLogs, (state, action) =>\n    adapter.addMany(action.errorLogs, state),\n  ),\n  on(ErrorLogActions.upsertErrorLogs, (state, action) =>\n    adapter.upsertMany(action.errorLogs, state),\n  ),\n  on(ErrorLogActions.updateErrorLog, (state, action) =>\n    adapter.updateOne(action.errorLog, state),\n  ),\n  on(ErrorLogActions.updateErrorLogs, (state, action) =>\n    adapter.updateMany(action.errorLogs, state),\n  ),\n  on(ErrorLogActions.deleteErrorLog, (state, action) =>\n    adapter.removeOne(action.id, state),\n  ),\n  on(ErrorLogActions.deleteErrorLogs, (state, action) =>\n    adapter.removeMany(action.ids, state),\n  ),\n  on(ErrorLogActions.loadErrorLogs, (state, action) =>\n    adapter.setAll(action.errorLogs, state),\n  ),\n  on(ErrorLogActions.clearErrorLogs, (state) => adapter.removeAll(state)),\n);\n\nexport const { selectIds, selectEntities, selectAll, selectTotal } =\n  adapter.getSelectors();\n\nexport const selectFeature = createFeatureSelector<State>(errorLogsFeatureKey);\nexport const selectAllErrorLogs = createSelector(selectFeature, selectAll);\nexport const selectEntitiesAllErrorLogs = createSelector(selectFeature, selectEntities);\nexport const selectByIdRoundMember = (id: string) =>\n  createSelector(selectEntitiesAllErrorLogs, (entities) => entities[id]);\n","import { Action, ActionReducer } from '@ngrx/store';\r\nimport * as HydrationActions from '../actions/hydration.actions';\r\nimport { State } from '../reducers';\r\n\r\nconst isHydrateSuccess = (\r\n  action: Action,\r\n): action is ReturnType<typeof HydrationActions.hydrateSuccess> => {\r\n  return action.type === HydrationActions.hydrateSuccess.type;\r\n};\r\n\r\nexport const hydrationMetaReducer = (reducer: ActionReducer<State>): ActionReducer<State> => {\r\n  return (state, action) => {\r\n    if (isHydrateSuccess(action)) {\r\n      return { ...state, ...action.state };\r\n    } else {\r\n      return reducer(state, action);\r\n    }\r\n  };\r\n};\r\n","import {\r\n  ActionReducer,\r\n  ActionReducerMap,\r\n  createFeatureSelector,\r\n  createSelector,\r\n  MetaReducer,\r\n} from '@ngrx/store';\r\nimport { AuthService } from 'src/app/modules/auth/auth.service';\r\n\r\nimport { environment } from '../../../environments/environment';\r\nimport * as fromAuth from './auth.reducer';\r\nimport * as fromRounds from './round.reducer';\r\nimport * as fromRoundMembers from './round-member.reducer';\r\nimport { hydrationMetaReducer } from './hydration.reducer';\r\nimport * as fromPlayers from './player.reducer';\r\nimport * as fromAnalytics from './analytics.reducer';\r\nimport * as fromApp from './app.reducer';\r\nimport * as fromPersistStore from './persist-store.reducer';\r\nimport * as fromErrorLog from './error-log.reducer';\r\nimport { routerReducer } from '@ngrx/router-store';\r\nimport { getRouterSelectors, RouterReducerState, RouterState } from '@ngrx/router-store';\r\n\r\nexport interface State {\r\n  auth: fromAuth.State;\r\n  rounds: fromRounds.State;\r\n  roundMembers: fromRoundMembers.State;\r\n  players: fromPlayers.State;\r\n  analytics: fromAnalytics.State;\r\n  app: fromApp.State;\r\n  [fromErrorLog.errorLogsFeatureKey]: fromErrorLog.State;\r\n  persistStore: fromPersistStore.State;\r\n  router: RouterReducerState<any>; // typeof routerReducer;\r\n}\r\n\r\nexport const reducers: ActionReducerMap<State> = {\r\n  auth: fromAuth.reducer,\r\n  rounds: fromRounds.reducer,\r\n  roundMembers: fromRoundMembers.reducer,\r\n  players: fromPlayers.reducer,\r\n  analytics: fromAnalytics.reducer,\r\n  app: fromApp.reducer,\r\n  [fromErrorLog.errorLogsFeatureKey]: fromErrorLog.reducer,\r\n  router: routerReducer,\r\n  persistStore: fromPersistStore.reducer,\r\n};\r\n\r\nexport const metaReducers: MetaReducer<State>[] = !environment.production\r\n  ? [hydrationMetaReducer]\r\n  : [hydrationMetaReducer];\r\n\r\nexport const {\r\n  selectCurrentRoute, // select the current route\r\n  selectFragment, // select the current route fragment\r\n  selectQueryParams, // select the current route query params\r\n  selectQueryParam, // factory function to select a query param\r\n  selectRouteParams, // select the current route params\r\n  selectRouteParam, // factory function to select a route param\r\n  selectRouteData, // select the current route data\r\n  selectUrl, // select the current url\r\n} = getRouterSelectors();\r\n\r\nexport const selectFeature = createFeatureSelector<RouterReducerState<any>>('router');\r\nexport const selectUrlRouter = createSelector(\r\n  (state: State) => state,\r\n  (value) => value.router.state.url,\r\n);\r\n// export const selectUrlRouter = createSelector((state: State) => state.ngrxRouter, selectUrl);\r\n// export const selectUrlRouter = createSelector(selectFeature, selectUrl);\r\n// export const selectFragmentRouter = createSelector(selectFeature, selectFragment);\r\n","import { Action, createFeatureSelector, createReducer, createSelector, on } from '@ngrx/store';\r\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\r\nimport { GameType, PersistStore } from '../../interfaces';\r\nimport * as PersistStoreActions from '../actions/persist-store.actions';\r\n\r\nexport const persistStoresFeatureKey = 'persistStore';\r\n\r\nexport interface State extends EntityState<PersistStore> {\r\n  // additional entities state properties\r\n}\r\n\r\nexport const adapter: EntityAdapter<PersistStore> = createEntityAdapter<PersistStore>({\r\n  selectId: (storage: PersistStore) => storage._id,\r\n});\r\n\r\nexport const initialState: State = adapter.getInitialState({\r\n  // additional entity state properties\r\n});\r\n\r\nexport const reducer = createReducer(\r\n  initialState,\r\n  on(PersistStoreActions.addPersistStore, (state, action) =>\r\n    adapter.addOne(action.persistStore, state),\r\n  ),\r\n  on(PersistStoreActions.upsertPersistStore, (state, action) =>\r\n    adapter.upsertOne(action.persistStore, state),\r\n  ),\r\n  on(PersistStoreActions.addPersistStores, (state, action) =>\r\n    adapter.addMany(action.persistStores, state),\r\n  ),\r\n  on(PersistStoreActions.upsertPersistStores, (state, action) =>\r\n    adapter.upsertMany(action.persistStores, state),\r\n  ),\r\n  on(PersistStoreActions.updatePersistStore, (state, action) =>\r\n    adapter.updateOne(action.persistStore, state),\r\n  ),\r\n  on(PersistStoreActions.updatePersistStores, (state, action) =>\r\n    adapter.updateMany(action.persistStores, state),\r\n  ),\r\n  on(PersistStoreActions.deletePersistStore, (state, action) =>\r\n    adapter.removeOne(action.id, state),\r\n  ),\r\n  on(PersistStoreActions.deletePersistStores, (state, action) =>\r\n    adapter.removeMany(action.ids, state),\r\n  ),\r\n  on(PersistStoreActions.loadPersistStores, (state, action) =>\r\n    adapter.setAll(action.persistStores, state),\r\n  ),\r\n  on(PersistStoreActions.clearPersistStores, (state) => adapter.removeAll(state)),\r\n);\r\n\r\nexport const { selectIds, selectEntities, selectAll, selectTotal } = adapter.getSelectors();\r\n\r\nexport const selectFeature = createFeatureSelector<State>(persistStoresFeatureKey);\r\nexport const selectAllPersistStore = createSelector(selectFeature, selectAll);\r\nexport const selectEntitiesRounds = createSelector(selectFeature, selectEntities);\r\nexport const selectByIdPersistStore = (id: GameType) =>\r\n  createSelector(selectEntitiesRounds, (entities) => entities[id]);\r\n","import { Action, createFeatureSelector, createReducer, createSelector, on } from '@ngrx/store';\r\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\r\nimport { IGamer } from '../../interfaces';\r\nimport * as PlayerActions from '../actions/player.actions';\r\n\r\nexport const playersFeatureKey = 'players';\r\n\r\nexport interface State extends EntityState<IGamer> {\r\n  // additional entities state properties\r\n}\r\n\r\nexport const adapter: EntityAdapter<IGamer> = createEntityAdapter<IGamer>({\r\n  selectId: (player: IGamer) => player._id,\r\n});\r\n\r\nexport const initialState: State = adapter.getInitialState({\r\n  // additional entity state properties\r\n});\r\n\r\nexport const reducer = createReducer(\r\n  initialState,\r\n  on(PlayerActions.addPlayer, (state, action) => adapter.addOne(action.player, state)),\r\n  on(PlayerActions.upsertPlayer, (state, action) => adapter.upsertOne(action.player, state)),\r\n  on(PlayerActions.addPlayers, (state, action) => adapter.addMany(action.players, state)),\r\n  on(PlayerActions.upsertPlayers, (state, action) => adapter.upsertMany(action.players, state)),\r\n  on(PlayerActions.updatePlayer, (state, action) => adapter.updateOne(action.player, state)),\r\n  on(PlayerActions.updatePlayers, (state, action) => adapter.updateMany(action.players, state)),\r\n  on(PlayerActions.deletePlayer, (state, action) => adapter.removeOne(action.id, state)),\r\n  on(PlayerActions.deletePlayers, (state, action) => adapter.removeMany(action.ids, state)),\r\n  on(PlayerActions.loadPlayers, (state, action) => adapter.setAll(action.players, state)),\r\n  on(PlayerActions.clearPlayers, (state) => adapter.removeAll(state)),\r\n);\r\n\r\nexport const { selectIds, selectEntities, selectAll, selectTotal } = adapter.getSelectors();\r\n\r\nexport const selectFeature = createFeatureSelector<State>(playersFeatureKey);\r\nexport const selectAllPlayers = createSelector(selectFeature, selectAll);\r\nexport const selectEntitiesPlayers = createSelector(selectFeature, selectEntities);\r\nexport const selectByIdPlayer = (id: string) =>\r\n  createSelector(selectEntitiesPlayers, (entities) => entities[id]);\r\n","import { Action, createFeatureSelector, createReducer, createSelector, on } from '@ngrx/store';\r\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\r\nimport { RoundMember } from '../../interfaces';\r\nimport * as RoundMemberActions from '../actions/round-member.actions';\r\n\r\nexport const roundMembersFeatureKey = 'roundMembers';\r\n\r\nexport type State = EntityState<RoundMember>;\r\n\r\nexport const adapter: EntityAdapter<RoundMember> = createEntityAdapter<RoundMember>({\r\n  selectId: (roundMember: RoundMember) => roundMember._id,\r\n});\r\n\r\nexport const initialState: State = adapter.getInitialState({\r\n  // additional entity state properties\r\n});\r\n\r\nexport const reducer = createReducer(\r\n  initialState,\r\n  on(RoundMemberActions.addRoundMember, (state, action) =>\r\n    adapter.addOne(action.roundMember, state),\r\n  ),\r\n  on(RoundMemberActions.upsertRoundMember, (state, action) =>\r\n    adapter.upsertOne(action.roundMember, state),\r\n  ),\r\n  on(RoundMemberActions.addRoundMembers, (state, action) =>\r\n    adapter.addMany(action.roundMembers, state),\r\n  ),\r\n  on(RoundMemberActions.upsertRoundMembers, (state, action) =>\r\n    adapter.upsertMany(action.roundMembers, state),\r\n  ),\r\n  on(RoundMemberActions.updateRoundMember, (state, action) =>\r\n    adapter.updateOne(action.roundMember, state),\r\n  ),\r\n  on(RoundMemberActions.updateRoundMembers, (state, action) =>\r\n    adapter.updateMany(action.roundMembers, state),\r\n  ),\r\n  on(RoundMemberActions.deleteRoundMember, (state, action) => adapter.removeOne(action.id, state)),\r\n  on(RoundMemberActions.deleteRoundMembers, (state, action) =>\r\n    adapter.removeMany(action.ids, state),\r\n  ),\r\n  on(RoundMemberActions.loadRoundMembers, (state, action) =>\r\n    adapter.setAll(action.roundMembers, state),\r\n  ),\r\n  on(RoundMemberActions.clearRoundMembers, (state) => adapter.removeAll(state)),\r\n);\r\n\r\nexport const { selectIds, selectEntities, selectAll, selectTotal } = adapter.getSelectors();\r\n\r\nexport const selectFeature = createFeatureSelector<State>(roundMembersFeatureKey);\r\nexport const selectAllRoundMembers = createSelector(selectFeature, selectAll);\r\nexport const selectEntitiesRoundMembers = createSelector(selectFeature, selectEntities);\r\nexport const selectByIdRoundMember = (id: string) =>\r\n  createSelector(selectEntitiesRoundMembers, (entities) => entities[id]);\r\n","import { Action, createFeatureSelector, createReducer, createSelector, on } from '@ngrx/store';\r\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\r\nimport { Round } from '../../interfaces';\r\nimport * as RoundActions from '../actions/round.actions';\r\n\r\nexport const roundsFeatureKey = 'rounds';\r\n\r\nexport type State = EntityState<Round>;\r\n\r\nexport const adapter: EntityAdapter<Round> = createEntityAdapter<Round>({\r\n  selectId: (round: Round) => round._id,\r\n});\r\n\r\nexport const initialState: State = adapter.getInitialState({\r\n  // additional entity state properties\r\n});\r\n\r\nexport const reducer = createReducer(\r\n  initialState,\r\n  on(RoundActions.addRound, (state, action) => adapter.addOne(action.round, state)),\r\n  on(RoundActions.upsertRound, (state, action) => adapter.upsertOne(action.round, state)),\r\n  on(RoundActions.addRounds, (state, action) => adapter.addMany(action.rounds, state)),\r\n  on(RoundActions.upsertRounds, (state, action) => adapter.upsertMany(action.rounds, state)),\r\n  on(RoundActions.updateRound, (state, action) => adapter.updateOne(action.round, state)),\r\n  on(RoundActions.updateRounds, (state, action) => adapter.updateMany(action.rounds, state)),\r\n  on(RoundActions.deleteRound, (state, action) => adapter.removeOne(action.id, state)),\r\n  on(RoundActions.deleteRounds, (state, action) => adapter.removeMany(action.ids, state)),\r\n  on(RoundActions.loadRounds, (state, action) => adapter.setAll(action.rounds, state)),\r\n  on(RoundActions.clearRounds, (state) => adapter.removeAll(state)),\r\n);\r\n\r\nexport const { selectIds, selectEntities, selectAll, selectTotal } = adapter.getSelectors();\r\n\r\nexport const selectFeature = createFeatureSelector<State>(roundsFeatureKey);\r\nexport const selectAllRounds = createSelector(selectFeature, selectAll);\r\nexport const selectEntitiesRounds = createSelector(selectFeature, selectEntities);\r\nexport const selectByIdRound = (id: string) =>\r\n  createSelector(selectEntitiesRounds, (entities) => entities[id]);\r\n","import { NgModule, isDevMode } from '@angular/core';\r\nimport { DefaultDataServiceConfig, EntityDataModule, EntityDataService } from '@ngrx/data';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\nimport {\r\n  ActionReducer,\r\n  MetaReducer,\r\n  META_REDUCERS,\r\n  StoreModule,\r\n  USER_PROVIDED_META_REDUCERS,\r\n} from '@ngrx/store';\r\nimport { EffectsModule } from '@ngrx/effects';\r\n\r\nimport { reducers, metaReducers } from './reducers';\r\n\r\nimport { GameDataService } from './game-data.service';\r\nimport { GamerDataService } from './gamer-data.service';\r\nimport { entityMetadata } from './entity-metadata';\r\nimport { environment } from 'src/environments/environment';\r\nimport { AuthEffects } from './effects/auth.effects';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { InjectionToken } from '@angular/core';\r\nimport { AuthService } from '../modules/auth/auth.service';\r\nimport { SharedService } from '../services/shared.service';\r\nimport { HydrationEffects } from './effects/hydration.effects';\r\nimport { AnalyticsEffects } from './effects/analytics.effects';\r\n// import { StoreAppService } from './store-app.service';\r\nimport { AppEffects } from './effects/app.effects';\r\nimport { RoundEffects } from './effects/round.effects';\r\nimport { RoundMemberEffects } from './effects/round-member.effects';\r\nimport { routerReducer, StoreRouterConnectingModule } from '@ngrx/router-store';\r\nimport { PersistStoreEffects } from './effects/persist-store.effects';\r\nimport { PlayerEffects } from './effects/player.effects';\r\nimport { StoreErrorService } from './store-error.service';\r\nimport { ErrorLogEffects } from './effects/error-log.effects';\r\n\r\nexport const defaultDataServiceConfig: DefaultDataServiceConfig = {\r\n  root: environment.host + 'api/store/',\r\n  timeout: 5000,\r\n  entityHttpResourceUrls: {\r\n    game: {\r\n      entityResourceUrl: environment.host + 'api/store/game/',\r\n      collectionResourceUrl: environment.host + 'api/store/games/',\r\n    },\r\n    gamer: {\r\n      entityResourceUrl: environment.host + 'api/store/gamer/',\r\n      collectionResourceUrl: environment.host + 'api/store/gamers/',\r\n    },\r\n  },\r\n};\r\n\r\n@NgModule({\r\n  imports: [\r\n    HttpClientModule,\r\n    StoreModule.forRoot(reducers, {\r\n      metaReducers,\r\n      runtimeChecks: {\r\n        strictStateImmutability: true,\r\n        strictActionImmutability: true,\r\n      },\r\n    }),\r\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: !isDevMode() }),\r\n\r\n    // StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production }),\r\n    EffectsModule.forRoot([\r\n      AuthEffects,\r\n      HydrationEffects,\r\n      AnalyticsEffects,\r\n      AppEffects,\r\n      RoundEffects,\r\n      RoundMemberEffects,\r\n      PersistStoreEffects,\r\n      PlayerEffects,\r\n      ErrorLogEffects,\r\n    ]),\r\n    StoreRouterConnectingModule.forRoot({ stateKey: 'router' }),\r\n\r\n    // Connects RouterModule with StoreModule\r\n    EntityDataModule.forRoot({ entityMetadata }),\r\n  ],\r\n  providers: [\r\n    GameDataService,\r\n    GamerDataService,\r\n    { provide: DefaultDataServiceConfig, useValue: defaultDataServiceConfig },\r\n  ],\r\n})\r\nexport class AppStoreModule {\r\n  constructor(\r\n    entityDataService: EntityDataService,\r\n    gameDataService: GameDataService,\r\n    gamerDataService: GamerDataService,\r\n    // storeErrorService: StoreErrorService,\r\n    // storeAppService: StoreAppService,\r\n  ) {\r\n    entityDataService.registerService('Game', gameDataService);\r\n    entityDataService.registerService('Gamer', gamerDataService);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  appVersion: require('../../package.json').version + '-dev',\r\n  host: '',\r\n  // host: 'https://10.0.2.2:8084/',\r\n  production: false,\r\n  games: {\r\n    rummy: {\r\n      name: 'Rummy',\r\n      resultsOrder: 1,\r\n      showToolbarMenu: false,\r\n      maxPlayersQty: 4,\r\n      minPlayersQty: 2,\r\n      playersColors: ['black'],\r\n      namedScores: [\r\n        { name: '1', value: -1, picture: './assets/games/uno/1.svg' },\r\n        { name: '2', value: -2, picture: './assets/games/uno/2.svg' },\r\n        { name: '3', value: -3, picture: './assets/games/uno/3.svg' },\r\n        { name: '4', value: -4, picture: './assets/games/uno/4.svg' },\r\n        { name: '5', value: -5, picture: './assets/games/uno/5.svg' },\r\n        { name: '6', value: -6, picture: './assets/games/uno/6.svg' },\r\n        { name: '7', value: -7, picture: './assets/games/uno/7.svg' },\r\n        { name: '8', value: -8, picture: './assets/games/uno/8.svg' },\r\n        { name: '9', value: -9, picture: './assets/games/uno/9.svg' },\r\n        { name: '10', value: -10, picture: './assets/games/uno/9.svg' },\r\n        { name: '11', value: -11, picture: './assets/games/uno/9.svg' },\r\n        { name: '12', value: -12, picture: './assets/games/uno/9.svg' },\r\n        { name: '13', value: -13, picture: './assets/games/uno/9.svg' },\r\n        {\r\n          name: 'Joker',\r\n          value: -30,\r\n          picture: './assets/games/uno/reverse.svg',\r\n        },\r\n      ],\r\n      rounds: [\r\n        {\r\n          _id: 'start',\r\n          icon: 'log-out-outline',\r\n          namePostfix: '',\r\n          initialScoresLine: [],\r\n          initialNamedScoresLine: [],\r\n        },\r\n        {\r\n          _id: 'round',\r\n          icon: 'copy-outline',\r\n          namePostfix: '',\r\n          initialScoresLine: [],\r\n          initialNamedScoresLine: [],\r\n        },\r\n      ],\r\n\r\n      stats: [\r\n        {\r\n          _id: 'getRating',\r\n          icon: 'trophy-outline',\r\n          name: 'rating',\r\n        },\r\n      ],\r\n    },\r\n    uno: {\r\n      name: 'Uno',\r\n      resultsOrder: 1,\r\n      showToolbarMenu: false,\r\n      maxPlayersQty: 10,\r\n      minPlayersQty: 2,\r\n      playersColors: ['black'],\r\n      namedScores: [\r\n        { name: '0', value: 0, picture: './assets/games/uno/0.svg' },\r\n        { name: '1', value: 1, picture: './assets/games/uno/1.svg' },\r\n        { name: '2', value: 2, picture: './assets/games/uno/2.svg' },\r\n        { name: '3', value: 3, picture: './assets/games/uno/3.svg' },\r\n        { name: '4', value: 4, picture: './assets/games/uno/4.svg' },\r\n        { name: '5', value: 5, picture: './assets/games/uno/5.svg' },\r\n        { name: '6', value: 6, picture: './assets/games/uno/6.svg' },\r\n        { name: '7', value: 7, picture: './assets/games/uno/7.svg' },\r\n        { name: '8', value: 8, picture: './assets/games/uno/8.svg' },\r\n        { name: '9', value: 9, picture: './assets/games/uno/9.svg' },\r\n        {\r\n          name: 'reverse',\r\n          value: 20,\r\n          picture: './assets/games/uno/reverse.svg',\r\n        },\r\n        { name: 'skip', value: 20, picture: './assets/games/uno/skip.svg' },\r\n        { name: 'plus2', value: 20, picture: './assets/games/uno/plus2.svg' },\r\n        { name: 'plus4', value: 50, picture: './assets/games/uno/plus4.svg' },\r\n        { name: 'color', value: 50, picture: './assets/games/uno/color.svg' },\r\n      ],\r\n      rounds: [\r\n        {\r\n          _id: 'start',\r\n          icon: 'log-out-outline',\r\n          namePostfix: '',\r\n          initialScoresLine: [],\r\n          initialNamedScoresLine: [],\r\n        },\r\n        {\r\n          _id: 'round',\r\n          icon: 'copy-outline',\r\n          namePostfix: '1',\r\n          initialScoresLine: [],\r\n          initialNamedScoresLine: [],\r\n        },\r\n      ],\r\n      stats: [],\r\n    },\r\n    thousand: {\r\n      name: 'Thousand - 1000',\r\n      resultsOrder: -1,\r\n      showToolbarMenu: false,\r\n      maxPlayersQty: 4,\r\n      minPlayersQty: 2,\r\n      playersColors: ['black'],\r\n      rounds: [\r\n        {\r\n          _id: 'start',\r\n          namePostfix: '',\r\n          icon: 'log-out-outline',\r\n          initialScoresLine: [],\r\n          initialNamedScoresLine: [],\r\n        },\r\n        {\r\n          _id: 'round',\r\n          namePostfix: '',\r\n          icon: 'trail-sign-outline',\r\n          initialScoresLine: [],\r\n          initialNamedScoresLine: [],\r\n        },\r\n      ],\r\n      stats: [\r\n        {\r\n          _id: 'getRatingByWins',\r\n          icon: 'trophy-outline',\r\n          name: 'byWins',\r\n        },\r\n        {\r\n          _id: 'getRatingByWinsToGames',\r\n          icon: 'podium-outline',\r\n          name: 'byWinsToGames',\r\n        },\r\n      ],\r\n    },\r\n    train: {\r\n      name: 'Ticket to ride',\r\n      resultsOrder: -1,\r\n      showToolbarMenu: true,\r\n      maxPlayersQty: 5,\r\n      minPlayersQty: 2,\r\n      playersColors: ['red', 'green', 'blue', 'black', 'yellow'],\r\n      routesScores: [\r\n        { name: '5', value: 5 },\r\n        { name: '6', value: 6 },\r\n        { name: '7', value: 7 },\r\n        { name: '8', value: 8 },\r\n        { name: '9', value: 9 },\r\n        { name: '10', value: 10 },\r\n        { name: '11', value: 11 },\r\n        { name: '12', value: 12 },\r\n        { name: '13', value: 13 },\r\n        { name: '20', value: 20 },\r\n        { name: '21', value: 21 },\r\n      ],\r\n      longestRouteScore: 10,\r\n      carsScores: [\r\n        { name: 1, value: 1 },\r\n        { name: 2, value: 2 },\r\n        { name: 3, value: 4 },\r\n        { name: 4, value: 7 },\r\n        { name: 6, value: 15 },\r\n        { name: 8, value: 21 },\r\n      ],\r\n      stats: [\r\n        {\r\n          _id: 'getRatingByWins',\r\n          icon: 'trophy-outline',\r\n          name: 'byWins',\r\n        },\r\n        {\r\n          _id: 'getRatingByWinsToGames',\r\n          icon: 'podium-outline',\r\n          name: 'byWinsToGames',\r\n        },\r\n      ],\r\n      rounds: [\r\n        {\r\n          _id: 'start',\r\n          icon: 'log-out-outline',\r\n          namePostfix: '',\r\n          initialScoresLine: [],\r\n          initialNamedScoresLine: [],\r\n        },\r\n        {\r\n          _id: 'routes',\r\n          icon: 'trail-sign-outline',\r\n          namePostfix: '',\r\n          initialScoresLine: [],\r\n          initialNamedScoresLine: [],\r\n        },\r\n        {\r\n          _id: 'length',\r\n          icon: 'code-working-outline',\r\n          namePostfix: '',\r\n          initialScoresLine: [],\r\n          initialNamedScoresLine: [],\r\n        },\r\n        {\r\n          _id: 'stations',\r\n          namePostfix: '',\r\n          icon: 'prism-outline',\r\n          initialScoresLine: [4, 4, 4],\r\n          initialNamedScoresLine: [],\r\n        },\r\n        {\r\n          _id: 'cars',\r\n          namePostfix: '',\r\n          icon: 'train-outline',\r\n          initialScoresLine: [],\r\n          initialNamedScoresLine: [],\r\n        },\r\n      ],\r\n    },\r\n  },\r\n\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch((err) => console.log(err));\r\n","var map = {\n\t\"./ion-accordion_2.entry.js\": [\n\t\t7512,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-accordion_2_entry_js\"\n\t],\n\t\"./ion-action-sheet.entry.js\": [\n\t\t6470,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-action-sheet_entry_js\"\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t5690,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-alert_entry_js\"\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t2550,\n\t\t\"default-node_modules_ionic_core_dist_esm_keyboard-controller-4149afc6_js-node_modules_ionic_c-6fbc39\",\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-app_8_entry_js\"\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t3438,\n\t\t\"node_modules_ionic_core_dist_esm_ion-avatar_3_entry_js\"\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t9119,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-back-button_entry_js\"\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t2319,\n\t\t\"node_modules_ionic_core_dist_esm_ion-backdrop_entry_js\"\n\t],\n\t\"./ion-breadcrumb_2.entry.js\": [\n\t\t4848,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-breadcrumb_2_entry_js\"\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t4752,\n\t\t\"node_modules_ionic_core_dist_esm_ion-button_2_entry_js\"\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t9870,\n\t\t\"node_modules_ionic_core_dist_esm_ion-card_5_entry_js\"\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t5892,\n\t\t\"node_modules_ionic_core_dist_esm_ion-checkbox_entry_js\"\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t9118,\n\t\t\"node_modules_ionic_core_dist_esm_ion-chip_entry_js\"\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t9538,\n\t\t\"node_modules_ionic_core_dist_esm_ion-col_3_entry_js\"\n\t],\n\t\"./ion-datetime-button.entry.js\": [\n\t\t4969,\n\t\t\"default-node_modules_ionic_core_dist_esm_data-1af84f31_js-node_modules_ionic_core_dist_esm_th-b55f4c\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-datetime-button_entry_js\"\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t1835,\n\t\t\"default-node_modules_ionic_core_dist_esm_data-1af84f31_js-node_modules_ionic_core_dist_esm_th-b55f4c\",\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-datetime_3_entry_js\"\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t6719,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-fab_3_entry_js\"\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t3121,\n\t\t\"node_modules_ionic_core_dist_esm_ion-img_entry_js\"\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t3025,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-infinite-scroll_2_entry_js\"\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t3914,\n\t\t\"default-node_modules_ionic_core_dist_esm_form-controller-6cd7ebd1_js-node_modules_ionic_core_-6eb319\",\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-input_entry_js\"\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t3761,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-item-option_3_entry_js\"\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t6138,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-item_8_entry_js\"\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t2063,\n\t\t\"node_modules_ionic_core_dist_esm_ion-loading_entry_js\"\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t4950,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-menu_3_entry_js\"\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t9707,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-modal_entry_js\"\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t234,\n\t\t\"node_modules_ionic_core_dist_esm_ion-nav_2_entry_js\"\n\t],\n\t\"./ion-picker-column-internal.entry.js\": [\n\t\t7209,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-picker-column-internal_entry_js\"\n\t],\n\t\"./ion-picker-internal.entry.js\": [\n\t\t3068,\n\t\t\"node_modules_ionic_core_dist_esm_ion-picker-internal_entry_js\"\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t6963,\n\t\t\"node_modules_ionic_core_dist_esm_ion-popover_entry_js\"\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t5635,\n\t\t\"node_modules_ionic_core_dist_esm_ion-progress-bar_entry_js\"\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t1497,\n\t\t\"node_modules_ionic_core_dist_esm_ion-radio_2_entry_js\"\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t5922,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-range_entry_js\"\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t6199,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-refresher_2_entry_js\"\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t3549,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-reorder_2_entry_js\"\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t5966,\n\t\t\"node_modules_ionic_core_dist_esm_ion-ripple-effect_entry_js\"\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t3187,\n\t\t\"node_modules_ionic_core_dist_esm_ion-route_4_entry_js\"\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t9092,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-searchbar_entry_js\"\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t7600,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-segment_2_entry_js\"\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t1449,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-select_3_entry_js\"\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t1657,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-spinner_entry_js\"\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t8394,\n\t\t\"node_modules_ionic_core_dist_esm_ion-split-pane_entry_js\"\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t4574,\n\t\t\"default-node_modules_ionic_core_dist_esm_keyboard-controller-4149afc6_js-node_modules_ionic_c-6fbc39\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-tab-bar_2_entry_js\"\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t3514,\n\t\t\"node_modules_ionic_core_dist_esm_ion-tab_2_entry_js\"\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t7502,\n\t\t\"node_modules_ionic_core_dist_esm_ion-text_entry_js\"\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t7832,\n\t\t\"default-node_modules_ionic_core_dist_esm_form-controller-6cd7ebd1_js-node_modules_ionic_core_-6eb319\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-textarea_entry_js\"\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t9805,\n\t\t\"node_modules_ionic_core_dist_esm_ion-toast_entry_js\"\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t7393,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-toggle_entry_js\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 863;\nmodule.exports = webpackAsyncContext;","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ``, \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ``, \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n"],"names":["NgModule","PreloadAllModules","RouterModule","routes","path","loadChildren","then","m","TabsPageModule","redirectTo","AppRoutingModule","__decorate","imports","forRoot","preloadingStrategy","exports","Component","Store","TranslateService","AuthService","NavigationEnd","NavigationError","NavigationStart","Router","SharedService","AppComponent","_class","constructor","store","translate","authService","router","sharedService","setDefaultLang","browserLang","getBrowserLang","lang","match","use","ngOnInit","events","subscribe","event","selector","template","__NG_CLI_RESOURCE__0","ErrorHandler","BrowserModule","RouteReuseStrategy","IonicModule","IonicRouteStrategy","AppStoreModule","HttpClientModule","HttpClient","HTTP_INTERCEPTORS","TranslateModule","TranslateLoader","TranslateHttpLoader","HttpInterceptorService","createTranslateLoader","http","JwtDecodeFactory","JWT_DECODE","ErrorHandlerService","AppModule","declarations","loader","provide","useFactory","deps","providers","useClass","multi","useExisting","bootstrap","InjectionToken","jwtDecode","HttpHeaders","Injectable","environment","AnalyticsService","getRating","gameType","httpOptions","headers","get","host","getRatingByWins","getRatingByWinsToGames","providedIn","redirection","selectRedirectionUrl","url$","select","url","navigateByUrl","dispatch","redirectionUrl","signin","user","post","signup","matchPassword","abstractControl","password","value","passwordConfirm","setErrors","mismatch","HttpParams","Injector","tap","ErrorLogService","injector","getWithQuery","query","params","Object","entries","forEach","key","append","logErrorToDB","error","pipe","x","console","log","getOwnersWithQuery$","Input","ModalController","selectAllPlayers","GameResultComponent","modalController","players$","players","resultWithNames","data","results","map","result","player","find","pl","_id","name","color","sort","a","b","score","order","confirm","dismiss","Inject","ToastService","toastService","handleError","logError","errorType","message","deepErrorChecker","presentErrorToast","join","mes","hasOwnProperty","push","args","throwError","catchError","switchMap","signinSuccess","refreshInProgress","intercept","req","next","getToken","token","clone","set","handle","status","getTokenError","ModalService","presentModal","component","_this","_asyncToGenerator","modal","create","componentProps","present","onWillDismiss","from","Preferences","selectAllRounds","selectAllRoundMembers","selectByIdRoundMember","selectGameType","fns","modalService","rounds","roundMembers","gameType$","rounds$","roundMembers$","convertISOToShort","ISO","substring","convertISOToDate","parseISO","convertDateToShort","date","formatISO","representation","convertDateToISO","setToStorage","setToken","getFromStorage","getResult","getTokenAndDecode","removeFromStorage","remove","removeToken","getPlayerTotalScores","sum","roundMember","scoresLine","reduce","prev","cur","createClientRoundsWithTotal","round","memberId","member","createResultRoundWithTotal","games","resultsOrder","acc","createResultOfGame","type","presentModalFinishGame","game","calcQtyOfArrItems","item","playerId","roundId","count","getMemberByPlayerId","arrItem","calcScores","getPlayerColor","getPlayerName","getRoundById","includes","getRoundMemberById$","roundMemberId","ToastController","toastController","header","toast","icon","position","duration","buttons","text","role","handler","rest","onDidDismiss","createAction","props","union","AnalyticsActionTypes","getRatingByWinsType","getRatingByWinsToGamesType","getRatingType","getRatingSuccess","getRatingSuccessType","addMany","addManyType","addError","addErrorType","removeError","removeErrorType","loading","loadingType","all","AppActionTypes","clearGame","clearGameType","loadGame","loadGameType","gameTypeType","gameTypeAndClearGame","gameTypeAndClearGameType","finishGame","finishGameType","openNextRound","openNextRoundType","createRounds","createRoundsType","redirectionType","nop","nopType","AuthActionTypes","storeToken","storeTokenType","storeUserFromToken","storeUserFromTokenType","storeUserFromTokenSuccess","storeUserFromTokenSuccessType","signinType","signinSuccessType","signupType","logout","logoutType","loadErrorLogs","addErrorLog","upsertErrorLog","addErrorLogs","upsertErrorLogs","updateErrorLog","updateErrorLogs","deleteErrorLog","deleteErrorLogs","clearErrorLogs","hydrate","hydrateSuccess","hydrateFailure","loadPersistStores","addPersistStore","upsertPersistStore","addPersistStores","upsertPersistStores","updatePersistStore","updatePersistStores","deletePersistStore","deletePersistStores","clearPersistStores","loadPlayers","addPlayer","upsertPlayer","addPlayers","upsertPlayers","updatePlayer","updatePlayers","deletePlayer","deletePlayers","clearPlayers","loadRoundMembers","addRoundMember","upsertRoundMember","addRoundMembers","upsertRoundMembers","updateRoundMember","updateRoundMembers","deleteRoundMember","deleteRoundMembers","clearRoundMembers","updateRoundMembersSuccess","addRoundMembersSuccess","loadRounds","addRound","upsertRound","addRounds","upsertRounds","updateRound","updateRounds","deleteRound","deleteRounds","clearRounds","Actions","createEffect","ofType","of","withLatestFrom","fromAnalyticsActions","GamerService","AnalyticsEffects","actions$","errorHandlerService","analyticsService","gamerService","setLoading","_","cancelLoading","errorHadler","addLoosers","analytics","stream","entities$","gamers","losers","filter","gamer","some","winner","telegramCheckCode","telegramSubscriptionName","rating","wins","fullList","concat","concatLatestFrom","fromAuthActions","fromRoundActions","fromRoundMemberActions","fromRoundMemberReducer","fromRoundReducer","fromAppActions","routerNavigatedAction","fromAppReducer","fromPlayerReducer","v4","uuidv4","GameService","EntityActionFactory","AppEffects","gameService","entityActionFactory","action","add","getGamers","load","payload","urlAfterRedirects","payloadGameType","split","checkOpenNextRound","qtyOfPlayedSubrounds","length","namedScoresLine","qtyOfPlayers","Set","size","nextRound","members","initialScoresLine","initialNamedScoresLine","newRoundMembers","newRounds","clientGame","namePostfix","roundsCfg","roundCfg","fromPlayerActions","AuthEffects","redirectAfterSignin","_payload$user","_payload$user2","removeAllRecentPlayers","ngrxOnInitEffects","fromErrorLogActions","ErrorLogEffects","errorLogService","errorLogs","distinctUntilChanged","selectUrlRouter","HydrationActions","HydrationEffects","action$","hydrate$","storageValue","state","JSON","parse","navigate$","serialize$","stringify","persistStore","fromPersistStoreReducer","fromPersistStoreActions","PersistStoreEffects","upsertPersistStore$","getFromPersistStore","selectByIdPersistStore","PlayerEffects","RoundMemberEffects","RoundEffects","entityMetadata","selectId","entityDispatcherOptions","optimisticAdd","optimisticUpdate","optimisticDelete","pluralNames","entityConfig","DefaultDataService","EntityCollectionServiceBase","EntityCollectionServiceElementsFactory","HttpUrlGenerator","GameDataService","httpUrlGenerator","_class2","serviceElementsFactory","GamerDataService","createReducer","on","createFeatureSelector","createSelector","analyticsFeatureKey","initialState","reducer","selectFeature","selectRating","selectLoading","appFeatureKey","authFeatureKey","selectUser","selectUserRole","_state$user","createEntityAdapter","ErrorLogActions","errorLogsFeatureKey","adapter","errorLog","getInitialState","addOne","upsertOne","upsertMany","updateOne","updateMany","removeOne","id","removeMany","ids","setAll","removeAll","selectIds","selectEntities","selectAll","selectTotal","getSelectors","selectAllErrorLogs","selectEntitiesAllErrorLogs","entities","isHydrateSuccess","hydrationMetaReducer","fromAuth","fromRounds","fromRoundMembers","fromPlayers","fromAnalytics","fromApp","fromPersistStore","fromErrorLog","routerReducer","getRouterSelectors","reducers","auth","app","metaReducers","production","selectCurrentRoute","selectFragment","selectQueryParams","selectQueryParam","selectRouteParams","selectRouteParam","selectRouteData","selectUrl","PersistStoreActions","persistStoresFeatureKey","storage","persistStores","selectAllPersistStore","selectEntitiesRounds","PlayerActions","playersFeatureKey","selectEntitiesPlayers","selectByIdPlayer","RoundMemberActions","roundMembersFeatureKey","selectEntitiesRoundMembers","RoundActions","roundsFeatureKey","selectByIdRound","isDevMode","DefaultDataServiceConfig","EntityDataModule","EntityDataService","StoreDevtoolsModule","StoreModule","EffectsModule","StoreRouterConnectingModule","defaultDataServiceConfig","root","timeout","entityHttpResourceUrls","entityResourceUrl","collectionResourceUrl","entityDataService","gameDataService","gamerDataService","registerService","runtimeChecks","strictStateImmutability","strictActionImmutability","instrument","maxAge","logOnly","stateKey","useValue","appVersion","require","version","rummy","showToolbarMenu","maxPlayersQty","minPlayersQty","playersColors","namedScores","picture","stats","uno","thousand","train","routesScores","longestRouteScore","carsScores","enableProdMode","platformBrowserDynamic","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[47]}