{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/config/jwt.config.ts","./src/app/modules/auth/auth.service.ts","./src/app/modules/games/game/game-result/game-result.component.ts","./src/app/services/http-interceptor.service.ts","./src/app/services/modal.service.ts","./src/app/services/shared.service.ts","./src/app/services/toast.service.ts","./src/app/store/actions/analytics.actions.ts","./src/app/store/actions/app.actions.ts","./src/app/store/actions/auth.actions.ts","./src/app/store/actions/hydration.actions.ts","./src/app/store/actions/persist-store.actions.ts","./src/app/store/actions/player.actions.ts","./src/app/store/actions/round-member.actions.ts","./src/app/store/actions/round.actions.ts","./src/app/store/effects/analytics.effects.ts","./src/app/store/effects/app.effects.ts","./src/app/store/effects/auth.effects.ts","./src/app/store/effects/hydration.effects.ts","./src/app/store/effects/persist-store.effects.ts","./src/app/store/effects/player.effects.ts","./src/app/store/effects/round-member.effects.ts","./src/app/store/effects/round.effects.ts","./src/app/store/entity-metadata.ts","./src/app/store/game-data.service.ts","./src/app/store/gamer-data.service.ts","./src/app/store/reducers/analytics.reducer.ts","./src/app/store/reducers/app.reducer.ts","./src/app/store/reducers/auth.reducer.ts","./src/app/store/reducers/hydration.reducer.ts","./src/app/store/reducers/index.ts","./src/app/store/reducers/persist-store.reducer.ts","./src/app/store/reducers/player.reducer.ts","./src/app/store/reducers/round-member.reducer.ts","./src/app/store/reducers/round.reducer.ts","./src/app/store/store-error.service.ts","./src/app/store/store.module.ts","./src/environments/environment.ts","./src/main.ts","./node_modules/@ionic/core/dist/esm|lazy|/^/.*/.entry/.js$/|include: /.entry/.js$/|exclude: /.system/.entry/.js$/|groupOptions: {}|namespace object","./src/app/app.component.html","./src/app/modules/games/game/game-result/game-result.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    loadChildren: () => import('./tabs/tabs.module').then((m) => m.TabsPageModule),\r\n    // pathMatch: 'full'\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: '',\r\n  },\r\n];\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes, {\r\n      preloadingStrategy: PreloadAllModules,\r\n      // paramsInheritanceStrategy: 'always'\r\n    }),\r\n  ],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { signin, storeUserFromToken, signup } from './store/actions/auth.actions';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AuthService } from './modules/auth/auth.service';\r\nimport jwtDecode from 'jwt-decode';\r\nimport { NavigationEnd, NavigationError, NavigationStart, Router, Event } from '@angular/router';\r\nimport { SharedService } from './services/shared.service';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: 'app.component.html',\r\n  styleUrls: ['app.component.scss'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  lang: string;\r\n\r\n  constructor(\r\n    private store: Store,\r\n    private translate: TranslateService,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private sharedService: SharedService,\r\n  ) {\r\n    // static translation initialization\r\n    // this language will be used as a fallback when a translation isn't found in the current language\r\n    translate.setDefaultLang('en');\r\n\r\n    // the lang to use, if the lang isn't available, it will use the current loader to get them\r\n    // this.lang = 'en';\r\n    // for automatic lang detection\r\n    const browserLang = translate.getBrowserLang();\r\n    this.lang = browserLang.match(/uk|ru/) ? 'uk' : 'en';\r\n    translate.use(this.lang);\r\n\r\n    // set to store static translation language\r\n    // this.store.dispatch(new LoadLang());\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.router.events.subscribe((event: Event) => {\r\n      if (event instanceof NavigationStart) {\r\n        // console.log('NavigationStart', event);\r\n      }\r\n\r\n      if (event instanceof NavigationEnd) {\r\n        // console.log('NavigationEnd', event);\r\n      }\r\n\r\n      if (event instanceof NavigationError) {\r\n        // Hide loading indicator\r\n        // Present error to user\r\n        // console.log('NavigationError', event.error);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouteReuseStrategy } from '@angular/router';\r\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AppStoreModule } from './store/store.module';\r\n// Translator\r\nimport { HttpClientModule, HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { HttpInterceptorService } from './services/http-interceptor.service';\r\n\r\n// AoT requires an exported function for factories\r\n// eslint-disable-next-line prefer-arrow/prefer-arrow-functions\r\nexport function createTranslateLoader(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\nimport { JwtDecodeFactory, JWT_DECODE } from './config/jwt.config';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  entryComponents: [],\r\n  imports: [\r\n    BrowserModule,\r\n    IonicModule.forRoot(),\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: createTranslateLoader,\r\n        deps: [HttpClient],\r\n      },\r\n    }),\r\n    AppStoreModule,\r\n  ],\r\n  providers: [\r\n    { provide: JWT_DECODE, useFactory: JwtDecodeFactory, deps: [] },\r\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\r\n    { provide: HTTP_INTERCEPTORS, useClass: HttpInterceptorService, multi: true },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { InjectionToken } from '@angular/core';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nexport const JwtDecodeFactory = () => {\r\n  return jwtDecode;\r\n};\r\n\r\nexport type JwtDecode = typeof jwtDecode;\r\n\r\nexport const JWT_DECODE = new InjectionToken('JWT_DECODE');\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AbstractControl, ValidationErrors } from '@angular/forms';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { IUser } from '../../interfaces';\r\n\r\nimport { Router } from '@angular/router';\r\nimport { redirection } from 'src/app/store/actions/auth.actions';\r\nimport { selectRedirectionUrl, selectUser } from '../../store/reducers/auth.reducer';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  host = environment.host;\r\n  url$: Observable<string>;\r\n\r\n  constructor(private http: HttpClient, private store: Store, private router: Router) {\r\n    this.url$ = this.store.select(selectRedirectionUrl);\r\n    this.url$.subscribe((url) => {\r\n      if (url) {\r\n        this.router.navigateByUrl(url);\r\n        this.store.dispatch(redirection({ redirectionUrl: null }));\r\n      }\r\n    });\r\n  }\r\n\r\n  // testProtected(): Observable<string> {\r\n  //   // return this.http.post('/api/auth/signin', { body: user });\r\n  //   const httpOptions = {\r\n  //     headers: new HttpHeaders({\r\n  //       'Content-Type': 'application/json',\r\n  //       // Authorization: 'token',\r\n  //     }),\r\n  //   };\r\n  //   return this.http.get<string>(\r\n  //     this.host + '/api/auth/protected',\r\n  //     httpOptions,\r\n  //   );\r\n  // }\r\n\r\n  signin(user: IUser): Observable<string> {\r\n    // return this.http.post('/api/auth/signin', { body: user });\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n      }),\r\n    };\r\n    return this.http.post<string>(this.host + '/api/auth/signin', user, httpOptions);\r\n  }\r\n\r\n  signup(user: IUser | null): Observable<string> {\r\n    // return this.http.post('/api/auth/signin', { body: user });\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n      }),\r\n    };\r\n    return this.http.post<string>(this.host + '/api/auth/signup', user, httpOptions);\r\n  }\r\n\r\n  // sync validator\r\n  matchPassword(abstractControl: AbstractControl): ValidationErrors | null {\r\n    const password = abstractControl.get('password').value;\r\n    const passwordConfirm = abstractControl.get('passwordConfirm').value;\r\n    if (password === passwordConfirm) {\r\n      abstractControl.get('passwordConfirm').setErrors(null);\r\n      return null;\r\n    } else {\r\n      /**\r\n       * set error to 'passwordConfirm' element\r\n       */\r\n\r\n      abstractControl.get('passwordConfirm').setErrors({ mismatch: true });\r\n      /**\r\n       * and don't set error (null) to formGroup\r\n       */\r\n      return null;\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { IGamer, PlayersResult, UID } from 'src/app/interfaces';\nimport { selectAllPlayers } from 'src/app/store/reducers/player.reducer';\n\n@Component({\n  selector: 'app-game-result',\n  templateUrl: './game-result.component.html',\n  styleUrls: ['./game-result.component.scss'],\n})\nexport class GameResultComponent implements OnInit {\n  @Input() results: PlayersResult[];\n  @Input() order: 1 | -1;\n\n  resultWithNames: Array<PlayersResult & { name: string; color: string }>;\n  players$: Observable<IGamer[]>;\n  constructor(private modalController: ModalController, protected store: Store) {}\n\n  ngOnInit() {\n    this.players$ = this.store.select(selectAllPlayers);\n    this.players$.subscribe((players) => {\n      this.resultWithNames = this.results.map((result) => {\n        const player = players.find((pl) => pl._id === result._id);\n        return { ...result, name: player?.name, color: player?.color };\n      });\n      this.resultWithNames.sort((a, b) => (a.score - b.score) * this.order);\n    });\n  }\n\n  confirm() {\n    return this.modalController.dismiss(null, 'confirm');\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpRequest,\r\n  HttpResponse,\r\n  HttpErrorResponse,\r\n  HttpClient,\r\n  HttpHeaders,\r\n} from '@angular/common/http';\r\n\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { catchError, map, mergeMap, switchMap, tap } from 'rxjs/operators';\r\n\r\nimport { Store } from '@ngrx/store';\r\nimport { environment } from 'src/environments/environment';\r\nimport { AuthService } from '../modules/auth/auth.service';\r\nimport { signinSuccess, storeToken } from '../store/actions/auth.actions';\r\nimport { SharedService } from './shared.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HttpInterceptorService implements HttpInterceptor {\r\n  host = environment.host;\r\n  refreshInProgress = false;\r\n\r\n  constructor(\r\n    private store: Store,\r\n    private http: HttpClient,\r\n    private authService: AuthService,\r\n    private sharedService: SharedService,\r\n  ) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return this.sharedService.getToken().pipe(\r\n      switchMap((token) => {\r\n        if (token) {\r\n          req = req.clone({\r\n            headers: req.headers.set('Authorization', token),\r\n          });\r\n        }\r\n        return next.handle(req);\r\n      }),\r\n      catchError((error: HttpErrorResponse) => {\r\n        if (error.status === 401) {\r\n          // get protected resource fail\r\n          // bad token or new guest user without token\r\n          // try to get valid guest token\r\n          const httpOptions = {\r\n            headers: new HttpHeaders({\r\n              'Content-Type': 'application/json',\r\n            }),\r\n          };\r\n          return this.http.post<string>(this.host + '/api/auth/signup', null, httpOptions).pipe(\r\n            catchError((getTokenError: HttpErrorResponse) => {\r\n              // error get valid guest token\r\n              // forward error\r\n              return throwError(getTokenError);\r\n            }),\r\n            switchMap((token: string) => {\r\n              // successeful get valid guest token\r\n              // save new token to store\r\n              this.store.dispatch(signinSuccess({ token }));\r\n              req = req.clone({\r\n                headers: req.headers.set('Authorization', token),\r\n              });\r\n              // second try to get protected resource\r\n              return next.handle(req);\r\n            }),\r\n          );\r\n        }\r\n        return throwError(error);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, ofType } from '@ngrx/effects';\r\n\r\nimport { filter } from 'rxjs/operators';\r\nimport { EntityAction, ofEntityOp, OP_ERROR, OP_SUCCESS, EntityCacheAction } from '@ngrx/data';\r\nimport { ModalController, ToastController } from '@ionic/angular';\r\nimport * as fromAnalyticsActions from '../store/actions/analytics.actions';\r\nimport * as fromAnalyticsReducer from '../store/reducers/analytics.reducer';\r\nimport { AnalyticsActionTypes } from '../store/actions/analytics.actions';\r\nimport * as fromAuthActions from '../store/actions/auth.actions';\r\nimport { Action, Store } from '@ngrx/store';\r\nimport { OperatorFunction } from 'rxjs';\r\n\r\n/** Report ngrx-data success/error actions as toast messages **/\r\n@Injectable({ providedIn: 'root' })\r\nexport class ModalService {\r\n  constructor(private store: Store, public modalController: ModalController) {}\r\n  // const modal = await this.modalCtrl.create({\r\n  //   component: ModalExampleComponent,\r\n  // });\r\n  // modal.present();\r\n\r\n  // const { data, role } = await modal.onWillDismiss();\r\n  async presentModal(component: any, data: any) {\r\n    const modal = await this.modalController.create({\r\n      component,\r\n      componentProps: data,\r\n    });\r\n    modal.present();\r\n\r\n    return modal.onWillDismiss();\r\n  }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { from, Observable, of, throwError } from 'rxjs';\r\nimport { Storage } from '@capacitor/storage';\r\nimport { catchError, map, switchMap, tap } from 'rxjs/operators';\r\nimport {\r\n  GameType,\r\n  IGame,\r\n  IGamer,\r\n  IUser,\r\n  NamedScore,\r\n  ResultRoundWithTotal,\r\n  Round,\r\n  RoundCfg,\r\n  RoundMember,\r\n  RoundWithTotal,\r\n  UID,\r\n} from '../interfaces';\r\nimport { Store } from '@ngrx/store';\r\nimport { selectAllPlayers } from '../store/reducers/player.reducer';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { selectAllRounds } from '../store/reducers/round.reducer';\r\nimport {\r\n  selectAllRoundMembers,\r\n  selectByIdRoundMember,\r\n} from '../store/reducers/round-member.reducer';\r\nimport * as fromAppActions from '../store/actions/app.actions';\r\nimport { selectRedirectionUrl, selectGameType } from '../store/reducers/app.reducer';\r\nimport { Router } from '@angular/router';\r\nimport { redirection } from '../store/actions/app.actions';\r\nimport * as fromRoundMembersActions from '../store/actions/round-member.actions';\r\nimport { JwtDecodeOptions } from 'jwt-decode';\r\nimport { JWT_DECODE, JwtDecode } from '../config/jwt.config';\r\nimport { ModalService } from './modal.service';\r\nimport { GameResultComponent } from '../modules/games/game/game-result/game-result.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SharedService {\r\n  players: IGamer[] = [];\r\n  players$: Observable<IGamer[]>;\r\n\r\n  gameType: GameType;\r\n  gameType$: Observable<GameType>;\r\n\r\n  rounds: Round[] = [];\r\n  rounds$: Observable<Round[]>;\r\n\r\n  roundMembers: RoundMember[] = [];\r\n  roundMembers$: Observable<RoundMember[]>;\r\n\r\n  host = environment.host;\r\n  url$: Observable<string>;\r\n\r\n  constructor(\r\n    private store: Store,\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    protected modalService: ModalService,\r\n    @Inject(JWT_DECODE) private jwtDecode: JwtDecode,\r\n  ) {\r\n    this.url$ = this.store.select(selectRedirectionUrl);\r\n    this.url$.subscribe((url) => {\r\n      if (url) {\r\n        this.router.navigateByUrl(url);\r\n        this.store.dispatch(redirection({ redirectionUrl: null }));\r\n      }\r\n    });\r\n\r\n    this.players$ = this.store.select(selectAllPlayers);\r\n    this.players$.subscribe((players) => {\r\n      this.players = players;\r\n    });\r\n\r\n    this.gameType$ = this.store.select(selectGameType);\r\n    this.gameType$.subscribe((gameType) => {\r\n      this.gameType = gameType;\r\n    });\r\n\r\n    this.rounds$ = this.store.select(selectAllRounds);\r\n    this.rounds$.subscribe((rounds) => {\r\n      this.rounds = rounds;\r\n    });\r\n\r\n    this.roundMembers$ = this.store.select(selectAllRoundMembers);\r\n    this.roundMembers$.subscribe((roundMembers) => {\r\n      this.roundMembers = roundMembers;\r\n    });\r\n  }\r\n\r\n  setToStorage(key: string, value: any): Observable<void> {\r\n    return from(Storage.set({ key, value }));\r\n  }\r\n\r\n  setToken(token: string): Observable<void> {\r\n    return this.setToStorage('token', token);\r\n  }\r\n\r\n  getFromStorage(key: string): Observable<string | null> {\r\n    return from(Storage.get({ key })).pipe(map((getResult) => getResult.value));\r\n  }\r\n\r\n  getToken(): Observable<string | null> {\r\n    return this.getFromStorage('token');\r\n  }\r\n\r\n  getTokenAndDecode(): Observable<IUser> {\r\n    return this.getToken().pipe(\r\n      map((token) => {\r\n        return this.jwtDecode<IUser>(token);\r\n      }),\r\n    );\r\n  }\r\n\r\n  removeFromStorage(key: string): Observable<void> {\r\n    return from(Storage.remove({ key }));\r\n  }\r\n\r\n  removeToken(): Observable<void> {\r\n    return this.removeFromStorage('token');\r\n  }\r\n\r\n  getRating(): Observable<IGamer[]> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        // eslint-disable-next-line  @typescript-eslint/naming-convention\r\n        'Content-Type': 'application/json',\r\n      }),\r\n    };\r\n    return this.http\r\n      .get<IGamer[]>(environment.host + 'api/analytics/get-rating/', httpOptions)\r\n      .pipe(catchError((err) => throwError(err)));\r\n  }\r\n\r\n  getRatingByWins(): Observable<IGamer[]> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        // eslint-disable-next-line  @typescript-eslint/naming-convention\r\n        'Content-Type': 'application/json',\r\n      }),\r\n    };\r\n    return this.http\r\n      .get<IGamer[]>(environment.host + 'api/analytics/get-wins/', httpOptions)\r\n      .pipe(catchError((err) => throwError(err)));\r\n  }\r\n\r\n  getRatingByWinsToGames(): Observable<IGamer[]> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        // eslint-disable-next-line  @typescript-eslint/naming-convention\r\n        'Content-Type': 'application/json',\r\n      }),\r\n    };\r\n    return this.http\r\n      .get<IGamer[]>(environment.host + 'api/analytics/get-wins-to-games/', httpOptions)\r\n      .pipe(catchError((err) => throwError(err)));\r\n  }\r\n\r\n  getPlayerTotalScores(player: string): number {\r\n    let sum = 0;\r\n    this.roundMembers.forEach((roundMember) => {\r\n      if (roundMember.player === player) {\r\n        sum += roundMember.scoresLine.reduce((prev, cur) => prev + cur, 0);\r\n      }\r\n    });\r\n    return sum;\r\n  }\r\n\r\n  createClientRoundsWithTotal(): RoundWithTotal[] {\r\n    return this.rounds.map((round) => {\r\n      const players = round.roundMembers.map((memberId) => {\r\n        const member = this.roundMembers.find((roundMember) => roundMember._id === memberId);\r\n        return {\r\n          _id: member.player,\r\n          score: member.scoresLine.reduce((prev, cur) => prev + cur, 0),\r\n        };\r\n      });\r\n      return { _id: round._id, players };\r\n    });\r\n  }\r\n\r\n  createResultRoundWithTotal(): ResultRoundWithTotal {\r\n    if (this.gameType !== 'rummy') {\r\n      return {\r\n        _id: 'result',\r\n        players: this.players.map((player) => ({\r\n          _id: player._id,\r\n          score: this.getPlayerTotalScores(player._id),\r\n        })),\r\n      };\r\n    }\r\n    let acc = 0;\r\n    return {\r\n      _id: 'result',\r\n      players: this.players\r\n        .map((player) => {\r\n          const score = this.getPlayerTotalScores(player._id);\r\n          acc += score;\r\n          return {\r\n            _id: player._id,\r\n            score,\r\n          };\r\n        })\r\n        .map((player) => ({ ...player, score: player.score || acc * -1 })),\r\n    };\r\n  }\r\n\r\n  createResultOfGame(): IGame {\r\n    return {\r\n      type: this.gameType,\r\n      rounds: [...this.createClientRoundsWithTotal(), this.createResultRoundWithTotal()],\r\n    };\r\n  }\r\n\r\n  async presentModalFinishGame(game: IGame) {\r\n    let order = -1; //desc\r\n    if (game.type === 'uno' || game.type === 'rummy') {\r\n      order = 1;\r\n    }\r\n    const results = game.rounds.find((round) => round._id === 'result').players;\r\n    return this.modalService.presentModal(GameResultComponent, { results, order });\r\n  }\r\n\r\n  calcQtyOfArrItems(item: string | number, playerId: string, roundId: string): number {\r\n    let count = 0;\r\n\r\n    this.getMemberByPlayerId(playerId, roundId).scoresLine.forEach((arrItem) => {\r\n      if (arrItem === item) {\r\n        count++;\r\n      }\r\n    });\r\n    return count;\r\n  }\r\n\r\n  calcScores(playerId: UID, roundId: string): number {\r\n    return this.getMemberByPlayerId(playerId, roundId).scoresLine.reduce(\r\n      (prev, cur) => prev + cur,\r\n      0,\r\n    );\r\n  }\r\n\r\n  getPlayerColor(playerId: UID): string {\r\n    return this.players.find((player) => player._id === playerId).color;\r\n  }\r\n\r\n  getPlayerName(playerId: UID): string {\r\n    return this.players.find((player) => player._id === playerId).name;\r\n  }\r\n\r\n  getRoundById(roundId: string): Round {\r\n    return this.rounds.find((round) => round._id === roundId);\r\n  }\r\n\r\n  getMemberByPlayerId(playerId: UID, roundId: string): RoundMember {\r\n    const round = this.getRoundById(roundId);\r\n    return this.roundMembers.find(\r\n      (roundMember) =>\r\n        roundMember.player === playerId && round?.roundMembers.includes(roundMember._id),\r\n    );\r\n  }\r\n  getRoundMemberById$(roundMemberId: UID): Observable<RoundMember> {\r\n    return this.store.select(selectByIdRoundMember(roundMemberId));\r\n  }\r\n\r\n  logErrorToDB(message: string): Observable<string> {\r\n    // return of(error);\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        // eslint-disable-next-line  @typescript-eslint/naming-convention\r\n        'Content-Type': 'application/json',\r\n      }),\r\n    };\r\n    return this.http.post<string>(\r\n      this.host + '/api/logger/log-error-to-db',\r\n      { message },\r\n      httpOptions,\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, ofType } from '@ngrx/effects';\r\n\r\nimport { filter } from 'rxjs/operators';\r\nimport { EntityAction, ofEntityOp, OP_ERROR, OP_SUCCESS, EntityCacheAction } from '@ngrx/data';\r\nimport { ToastController } from '@ionic/angular';\r\nimport * as fromAnalyticsActions from '../store/actions/analytics.actions';\r\nimport * as fromAnalyticsReducer from '../store/reducers/analytics.reducer';\r\nimport { AnalyticsActionTypes } from '../store/actions/analytics.actions';\r\nimport * as fromAuthActions from '../store/actions/auth.actions';\r\nimport { Action, Store } from '@ngrx/store';\r\nimport { OperatorFunction } from 'rxjs';\r\n\r\n/** Report ngrx-data success/error actions as toast messages **/\r\n@Injectable({ providedIn: 'root' })\r\nexport class ToastService {\r\n  constructor(private store: Store, public toastController: ToastController) {}\r\n\r\n  async presentErrorToast(\r\n    message = 'Error',\r\n    action?: typeof fromAnalyticsActions.error | typeof fromAuthActions.error,\r\n  ) {\r\n    const toast = await this.toastController.create({\r\n      header: 'Error',\r\n      message,\r\n      icon: 'bug-outline',\r\n      position: 'top',\r\n      duration: 4000,\r\n      buttons: [\r\n        {\r\n          text: 'Ok',\r\n          role: 'cancel',\r\n          handler: () => {\r\n          },\r\n        },\r\n      ],\r\n    });\r\n    await toast.present();\r\n\r\n    const { role, ...rest } = await toast.onDidDismiss();\r\n    if (action) {\r\n      this.store.dispatch(action({ error: null }));\r\n    }\r\n  }\r\n}\r\n","import { createAction, props, union } from '@ngrx/store';\r\nimport { IGamer } from 'src/app/interfaces';\r\n\r\nexport enum AnalyticsActionTypes {\r\n  getRatingByWinsType = 'analytics/ratingByWins',\r\n  getRatingByWinsToGamesType = 'analytics/ratingByWinsToGames',\r\n  getRatingType = 'analytics/rating',\r\n  getRatingSuccessType = 'analytics/getRatingSuccess',\r\n  addManyType = 'analytics/addMany',\r\n\r\n  errorType = 'analytics/error',\r\n  loadingType = 'analytics/loading',\r\n}\r\n\r\nexport const getRatingByWins = createAction(\r\n  AnalyticsActionTypes.getRatingByWinsType,\r\n  props<{\r\n    gameType: string;\r\n    query?: any;\r\n  }>(),\r\n);\r\n\r\nexport const getRatingByWinsToGames = createAction(\r\n  AnalyticsActionTypes.getRatingByWinsToGamesType,\r\n  props<{\r\n    gameType: string;\r\n    query?: any;\r\n  }>(),\r\n);\r\n\r\nexport const getRating = createAction(\r\n  AnalyticsActionTypes.getRatingType,\r\n  props<{\r\n    gameType: string;\r\n    query?: any;\r\n  }>(),\r\n);\r\n\r\nexport const getRatingSuccess = createAction(\r\n  AnalyticsActionTypes.getRatingSuccessType,\r\n  props<{ analytics: IGamer[] }>(),\r\n);\r\n\r\nexport const addMany = createAction(\r\n  AnalyticsActionTypes.addManyType,\r\n  props<{ analytics: IGamer[] }>(),\r\n);\r\n\r\nexport const error = createAction(\r\n  AnalyticsActionTypes.errorType,\r\n  props<{ error: string | null }>(),\r\n);\r\n\r\nexport const loading = createAction(\r\n  AnalyticsActionTypes.loadingType,\r\n  props<{ loading: boolean }>(),\r\n);\r\n\r\nconst all = union({\r\n  error,\r\n  getRatingByWins,\r\n  getRatingByWinsToGames,\r\n  getRating,\r\n  getRatingSuccess,\r\n  loading,\r\n});\r\n\r\nexport type CoreActionsUnion = typeof all;\r\n","import { createAction, props, union } from '@ngrx/store';\r\nimport { Round, RoundMember, GameType, IGamer } from 'src/app/interfaces';\r\n\r\nexport enum AppActionTypes {\r\n  loadingType = 'app/loading',\r\n  clearGameType = 'app/clearGame',\r\n  loadGameType = 'app/loadGame',\r\n  gameTypeType = 'app/gameType',\r\n  gameTypeAndClearGameType = 'app/gameTypeAndClearGame',\r\n  finishGameType = 'app/finish game',\r\n  openNextRoundType = 'app/open next round',\r\n  createRoundsType = 'app/create rounds',\r\n  redirectionType = 'app/redirection',\r\n  nopType = 'app/nopType',\r\n}\r\n\r\nexport const loading = createAction(AppActionTypes.loadingType, props<{ loading: boolean }>());\r\n\r\nexport const clearGame = createAction(AppActionTypes.clearGameType);\r\n\r\nexport const loadGame = createAction(\r\n  AppActionTypes.loadGameType,\r\n  props<{ roundMembers: RoundMember[]; rounds: Round[] }>(),\r\n);\r\n\r\nexport const gameType = createAction(AppActionTypes.gameTypeType, props<{ gameType: GameType }>());\r\n\r\nexport const gameTypeAndClearGame = createAction(\r\n  AppActionTypes.gameTypeAndClearGameType,\r\n  props<{ gameType: GameType }>(),\r\n);\r\n\r\nexport const finishGame = createAction(AppActionTypes.finishGameType);\r\n\r\nexport const openNextRound = createAction(AppActionTypes.openNextRoundType);\r\n\r\nexport const createRounds = createAction(AppActionTypes.createRoundsType);\r\n\r\nexport const redirection = createAction(\r\n  AppActionTypes.redirectionType,\r\n  props<{ redirectionUrl: string | null }>(),\r\n);\r\n\r\nexport const nop = createAction(AppActionTypes.nopType);\r\n\r\nconst all = union({\r\n  loading,\r\n  clearGame,\r\n  loadGame,\r\n  createRounds,\r\n  openNextRound,\r\n  finishGame,\r\n  gameType,\r\n  gameTypeAndClearGame,\r\n  redirection,\r\n  nop,\r\n});\r\n\r\nexport type CoreActionsUnion = typeof all;\r\n","import { Action, createAction, props, union } from '@ngrx/store';\r\nimport { IUser } from 'src/app/interfaces';\r\n\r\nexport enum AuthActionTypes {\r\n  storeTokenType = 'auth/storeToken',\r\n  storeTokenSuccessType = 'auth/storeTokenSuccess',\r\n\r\n  storeUserFromTokenType = 'auth/storeUserFromToken',\r\n  storeUserFromTokenSuccessType = 'auth/storeUserFromTokenSuccess',\r\n\r\n  signinType = 'auth/signin',\r\n  signinSuccessType = 'auth/signinSuccess',\r\n  signupType = 'auth/signup',\r\n\r\n  logoutType = 'auth/logout',\r\n\r\n  redirectionType = 'auth/redirection',\r\n\r\n  errorType = 'auth/error',\r\n  loadingType = 'auth/loading',\r\n}\r\n\r\nexport const storeToken = createAction(AuthActionTypes.storeTokenType, props<{ token: string }>());\r\n\r\nexport const storeUserFromToken = createAction(AuthActionTypes.storeUserFromTokenType);\r\n\r\nexport const storeUserFromTokenSuccess = createAction(\r\n  AuthActionTypes.storeUserFromTokenSuccessType,\r\n  props<{ user: IUser }>(),\r\n);\r\n\r\nexport const signin = createAction(AuthActionTypes.signinType, props<{ user: IUser }>());\r\n\r\nexport const signinSuccess = createAction(\r\n  AuthActionTypes.signinSuccessType,\r\n  props<{ token: string }>(),\r\n);\r\n\r\nexport const signup = createAction(AuthActionTypes.signupType, props<{ user?: IUser }>());\r\n\r\nexport const logout = createAction(AuthActionTypes.logoutType);\r\n\r\nexport const redirection = createAction(\r\n  AuthActionTypes.redirectionType,\r\n  props<{ redirectionUrl: string | null }>(),\r\n);\r\n\r\nexport const error = createAction(AuthActionTypes.errorType, props<{ error: string }>());\r\n\r\nexport const loading = createAction(AuthActionTypes.loadingType, props<{ loading: boolean }>());\r\n\r\nconst all = union({\r\n  storeToken,\r\n  storeUserFromToken,\r\n  storeUserFromTokenSuccess,\r\n  signin,\r\n  signup,\r\n  error,\r\n  loading,\r\n  redirection,\r\n  logout,\r\n});\r\n\r\nexport type CoreActionsUnion = typeof all;\r\n","import { createAction, props } from '@ngrx/store';\r\nimport { State } from '../reducers';\r\n\r\nexport const hydrate = createAction('[Hydration] Hydrate');\r\n\r\nexport const hydrateSuccess = createAction(\r\n  '[Hydration] Hydrate Success',\r\n  props<{ state: State }>(),\r\n);\r\n\r\nexport const hydrateFailure = createAction('[Hydration] Hydrate Failure');\r\n","import { createAction, props } from '@ngrx/store';\r\nimport { Update } from '@ngrx/entity';\r\n\r\nimport { PersistStore } from '../../interfaces';\r\n\r\nexport const loadPersistStores = createAction(\r\n  '[PersistStore/API] Load PersistStores',\r\n  props<{ persistStores: PersistStore[] }>(),\r\n);\r\n\r\nexport const addPersistStore = createAction(\r\n  '[PersistStore/API] Add PersistStore',\r\n  props<{ persistStore: PersistStore }>(),\r\n);\r\n\r\nexport const upsertPersistStore = createAction(\r\n  '[PersistStore/API] Upsert PersistStore',\r\n  props<{ persistStore: PersistStore }>(),\r\n);\r\n\r\nexport const addPersistStores = createAction(\r\n  '[PersistStore/API] Add PersistStores',\r\n  props<{ persistStores: PersistStore[] }>(),\r\n);\r\n\r\nexport const upsertPersistStores = createAction(\r\n  '[PersistStore/API] Upsert PersistStores',\r\n  props<{ persistStores: PersistStore[] }>(),\r\n);\r\n\r\nexport const updatePersistStore = createAction(\r\n  '[PersistStore/API] Update PersistStore',\r\n  props<{ persistStore: Update<PersistStore> }>(),\r\n);\r\n\r\nexport const updatePersistStores = createAction(\r\n  '[PersistStore/API] Update PersistStores',\r\n  props<{ persistStores: Update<PersistStore>[] }>(),\r\n);\r\n\r\nexport const deletePersistStore = createAction(\r\n  '[PersistStore/API] Delete PersistStore',\r\n  props<{ id: string }>(),\r\n);\r\n\r\nexport const deletePersistStores = createAction(\r\n  '[PersistStore/API] Delete PersistStores',\r\n  props<{ ids: string[] }>(),\r\n);\r\n\r\nexport const clearPersistStores = createAction('[PersistStore/API] Clear PersistStores');\r\n","import { createAction, props, union } from '@ngrx/store';\r\nimport { Update } from '@ngrx/entity';\r\n\r\nimport { IGamer } from '../../interfaces';\r\n\r\nexport const loadPlayers = createAction(\r\n  '[Player/API] Load Players',\r\n  props<{ players: IGamer[] }>(),\r\n);\r\n\r\nexport const addPlayer = createAction('[Player/API] Add Player', props<{ player: IGamer }>());\r\n\r\nexport const upsertPlayer = createAction('[Player/API] Upsert Player', props<{ player: IGamer }>());\r\n\r\nexport const addPlayers = createAction('[Player/API] Add Players', props<{ players: IGamer[] }>());\r\n\r\nexport const upsertPlayers = createAction(\r\n  '[Player/API] Upsert Players',\r\n  props<{ players: IGamer[] }>(),\r\n);\r\n\r\nexport const updatePlayer = createAction(\r\n  '[Player/API] Update Player',\r\n  props<{ player: Update<IGamer> }>(),\r\n);\r\n\r\nexport const updatePlayers = createAction(\r\n  '[Player/API] Update Players',\r\n  props<{ players: Update<IGamer>[] }>(),\r\n);\r\n\r\nexport const deletePlayer = createAction('[Player/API] Delete Player', props<{ id: string }>());\r\n\r\nexport const deletePlayers = createAction(\r\n  '[Player/API] Delete Players',\r\n  props<{ ids: string[] }>(),\r\n);\r\n\r\nexport const clearPlayers = createAction('[Player/API] Clear Players');\r\n\r\nconst all = union({\r\n  loadPlayers,\r\n  addPlayer,\r\n  upsertPlayer,\r\n  addPlayers,\r\n  upsertPlayers,\r\n  updatePlayer,\r\n  updatePlayers,\r\n  deletePlayer,\r\n  deletePlayers,\r\n  clearPlayers,\r\n});\r\n\r\nexport type CoreActionsUnion = typeof all;\r\n","import { createAction, props, union } from '@ngrx/store';\r\nimport { Update } from '@ngrx/entity';\r\n\r\nimport { RoundMember } from '../../interfaces';\r\n\r\nexport const loadRoundMembers = createAction(\r\n  '[RoundMember/API] Load RoundMembers',\r\n  props<{ roundMembers: RoundMember[] }>(),\r\n);\r\n\r\nexport const addRoundMember = createAction(\r\n  '[RoundMember/API] Add RoundMember',\r\n  props<{ roundMember: RoundMember }>(),\r\n);\r\n\r\nexport const upsertRoundMember = createAction(\r\n  '[RoundMember/API] Upsert RoundMember',\r\n  props<{ roundMember: RoundMember }>(),\r\n);\r\n\r\nexport const addRoundMembers = createAction(\r\n  '[RoundMember/API] Add RoundMembers',\r\n  props<{ roundMembers: RoundMember[] }>(),\r\n);\r\n\r\nexport const upsertRoundMembers = createAction(\r\n  '[RoundMember/API] Upsert RoundMembers',\r\n  props<{ roundMembers: RoundMember[] }>(),\r\n);\r\n\r\nexport const updateRoundMember = createAction(\r\n  '[RoundMember/API] Update RoundMember',\r\n  props<{ roundMember: Update<RoundMember> }>(),\r\n);\r\n\r\nexport const updateRoundMembers = createAction(\r\n  '[RoundMember/API] Update RoundMembers',\r\n  props<{ roundMembers: Update<RoundMember>[] }>(),\r\n);\r\n\r\nexport const deleteRoundMember = createAction(\r\n  '[RoundMember/API] Delete RoundMember',\r\n  props<{ id: string }>(),\r\n);\r\n\r\nexport const deleteRoundMembers = createAction(\r\n  '[RoundMember/API] Delete RoundMembers',\r\n  props<{ ids: string[] }>(),\r\n);\r\n\r\nexport const clearRoundMembers = createAction('[RoundMember/API] Clear RoundMembers');\r\n\r\n// custom\r\nexport const updateRoundMembersSuccess = createAction(\r\n  '[RoundMember/API] Update RoundMembers Success',\r\n  props<{ roundMembers: RoundMember[] }>(),\r\n);\r\n\r\nexport const addRoundMembersSuccess = createAction(\r\n  '[RoundMember/API] Add RoundMembers Success',\r\n  props<{ roundMembers: RoundMember[] }>(),\r\n);\r\n\r\nexport const all = union({\r\n  loadRoundMembers,\r\n  addRoundMember,\r\n  upsertRoundMember,\r\n  addRoundMembers,\r\n  upsertRoundMembers,\r\n  updateRoundMember,\r\n  updateRoundMembers,\r\n  deleteRoundMember,\r\n  deleteRoundMembers,\r\n  clearRoundMembers,\r\n  updateRoundMembersSuccess,\r\n  addRoundMembersSuccess,\r\n});\r\n\r\nexport type CoreActionsUnion = typeof all;\r\n","import { createAction, props, union } from '@ngrx/store';\r\nimport { Update } from '@ngrx/entity';\r\n\r\nimport { Round } from '../../interfaces';\r\n\r\nexport const loadRounds = createAction('[Round/API] Load Rounds', props<{ rounds: Round[] }>());\r\n\r\nexport const addRound = createAction('[Round/API] Add Round', props<{ round: Round }>());\r\n\r\nexport const upsertRound = createAction('[Round/API] Upsert Round', props<{ round: Round }>());\r\n\r\nexport const addRounds = createAction('[Round/API] Add Rounds', props<{ rounds: Round[] }>());\r\n\r\nexport const upsertRounds = createAction('[Round/API] Upsert Rounds', props<{ rounds: Round[] }>());\r\n\r\nexport const updateRound = createAction(\r\n  '[Round/API] Update Round',\r\n  props<{ round: Update<Round> }>(),\r\n);\r\n\r\nexport const updateRounds = createAction(\r\n  '[Round/API] Update Rounds',\r\n  props<{ rounds: Update<Round>[] }>(),\r\n);\r\n\r\nexport const deleteRound = createAction('[Round/API] Delete Round', props<{ id: string }>());\r\n\r\nexport const deleteRounds = createAction('[Round/API] Delete Rounds', props<{ ids: string[] }>());\r\n\r\nexport const clearRounds = createAction('[Round/API] Clear Rounds');\r\n\r\nconst all = union({\r\n  loadRounds,\r\n  addRound,\r\n  upsertRound,\r\n  addRounds,\r\n  upsertRounds,\r\n  updateRound,\r\n  updateRounds,\r\n  deleteRound,\r\n  deleteRounds,\r\n  clearRounds,\r\n});\r\n\r\nexport type CoreActionsUnion = typeof all;\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, switchMap, catchError, tap, mergeMap, filter, withLatestFrom } from 'rxjs/operators';\r\nimport * as fromAuthActions from '../actions/auth.actions';\r\nimport { SharedService } from 'src/app/services/shared.service';\r\nimport * as fromAnalyticsActions from '../actions/analytics.actions';\r\nimport { Store } from '@ngrx/store';\r\nimport { GamerService } from '../gamer-data.service';\r\nimport { IGamer } from 'src/app/interfaces';\r\n\r\n@Injectable()\r\nexport class AnalyticsEffects {\r\n  setLoading = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(\r\n        fromAnalyticsActions.getRatingByWins,\r\n        fromAnalyticsActions.getRatingByWinsToGames,\r\n        fromAnalyticsActions.getRating,\r\n      ),\r\n      map((_) => fromAnalyticsActions.loading({ loading: true })),\r\n    );\r\n  });\r\n\r\n  cancelLoading = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAnalyticsActions.getRatingSuccess, fromAnalyticsActions.error),\r\n      filter(\r\n        (action) =>\r\n          // ignore error cancelling (null) actions\r\n          action.type !== fromAnalyticsActions.AnalyticsActionTypes.errorType ||\r\n          (action.type === fromAnalyticsActions.AnalyticsActionTypes.errorType && !!action.error),\r\n      ),\r\n      map((_) => fromAnalyticsActions.loading({ loading: false })),\r\n    );\r\n  });\r\n\r\n  getRatingByWins = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAnalyticsActions.getRatingByWins),\r\n      switchMap(() =>\r\n        this.sharedService.getRatingByWins().pipe(\r\n          switchMap((result) => this.addLoosers(of(result))),\r\n          map((analytics) => fromAnalyticsActions.getRatingSuccess({ analytics })),\r\n          catchError((error) =>\r\n            of(fromAnalyticsActions.error({ error: error.error.message || 'error' })),\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n  });\r\n\r\n  getRatingByWinsToGames = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAnalyticsActions.getRatingByWinsToGames),\r\n      switchMap(() =>\r\n        this.sharedService.getRatingByWinsToGames().pipe(\r\n          map((analytics) => fromAnalyticsActions.getRatingSuccess({ analytics })),\r\n          catchError((error) =>\r\n            of(fromAnalyticsActions.error({ error: error.error.message || 'error' })),\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n  });\r\n\r\n  getRating = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAnalyticsActions.getRating),\r\n      switchMap(() =>\r\n        this.sharedService.getRating().pipe(\r\n          map((analytics) => fromAnalyticsActions.getRatingSuccess({ analytics })),\r\n          catchError((error) =>\r\n            of(fromAnalyticsActions.error({ error: error.error.message || 'error' })),\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n  });\r\n\r\n  constructor(\r\n    private actions$: Actions<fromAuthActions.CoreActionsUnion>,\r\n    private sharedService: SharedService,\r\n    private gamerService: GamerService,\r\n  ) {}\r\n\r\n  // append gamers which hasn't wins yet\r\n  addLoosers(stream: Observable<IGamer[]>): Observable<IGamer[]> {\r\n    return stream.pipe(\r\n      withLatestFrom(this.gamerService.entities$),\r\n      map(([analytics, gamers]) => {\r\n        const losers = gamers\r\n          .filter((gamer) => !analytics.some((winner) => winner._id === gamer._id))\r\n          .map(({ _id, name, color }) => ({\r\n            _id,\r\n            name,\r\n            color,\r\n            rating: { wins: 0 },\r\n          }));\r\n        const fullList = analytics.concat(losers);\r\n        return fullList;\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, concatLatestFrom, createEffect, ofType } from '@ngrx/effects';\r\nimport { catchError, filter, map, switchMap, tap } from 'rxjs/operators';\r\n\r\nimport * as fromAnalyticsActions from '../actions/analytics.actions';\r\nimport * as fromAuthActions from '../actions/auth.actions';\r\nimport * as fromRoundActions from '../actions/round.actions';\r\nimport * as fromRoundMemberActions from '../actions/round-member.actions';\r\nimport * as fromRoundMemberReducer from '../reducers/round-member.reducer';\r\nimport * as fromRoundReducer from '../reducers/round.reducer';\r\nimport * as fromAppActions from '../actions/app.actions';\r\nimport * as fromPlayerActions from '../actions/player.actions';\r\nimport { routerNavigatedAction } from '@ngrx/router-store';\r\n\r\nimport * as fromAppReducer from '../reducers/app.reducer';\r\nimport * as fromPlayerReducer from '../reducers/player.reducer';\r\nimport * as fromPersistStoreReducer from '../reducers/persist-store.reducer';\r\n\r\nimport { GameType, IGame, Round, RoundCfg } from 'src/app/interfaces';\r\nimport { combineLatest, of } from 'rxjs';\r\nimport { Store } from '@ngrx/store';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { environment } from 'src/environments/environment';\r\nimport { SharedService } from 'src/app/services/shared.service';\r\nimport { GameService } from '../game-data.service';\r\n\r\n@Injectable()\r\nexport class AppEffects {\r\n  setLoading = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAnalyticsActions.loading, fromAuthActions.loading),\r\n      map((action) => fromAppActions.loading({ loading: action.loading })),\r\n    );\r\n  });\r\n\r\n  cancelLoading = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromRoundActions.clearRounds),\r\n      map((_) => fromAppActions.loading({ loading: false })),\r\n    );\r\n  });\r\n\r\n  finishGame = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAppActions.finishGame),\r\n      switchMap(() => {\r\n        const game: IGame = this.sharedService.createResultOfGame();\r\n        //save to db\r\n        return this.gameService.add(game).pipe(\r\n          switchMap((_) => this.sharedService.presentModalFinishGame(game)),\r\n          map(() => fromAppActions.clearGame()),\r\n          catchError((error) => [fromAppActions.loading({ loading: false })]),\r\n        );\r\n      }),\r\n    );\r\n  });\r\n\r\n  gameType = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(routerNavigatedAction),\r\n      concatLatestFrom(() => this.store.select(fromAppReducer.selectGameType)),\r\n      map(([{ payload }, gameType]) => {\r\n        const { urlAfterRedirects } = payload.event;\r\n        const payloadGameType = urlAfterRedirects.split('/');\r\n        if (payloadGameType[1] === 'games' || payloadGameType[1] === 'analytics') {\r\n          if (!gameType) {\r\n            // initial state, get gameType from url\r\n            return fromAppActions.gameType({ gameType: payloadGameType[2] as GameType });\r\n          }\r\n          if (payloadGameType[2] !== gameType) {\r\n            // fire action only if game was changed\r\n            // change game type and clear previous game\r\n            return fromAppActions.gameTypeAndClearGame({\r\n              gameType: payloadGameType[2] as GameType,\r\n            });\r\n          }\r\n        }\r\n        return fromAppActions.nop();\r\n      }),\r\n    );\r\n  });\r\n\r\n  clearGame = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAppActions.gameTypeAndClearGame),\r\n      map(() => fromAppActions.clearGame()),\r\n    );\r\n  });\r\n\r\n  clearRounds = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAppActions.clearGame),\r\n      map((_) => fromRoundActions.clearRounds()),\r\n    );\r\n  });\r\n\r\n  clearRoundMembers = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAppActions.clearGame),\r\n      map((_) => fromRoundMemberActions.clearRoundMembers()),\r\n    );\r\n  });\r\n\r\n  addRounds = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAppActions.loadGame),\r\n      map(({ rounds }) => fromRoundActions.addRounds({ rounds })),\r\n    );\r\n  });\r\n\r\n  addRoundMembers = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAppActions.loadGame),\r\n      map(({ roundMembers }) => fromRoundMemberActions.addRoundMembers({ roundMembers })),\r\n    );\r\n  });\r\n\r\n  checkOpenNextRound = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromRoundMemberActions.updateRoundMembersSuccess),\r\n      concatLatestFrom(() => this.store.select(fromAppReducer.selectGameType)),\r\n\r\n      filter(([action, gameType]) => false), // gameType === 'thousand'),\r\n\r\n      concatLatestFrom(() => this.store.select(fromRoundMemberReducer.selectAllRoundMembers)),\r\n      map(([action, roundMembers]) => {\r\n        const qtyOfPlayedSubrounds = roundMembers[roundMembers.length - 1].namedScoresLine.length;\r\n        const qtyOfPlayers = new Set(roundMembers.map((roundMember) => roundMember.player)).size;\r\n        if (qtyOfPlayedSubrounds >= qtyOfPlayers) {\r\n          // TODO  === or error\r\n          return fromAppActions.openNextRound();\r\n        }\r\n        return fromAppActions.nop();\r\n      }),\r\n    );\r\n  });\r\n\r\n  openNextRound = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAppActions.openNextRound),\r\n      concatLatestFrom(() => [\r\n        this.store.select(fromRoundReducer.selectAllRounds),\r\n        this.store.select(fromPlayerReducer.selectAllPlayers),\r\n        this.store.select(fromAppReducer.selectGameType),\r\n      ]),\r\n      map(([action, rounds, players, gameType]) => {\r\n        const nextRound: RoundCfg = environment.games[gameType].rounds[1];\r\n\r\n        const members = players.map((player) => ({\r\n          _id: uuidv4(),\r\n          player: player._id,\r\n          scoresLine: nextRound.initialScoresLine,\r\n          namedScoresLine: nextRound.initialNamedScoresLine,\r\n        }));\r\n        const newRoundMembers = [...members];\r\n        const newRounds = [\r\n          {\r\n            _id: nextRound._id + (rounds.length + 1),\r\n            roundMembers: members.map((member) => member._id),\r\n            clientGame: rounds[0].clientGame,\r\n            icon: nextRound.icon,\r\n            name: nextRound._id,\r\n            namePostfix: rounds.length + 1 + '',\r\n          },\r\n        ];\r\n        return fromAppActions.loadGame({ roundMembers: newRoundMembers, rounds: newRounds });\r\n      }),\r\n    );\r\n  });\r\n\r\n  createRounds = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAppActions.createRounds),\r\n      concatLatestFrom(() => [\r\n        this.store.select(fromPlayerReducer.selectAllPlayers),\r\n        this.store.select(fromAppReducer.selectGameType),\r\n      ]),\r\n      map(([action, players, gameType]) => {\r\n        const clientGame = {\r\n          _id: uuidv4(),\r\n          type: gameType,\r\n        };\r\n        const roundsCfg: RoundCfg[] = environment.games[gameType].rounds;\r\n        let roundMembers = [];\r\n        const rounds: Round[] = roundsCfg\r\n          .filter((roundCfg: RoundCfg) => roundCfg._id !== 'start')\r\n          .map((roundCfg: RoundCfg) => {\r\n            const members = players.map((player) => ({\r\n              _id: uuidv4(),\r\n              player: player._id,\r\n              scoresLine: roundCfg.initialScoresLine,\r\n              namedScoresLine: roundCfg.initialNamedScoresLine,\r\n            }));\r\n            roundMembers = [...roundMembers, ...members];\r\n            return {\r\n              _id: roundCfg._id + roundCfg.namePostfix,\r\n              roundMembers: members.map((member) => member._id),\r\n              clientGame,\r\n              icon: roundCfg.icon,\r\n              name: roundCfg._id,\r\n              namePostfix: roundCfg.namePostfix,\r\n            };\r\n          });\r\n        return fromAppActions.loadGame({ roundMembers, rounds });\r\n      }),\r\n    );\r\n  });\r\n\r\n  environment = environment;\r\n  constructor(\r\n    private actions$: Actions<fromAppActions.CoreActionsUnion>,\r\n    private store: Store,\r\n    private sharedService: SharedService,\r\n    private gameService: GameService,\r\n  ) {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Action, Store } from '@ngrx/store';\r\nimport { Actions, concatLatestFrom, createEffect, ofType, OnInitEffects } from '@ngrx/effects';\r\nimport { noop, Observable, of, throwError } from 'rxjs';\r\nimport { map, switchMap, catchError, tap, mergeMap, filter, withLatestFrom } from 'rxjs/operators';\r\n\r\nimport * as fromAuthActions from '../actions/auth.actions';\r\nimport * as fromRoundActions from '../actions/round.actions';\r\nimport * as fromPlayerActions from '../actions/player.actions';\r\nimport * as fromAppActions from '../actions/app.actions';\r\n\r\nimport { AuthService } from '../../modules/auth/auth.service';\r\nimport { IUser } from 'src/app/interfaces';\r\nimport { userInfo } from 'os';\r\nimport { GamerService } from '../gamer-data.service';\r\nimport { EntityActionFactory, EntityOp, MergeStrategy } from '@ngrx/data';\r\nimport { SharedService } from 'src/app/services/shared.service';\r\nimport { State } from '../reducers';\r\nimport { selectUser } from '../reducers/auth.reducer';\r\nimport { nop } from '../actions/app.actions';\r\n\r\n@Injectable()\r\nexport class AuthEffects implements OnInitEffects {\r\n  setLoading = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAuthActions.signin, fromAuthActions.signup, fromAuthActions.logout),\r\n      map((_) => fromAuthActions.loading({ loading: true })),\r\n    );\r\n  });\r\n\r\n  cancelLoading = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAuthActions.storeUserFromTokenSuccess, fromAuthActions.error),\r\n      filter(\r\n        (action) =>\r\n          // ignore error cancelling (null) actions\r\n          action.type !== fromAuthActions.AuthActionTypes.errorType ||\r\n          (action.type === fromAuthActions.AuthActionTypes.errorType && !!action.error),\r\n      ),\r\n      map((_) => fromAuthActions.loading({ loading: false })),\r\n    );\r\n  });\r\n\r\n  // signin, signup, logout -> clearRounds\r\n  // signup, logout -> clearPlayers\r\n  // signin, signup, logout -> storeToken -> storeUserFromToken -> storeUserFromTokenSuccess\r\n\r\n  signin = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAuthActions.signin),\r\n      map((action) => action.user),\r\n      switchMap((user) =>\r\n        this.authService.signin(user).pipe(\r\n          map((token) => fromAuthActions.storeToken({ token })),\r\n          catchError((error) =>\r\n            of(fromAuthActions.error({ error: error.error.message || 'error' })),\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n  });\r\n\r\n  signup = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAuthActions.signup, fromAuthActions.logout),\r\n      map((action = null) => {\r\n        if ('user' in action) {\r\n          return action.user;\r\n        }\r\n        return null;\r\n      }),\r\n      switchMap((user) =>\r\n        this.authService.signup(user).pipe(\r\n          map((token) => fromAuthActions.storeToken({ token })),\r\n          catchError((error) =>\r\n            of(fromAuthActions.error({ error: error.error.message || 'error' })),\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n  });\r\n\r\n  clearRounds = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAuthActions.signup, fromAuthActions.signin, fromAuthActions.logout),\r\n      map(() => fromRoundActions.clearRounds()),\r\n      catchError((error) => of(fromAuthActions.error({ error: error.error.message || 'error' }))),\r\n    );\r\n  });\r\n\r\n  clearPlayers = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAuthActions.signup, fromAuthActions.logout),\r\n      map(() => fromPlayerActions.clearPlayers()),\r\n      catchError((error) => of(fromAuthActions.error({ error: error.error.message || 'error' }))),\r\n    );\r\n  });\r\n\r\n  storeToken = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAuthActions.storeToken),\r\n      map((action) => action.token),\r\n      switchMap((token) => this.sharedService.setToken(token)),\r\n      map(() => fromAuthActions.storeUserFromToken()),\r\n      catchError((error) => of(fromAuthActions.error({ error: error.error.message || 'error' }))),\r\n    );\r\n  });\r\n\r\n  storeUserFromToken = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAuthActions.storeUserFromToken),\r\n      switchMap(() =>\r\n        this.sharedService.getTokenAndDecode().pipe(\r\n          map((user) => fromAuthActions.storeUserFromTokenSuccess({ user })),\r\n          catchError((error) => {\r\n            return of(fromAuthActions.signup({}));\r\n          }),\r\n        ),\r\n      ),\r\n      catchError((error) => of(fromAuthActions.error({ error: error.message }))),\r\n    );\r\n  });\r\n\r\n  redirectAfterSignin = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAuthActions.storeUserFromTokenSuccess),\r\n      map((payload) => {\r\n        if (payload.user?.role === 'member') {\r\n          return fromAuthActions.redirection({ redirectionUrl: '/' });\r\n        }\r\n        return nop();\r\n      }),\r\n    );\r\n  });\r\n\r\n  getGamers = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAuthActions.storeUserFromTokenSuccess),\r\n      map((_) =>\r\n        this.entityActionFactory.create(\r\n          'gamer',\r\n          EntityOp.QUERY_LOAD,\r\n          null,\r\n\r\n          {\r\n            tag: 'gamer/on storeUserFromToken Success',\r\n          },\r\n        ),\r\n      ),\r\n      catchError((error) => of(fromAuthActions.error({ error: error.error.message || 'error' }))),\r\n    );\r\n  });\r\n\r\n  removeAllRecentPlayers = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAuthActions.signinSuccess),\r\n      map((action) => action.token),\r\n      map((token) => fromAuthActions.storeToken({ token })),\r\n      catchError((error) => of(fromAuthActions.error({ error: error.error.message || 'error' }))),\r\n    );\r\n  });\r\n\r\n  constructor(\r\n    private actions$: Actions<fromAuthActions.CoreActionsUnion>,\r\n    private store: Store,\r\n    private authService: AuthService,\r\n    private sharedService: SharedService,\r\n    private entityActionFactory: EntityActionFactory,\r\n  ) {}\r\n\r\n  ngrxOnInitEffects(): Action {\r\n    return fromAuthActions.storeUserFromToken();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, concatLatestFrom, createEffect, ofType, OnInitEffects } from '@ngrx/effects';\r\nimport { Action, Store } from '@ngrx/store';\r\nimport { distinctUntilChanged, map, switchMap, tap } from 'rxjs/operators';\r\nimport { selectUrlRouter, State } from '../reducers';\r\nimport * as HydrationActions from '../actions/hydration.actions';\r\nimport { SharedService } from 'src/app/services/shared.service';\r\nimport { Router } from '@angular/router';\r\nimport { RouterState } from '@ngrx/router-store';\r\nimport { redirection } from '../actions/app.actions';\r\n\r\n@Injectable()\r\nexport class HydrationEffects implements OnInitEffects {\r\n  hydrate$ = createEffect(() => {\r\n    return this.action$.pipe(\r\n      ofType(HydrationActions.hydrate),\r\n      switchMap(() => this.sharedService.getFromStorage('appState')),\r\n      map((storageValue) => {\r\n        if (storageValue) {\r\n          const state = JSON.parse(storageValue);\r\n          return HydrationActions.hydrateSuccess({ state });\r\n        }\r\n        return HydrationActions.hydrateFailure();\r\n      }),\r\n    );\r\n  });\r\n\r\n  navigate$ = createEffect(() => {\r\n    return this.action$.pipe(\r\n      ofType(HydrationActions.hydrateSuccess),\r\n      concatLatestFrom(() => this.store.select(selectUrlRouter)),\r\n      map(([action, url]) => {\r\n        return redirection({ redirectionUrl: url });\r\n      }),\r\n    );\r\n  });\r\n\r\n  serialize$ = createEffect(\r\n    () => {\r\n      return this.action$.pipe(\r\n        ofType(HydrationActions.hydrateSuccess, HydrationActions.hydrateFailure),\r\n        switchMap(() => this.store),\r\n        distinctUntilChanged(),\r\n        switchMap((store: State) => {\r\n          return this.sharedService.setToStorage(\r\n            'appState',\r\n            JSON.stringify({\r\n              players: store.players,\r\n              rounds: store.rounds,\r\n              roundMembers: store.roundMembers,\r\n              persistStore: store.persistStore,\r\n              router: store.router,\r\n            }),\r\n          );\r\n        }),\r\n      );\r\n    },\r\n    { dispatch: false },\r\n  );\r\n\r\n  constructor(\r\n    private action$: Actions,\r\n    private store: Store,\r\n    private sharedService: SharedService,\r\n    private router: Router,\r\n  ) {}\r\n\r\n  ngrxOnInitEffects(): Action {\r\n    return HydrationActions.hydrate();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, concatLatestFrom, createEffect, ofType, OnInitEffects } from '@ngrx/effects';\r\nimport { Action, Store } from '@ngrx/store';\r\nimport {\r\n  distinctUntilChanged,\r\n  map,\r\n  mergeMap,\r\n  switchMap,\r\n  tap,\r\n  withLatestFrom,\r\n} from 'rxjs/operators';\r\nimport { State } from '../reducers';\r\nimport * as fromPlayerReducer from '../reducers/player.reducer';\r\nimport * as fromRoundMemberReducer from '../reducers/round-member.reducer';\r\nimport * as fromRoundReducer from '../reducers/round.reducer';\r\nimport * as fromAppReducer from '../reducers/app.reducer';\r\nimport * as fromPersistStoreReducer from '../reducers/persist-store.reducer';\r\nimport * as fromPersistStoreActions from '../actions/persist-store.actions';\r\nimport * as fromAppActions from '../actions/app.actions';\r\nimport * as fromPlayerActions from '../actions/player.actions';\r\n\r\nimport { SharedService } from 'src/app/services/shared.service';\r\n\r\n@Injectable()\r\nexport class PersistStoreEffects {\r\n  upsertPersistStore$ = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(\r\n        fromPlayerActions.addPlayer,\r\n        fromPlayerActions.addPlayers,\r\n        fromPlayerActions.clearPlayers,\r\n        fromPlayerActions.deletePlayer,\r\n        fromPlayerActions.deletePlayers,\r\n        fromPlayerActions.loadPlayers,\r\n        fromPlayerActions.updatePlayer,\r\n        fromPlayerActions.updatePlayer,\r\n        fromPlayerActions.updatePlayers,\r\n        fromPlayerActions.upsertPlayer,\r\n        fromPlayerActions.upsertPlayers,\r\n      ),\r\n      concatLatestFrom(() => [\r\n        this.store.select(fromAppReducer.selectGameType),\r\n        this.store.select(fromPlayerReducer.selectAllPlayers),\r\n      ]),\r\n      map(([_, gameType, players]) => {\r\n        if (!gameType) {\r\n          return fromAppActions.nop();\r\n        }\r\n        return fromPersistStoreActions.upsertPersistStore({\r\n          persistStore: { _id: gameType, players },\r\n        });\r\n      }),\r\n    );\r\n  });\r\n\r\n  getFromPersistStore = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromAppActions.clearGame),\r\n      concatLatestFrom(() => this.store.select(fromAppReducer.selectGameType)),\r\n      concatLatestFrom(([action, gameType]) =>\r\n        this.store.select(fromPersistStoreReducer.selectByIdPersistStore(gameType)),\r\n      ),\r\n      map(([action, persistStore]) => {\r\n        if (persistStore && persistStore.players) {\r\n          return fromPlayerActions.loadPlayers({ players: persistStore.players });\r\n        } else {\r\n          return fromPlayerActions.clearPlayers();\r\n        }\r\n      }),\r\n    );\r\n  });\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private store: Store,\r\n    private sharedService: SharedService,\r\n  ) {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, concatLatestFrom, createEffect, ofType } from '@ngrx/effects';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport * as fromPlayerActions from '../actions/player.actions';\r\nimport * as fromAppActions from '../actions/app.actions';\r\nimport * as fromPersistStoreReducer from '../reducers/persist-store.reducer';\r\nimport { Store } from '@ngrx/store';\r\n\r\n@Injectable()\r\nexport class PlayerEffects {\r\n  constructor(\r\n    private actions$: Actions<fromPlayerActions.CoreActionsUnion>,\r\n    private store: Store,\r\n  ) {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, concatLatestFrom, createEffect, ofType } from '@ngrx/effects';\r\nimport { filter, map, tap } from 'rxjs/operators';\r\n\r\nimport * as fromRoundMemberActions from '../actions/round-member.actions';\r\nimport * as fromAppActions from '../actions/app.actions';\r\nimport * as fromRoundMemberReducer from '../reducers/round-member.reducer';\r\nimport { Store } from '@ngrx/store';\r\nimport { EntityOp, ofEntityOp, ofEntityType } from '@ngrx/data';\r\n\r\n@Injectable()\r\nexport class RoundMemberEffects {\r\n  updateRoundMembersSuccess = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromRoundMemberActions.updateRoundMembers),\r\n      concatLatestFrom(() => this.store.select(fromRoundMemberReducer.selectAllRoundMembers)),\r\n      map(([action, roundMembers]) =>\r\n        fromRoundMemberActions.updateRoundMembersSuccess({ roundMembers }),\r\n      ),\r\n    );\r\n  });\r\n\r\n  addRoundMembersSuccess = createEffect(() => {\r\n    return this.actions$.pipe(\r\n      ofType(fromRoundMemberActions.addRoundMembers),\r\n      map(({ roundMembers }) => fromRoundMemberActions.addRoundMembersSuccess({ roundMembers })),\r\n    );\r\n  });\r\n\r\n  // loadGame = createEffect(() => {\r\n  //     return this.actions$.pipe(\r\n  //         ofType(fromAppActions.loadGame),\r\n  //         map(({roundMembers}) => fromRoundMemberActions.loadRoundMembers({roundMembers})),\r\n  //     );\r\n  // });\r\n\r\n  constructor(\r\n    private actions$: Actions<fromRoundMemberActions.CoreActionsUnion>,\r\n    private store: Store,\r\n  ) {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, concatLatestFrom, createEffect, ofType } from '@ngrx/effects';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport * as fromRoundActions from '../actions/round.actions';\r\nimport * as fromAppActions from '../actions/app.actions';\r\nimport * as fromPersistStoreReducer from '../reducers/persist-store.reducer';\r\n\r\nimport { Store } from '@ngrx/store';\r\n\r\n@Injectable()\r\nexport class RoundEffects {\r\n  // clearGame = createEffect(() => {\r\n  //     return this.actions$.pipe(\r\n  //         ofType(fromAppActions.clearGame),\r\n  //         map((_) => fromRoundActions.clearRounds()),\r\n  //     );\r\n  // });\r\n\r\n  // loadGame = createEffect(() => {\r\n  //     return this.actions$.pipe(\r\n  //         ofType(fromAppActions.loadGame),\r\n  //         map(({ rounds }) => fromRoundActions.loadRounds({ rounds })),\r\n  //     );\r\n  // });\r\n\r\n  constructor(private actions$: Actions<fromRoundActions.CoreActionsUnion>, private store: Store) {}\r\n}\r\n","import { EntityMetadataMap, EntityDataModuleConfig } from '@ngrx/data';\r\n\r\nexport const entityMetadata: EntityMetadataMap = {\r\n  gamer: {\r\n    selectId: (gamer) => gamer._id,\r\n    entityDispatcherOptions: {\r\n      optimisticAdd: false,\r\n      optimisticUpdate: false,\r\n      optimisticDelete: false,\r\n    },\r\n  },\r\n  game: {\r\n    selectId: (game) => game._id,\r\n    entityDispatcherOptions: {\r\n      optimisticAdd: false,\r\n      optimisticUpdate: false,\r\n      optimisticDelete: false,\r\n    },\r\n  },\r\n};\r\n\r\nconst pluralNames = {\r\n  gamer: 'gamers',\r\n  game: 'games',\r\n};\r\n\r\nexport const entityConfig: EntityDataModuleConfig = {\r\n  entityMetadata,\r\n  pluralNames,\r\n};\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  DefaultDataService,\r\n  EntityCollectionServiceBase,\r\n  EntityCollectionServiceElementsFactory,\r\n  HttpUrlGenerator,\r\n} from '@ngrx/data';\r\nimport { Observable } from 'rxjs';\r\nimport { IGame } from '../interfaces';\r\n\r\n@Injectable()\r\nexport class GameDataService extends DefaultDataService<IGame> {\r\n  constructor(http: HttpClient, httpUrlGenerator: HttpUrlGenerator) {\r\n    super('game', http, httpUrlGenerator);\r\n  }\r\n  // getAll(): Observable<IGame[]> {\r\n  //   const httpOptions = {\r\n  //     headers: new HttpHeaders({\r\n  //       'Content-language': 'en-US',\r\n  //     }),\r\n  //   };\r\n  //   const urlPath = this.httpUrlGenerator.collectionResource('Operator', '');\r\n  //   console.log('get all games');\r\n  //   console.log('urlPath', urlPath);\r\n  //   return this.http.get<IGame[]>(urlPath, httpOptions);\r\n  // }\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class GameService extends EntityCollectionServiceBase<IGame> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('game', serviceElementsFactory);\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  EntityCollectionServiceBase,\r\n  DefaultDataService,\r\n  HttpUrlGenerator,\r\n  Logger,\r\n  QueryParams,\r\n  EntityCollectionServiceElementsFactory,\r\n} from '@ngrx/data';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { IGamer, IUser } from '../interfaces';\r\n\r\n@Injectable()\r\nexport class GamerDataService extends DefaultDataService<IGamer> {\r\n  constructor(http: HttpClient, httpUrlGenerator: HttpUrlGenerator) {\r\n    super('gamer', http, httpUrlGenerator);\r\n  }\r\n  // add(entity: IGamer): Observable<IGamer> {\r\n  //   console.log('add entity', entity);\r\n  //   return super.add(entity).pipe(tap((gamers) => console.log('gamers all', gamers)));\r\n  // }\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class GamerService extends EntityCollectionServiceBase<IGamer> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('gamer', serviceElementsFactory);\r\n  }\r\n}\r\n","import { createReducer, on } from '@ngrx/store';\r\nimport { IGamer } from '../../interfaces';\r\nimport * as fromAnalyticsActions from '../actions/analytics.actions';\r\nimport { createFeatureSelector, createSelector } from '@ngrx/store';\r\n\r\nexport const analyticsFeatureKey = 'analytics';\r\n\r\nexport interface State {\r\n  analytics: IGamer[];\r\n  error: string | null;\r\n  loading: boolean;\r\n}\r\n\r\nexport const initialState: State = {\r\n  analytics: [],\r\n  error: null,\r\n  loading: false,\r\n};\r\n\r\nexport const reducer = createReducer(\r\n  initialState,\r\n  on(\r\n    fromAnalyticsActions.getRatingSuccess,\r\n    (state, { analytics }): State => ({\r\n      ...state,\r\n      analytics,\r\n      error: null,\r\n    }),\r\n  ),\r\n  on(\r\n    fromAnalyticsActions.addMany,\r\n    (state, { analytics }): State => ({\r\n      ...state,\r\n      analytics: [...state.analytics, ...analytics],\r\n      error: null,\r\n    }),\r\n  ),\r\n  on(\r\n    fromAnalyticsActions.error,\r\n    (state, { error }): State => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n  ),\r\n  on(\r\n    fromAnalyticsActions.loading,\r\n    (state, { loading }): State => ({\r\n      ...state,\r\n      loading,\r\n    }),\r\n  ),\r\n);\r\n\r\nconst selectFeature = createFeatureSelector<State>(analyticsFeatureKey);\r\n\r\nexport const selectRating = createSelector(selectFeature, (state) => state.analytics);\r\nexport const selectLoading = createSelector(selectFeature, (state) => state.loading);\r\n","import { createReducer, on } from '@ngrx/store';\r\nimport * as fromAppActions from '../actions/app.actions';\r\nimport { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport { GameType } from 'src/app/interfaces';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nexport const appFeatureKey = 'app';\r\n\r\nexport interface State {\r\n  loading: boolean;\r\n  gameType: GameType | null;\r\n  redirectionUrl: string | null;\r\n  error: string | null;\r\n}\r\n\r\nexport const initialState: State = {\r\n  loading: false,\r\n  gameType: null, //Object.keys(environment.games)[0] as GameType,\r\n  redirectionUrl: null,\r\n  error: null,\r\n};\r\n\r\nexport const reducer = createReducer(\r\n  initialState,\r\n  on(\r\n    fromAppActions.loading,\r\n    (state, { loading }): State => ({\r\n      ...state,\r\n      loading,\r\n    }),\r\n  ),\r\n  on(\r\n    fromAppActions.finishGame,\r\n    (state, _): State => ({\r\n      ...state,\r\n      loading: true,\r\n    }),\r\n  ),\r\n  on(\r\n    fromAppActions.gameType,\r\n    (state, { gameType }): State => ({\r\n      ...state,\r\n      gameType,\r\n    }),\r\n  ),\r\n  on(\r\n    fromAppActions.gameTypeAndClearGame,\r\n    (state, { gameType }): State => ({\r\n      ...state,\r\n      gameType,\r\n    }),\r\n  ),\r\n  on(\r\n    fromAppActions.redirection,\r\n    (state, { redirectionUrl }): State => ({\r\n      ...state,\r\n      redirectionUrl,\r\n    }),\r\n  ),\r\n);\r\n\r\nconst selectFeature = createFeatureSelector<State>(appFeatureKey);\r\n\r\nexport const selectLoading = createSelector(selectFeature, (state) => state.loading);\r\nexport const selectGameType = createSelector(selectFeature, (state) => state.gameType);\r\nexport const selectRedirectionUrl = createSelector(selectFeature, (state) => state.redirectionUrl);\r\n","import { createReducer, on } from '@ngrx/store';\r\nimport { IUser } from '../../interfaces';\r\nimport * as fromAuthActions from '../actions/auth.actions';\r\nimport { createFeatureSelector, createSelector } from '@ngrx/store';\r\n\r\nexport const authFeatureKey = 'auth';\r\n\r\nexport interface State {\r\n  user: IUser;\r\n  error: any;\r\n  redirectionUrl: string | null;\r\n  loading: boolean;\r\n}\r\n\r\nexport const initialState: State = {\r\n  user: null,\r\n  error: null,\r\n  redirectionUrl: null,\r\n  loading: false,\r\n};\r\n\r\nexport const reducer = createReducer(\r\n  initialState,\r\n  on(\r\n    fromAuthActions.storeUserFromTokenSuccess,\r\n    (state, { user }): State => ({\r\n      ...state,\r\n      user,\r\n      error: null,\r\n    }),\r\n  ),\r\n  on(\r\n    fromAuthActions.error,\r\n    (state, { error }): State => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n  ),\r\n  on(\r\n    fromAuthActions.loading,\r\n    (state, { loading }): State => ({\r\n      ...state,\r\n      loading,\r\n    }),\r\n  ),\r\n  on(\r\n    fromAuthActions.redirection,\r\n    (state, { redirectionUrl }): State => ({\r\n      ...state,\r\n      redirectionUrl,\r\n    }),\r\n  ),\r\n);\r\n\r\nconst selectFeature = createFeatureSelector<State>(authFeatureKey);\r\n\r\nexport const selectUser = createSelector(selectFeature, (state) => state.user);\r\nexport const selectUserRole = createSelector(selectFeature, (state) => state.user?.role);\r\nexport const selectRedirectionUrl = createSelector(selectFeature, (state) => state.redirectionUrl);\r\n","import { Action, ActionReducer } from '@ngrx/store';\r\nimport * as HydrationActions from '../actions/hydration.actions';\r\nimport { State } from '../reducers';\r\n\r\nconst isHydrateSuccess = (\r\n  action: Action,\r\n): action is ReturnType<typeof HydrationActions.hydrateSuccess> => {\r\n  return action.type === HydrationActions.hydrateSuccess.type;\r\n};\r\n\r\nexport const hydrationMetaReducer = (reducer: ActionReducer<State>): ActionReducer<State> => {\r\n  return (state, action) => {\r\n    if (isHydrateSuccess(action)) {\r\n      return { ...state, ...action.state };\r\n    } else {\r\n      return reducer(state, action);\r\n    }\r\n  };\r\n};\r\n","import {\r\n  ActionReducer,\r\n  ActionReducerMap,\r\n  createFeatureSelector,\r\n  createSelector,\r\n  MetaReducer,\r\n} from '@ngrx/store';\r\nimport { AuthService } from 'src/app/modules/auth/auth.service';\r\n\r\nimport { environment } from '../../../environments/environment';\r\nimport * as fromAuth from './auth.reducer';\r\nimport * as fromRounds from './round.reducer';\r\nimport * as fromRoundMembers from './round-member.reducer';\r\nimport { hydrationMetaReducer } from './hydration.reducer';\r\nimport * as fromPlayers from './player.reducer';\r\nimport * as fromAnalytics from './analytics.reducer';\r\nimport * as fromApp from './app.reducer';\r\nimport * as fromPersistStore from './persist-store.reducer';\r\nimport { routerReducer } from '@ngrx/router-store';\r\nimport { getSelectors, RouterReducerState, RouterState } from '@ngrx/router-store';\r\n\r\nexport interface State {\r\n  auth: fromAuth.State;\r\n  rounds: fromRounds.State;\r\n  roundMembers: fromRoundMembers.State;\r\n  players: fromPlayers.State;\r\n  analytics: fromAnalytics.State;\r\n  app: fromApp.State;\r\n  persistStore: fromPersistStore.State;\r\n  router: RouterReducerState<any>; // typeof routerReducer;\r\n}\r\n\r\nexport const reducers: ActionReducerMap<State> = {\r\n  auth: fromAuth.reducer,\r\n  rounds: fromRounds.reducer,\r\n  roundMembers: fromRoundMembers.reducer,\r\n  players: fromPlayers.reducer,\r\n  analytics: fromAnalytics.reducer,\r\n  app: fromApp.reducer,\r\n  router: routerReducer,\r\n  persistStore: fromPersistStore.reducer,\r\n};\r\n\r\nexport const metaReducers: MetaReducer<State>[] = !environment.production\r\n  ? [hydrationMetaReducer]\r\n  : [hydrationMetaReducer];\r\n\r\nexport const {\r\n  selectCurrentRoute, // select the current route\r\n  selectFragment, // select the current route fragment\r\n  selectQueryParams, // select the current route query params\r\n  selectQueryParam, // factory function to select a query param\r\n  selectRouteParams, // select the current route params\r\n  selectRouteParam, // factory function to select a route param\r\n  selectRouteData, // select the current route data\r\n  selectUrl, // select the current url\r\n} = getSelectors();\r\n\r\nexport const selectFeature = createFeatureSelector<RouterReducerState<any>>('router');\r\nexport const selectUrlRouter = createSelector(\r\n  (state: State) => state,\r\n  (value) => value.router.state.url,\r\n);\r\n// export const selectUrlRouter = createSelector((state: State) => state.ngrxRouter, selectUrl);\r\n// export const selectUrlRouter = createSelector(selectFeature, selectUrl);\r\n// export const selectFragmentRouter = createSelector(selectFeature, selectFragment);\r\n","import { Action, createFeatureSelector, createReducer, createSelector, on } from '@ngrx/store';\r\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\r\nimport { GameType, PersistStore } from '../../interfaces';\r\nimport * as PersistStoreActions from '../actions/persist-store.actions';\r\n\r\nexport const persistStoresFeatureKey = 'persistStore';\r\n\r\nexport interface State extends EntityState<PersistStore> {\r\n  // additional entities state properties\r\n}\r\n\r\nexport const adapter: EntityAdapter<PersistStore> = createEntityAdapter<PersistStore>({\r\n  selectId: (storage: PersistStore) => storage._id,\r\n});\r\n\r\nexport const initialState: State = adapter.getInitialState({\r\n  // additional entity state properties\r\n});\r\n\r\nexport const reducer = createReducer(\r\n  initialState,\r\n  on(PersistStoreActions.addPersistStore, (state, action) =>\r\n    adapter.addOne(action.persistStore, state),\r\n  ),\r\n  on(PersistStoreActions.upsertPersistStore, (state, action) =>\r\n    adapter.upsertOne(action.persistStore, state),\r\n  ),\r\n  on(PersistStoreActions.addPersistStores, (state, action) =>\r\n    adapter.addMany(action.persistStores, state),\r\n  ),\r\n  on(PersistStoreActions.upsertPersistStores, (state, action) =>\r\n    adapter.upsertMany(action.persistStores, state),\r\n  ),\r\n  on(PersistStoreActions.updatePersistStore, (state, action) =>\r\n    adapter.updateOne(action.persistStore, state),\r\n  ),\r\n  on(PersistStoreActions.updatePersistStores, (state, action) =>\r\n    adapter.updateMany(action.persistStores, state),\r\n  ),\r\n  on(PersistStoreActions.deletePersistStore, (state, action) =>\r\n    adapter.removeOne(action.id, state),\r\n  ),\r\n  on(PersistStoreActions.deletePersistStores, (state, action) =>\r\n    adapter.removeMany(action.ids, state),\r\n  ),\r\n  on(PersistStoreActions.loadPersistStores, (state, action) =>\r\n    adapter.setAll(action.persistStores, state),\r\n  ),\r\n  on(PersistStoreActions.clearPersistStores, (state) => adapter.removeAll(state)),\r\n);\r\n\r\nexport const { selectIds, selectEntities, selectAll, selectTotal } = adapter.getSelectors();\r\n\r\nexport const selectFeature = createFeatureSelector<State>(persistStoresFeatureKey);\r\nexport const selectAllPersistStore = createSelector(selectFeature, selectAll);\r\nexport const selectEntitiesRounds = createSelector(selectFeature, selectEntities);\r\nexport const selectByIdPersistStore = (id: GameType) =>\r\n  createSelector(selectEntitiesRounds, (entities) => entities[id]);\r\n","import { Action, createFeatureSelector, createReducer, createSelector, on } from '@ngrx/store';\r\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\r\nimport { IGamer } from '../../interfaces';\r\nimport * as PlayerActions from '../actions/player.actions';\r\n\r\nexport const playersFeatureKey = 'players';\r\n\r\nexport interface State extends EntityState<IGamer> {\r\n  // additional entities state properties\r\n}\r\n\r\nexport const adapter: EntityAdapter<IGamer> = createEntityAdapter<IGamer>({\r\n  selectId: (player: IGamer) => player._id,\r\n});\r\n\r\nexport const initialState: State = adapter.getInitialState({\r\n  // additional entity state properties\r\n});\r\n\r\nexport const reducer = createReducer(\r\n  initialState,\r\n  on(PlayerActions.addPlayer, (state, action) => adapter.addOne(action.player, state)),\r\n  on(PlayerActions.upsertPlayer, (state, action) => adapter.upsertOne(action.player, state)),\r\n  on(PlayerActions.addPlayers, (state, action) => adapter.addMany(action.players, state)),\r\n  on(PlayerActions.upsertPlayers, (state, action) => adapter.upsertMany(action.players, state)),\r\n  on(PlayerActions.updatePlayer, (state, action) => adapter.updateOne(action.player, state)),\r\n  on(PlayerActions.updatePlayers, (state, action) => adapter.updateMany(action.players, state)),\r\n  on(PlayerActions.deletePlayer, (state, action) => adapter.removeOne(action.id, state)),\r\n  on(PlayerActions.deletePlayers, (state, action) => adapter.removeMany(action.ids, state)),\r\n  on(PlayerActions.loadPlayers, (state, action) => adapter.setAll(action.players, state)),\r\n  on(PlayerActions.clearPlayers, (state) => adapter.removeAll(state)),\r\n);\r\n\r\nexport const { selectIds, selectEntities, selectAll, selectTotal } = adapter.getSelectors();\r\n\r\nexport const selectFeature = createFeatureSelector<State>(playersFeatureKey);\r\nexport const selectAllPlayers = createSelector(selectFeature, selectAll);\r\nexport const selectEntitiesPlayers = createSelector(selectFeature, selectEntities);\r\nexport const selectByIdPlayer = (id: string) =>\r\n  createSelector(selectEntitiesPlayers, (entities) => entities[id]);\r\n","import { Action, createFeatureSelector, createReducer, createSelector, on } from '@ngrx/store';\r\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\r\nimport { RoundMember } from '../../interfaces';\r\nimport * as RoundMemberActions from '../actions/round-member.actions';\r\n\r\nexport const roundMembersFeatureKey = 'roundMembers';\r\n\r\nexport type State = EntityState<RoundMember>;\r\n\r\nexport const adapter: EntityAdapter<RoundMember> = createEntityAdapter<RoundMember>({\r\n  selectId: (roundMember: RoundMember) => roundMember._id,\r\n});\r\n\r\nexport const initialState: State = adapter.getInitialState({\r\n  // additional entity state properties\r\n});\r\n\r\nexport const reducer = createReducer(\r\n  initialState,\r\n  on(RoundMemberActions.addRoundMember, (state, action) =>\r\n    adapter.addOne(action.roundMember, state),\r\n  ),\r\n  on(RoundMemberActions.upsertRoundMember, (state, action) =>\r\n    adapter.upsertOne(action.roundMember, state),\r\n  ),\r\n  on(RoundMemberActions.addRoundMembers, (state, action) =>\r\n    adapter.addMany(action.roundMembers, state),\r\n  ),\r\n  on(RoundMemberActions.upsertRoundMembers, (state, action) =>\r\n    adapter.upsertMany(action.roundMembers, state),\r\n  ),\r\n  on(RoundMemberActions.updateRoundMember, (state, action) =>\r\n    adapter.updateOne(action.roundMember, state),\r\n  ),\r\n  on(RoundMemberActions.updateRoundMembers, (state, action) =>\r\n    adapter.updateMany(action.roundMembers, state),\r\n  ),\r\n  on(RoundMemberActions.deleteRoundMember, (state, action) => adapter.removeOne(action.id, state)),\r\n  on(RoundMemberActions.deleteRoundMembers, (state, action) =>\r\n    adapter.removeMany(action.ids, state),\r\n  ),\r\n  on(RoundMemberActions.loadRoundMembers, (state, action) =>\r\n    adapter.setAll(action.roundMembers, state),\r\n  ),\r\n  on(RoundMemberActions.clearRoundMembers, (state) => adapter.removeAll(state)),\r\n);\r\n\r\nexport const { selectIds, selectEntities, selectAll, selectTotal } = adapter.getSelectors();\r\n\r\nexport const selectFeature = createFeatureSelector<State>(roundMembersFeatureKey);\r\nexport const selectAllRoundMembers = createSelector(selectFeature, selectAll);\r\nexport const selectEntitiesRoundMembers = createSelector(selectFeature, selectEntities);\r\nexport const selectByIdRoundMember = (id: string) =>\r\n  createSelector(selectEntitiesRoundMembers, (entities) => entities[id]);\r\n","import { Action, createFeatureSelector, createReducer, createSelector, on } from '@ngrx/store';\r\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\r\nimport { Round } from '../../interfaces';\r\nimport * as RoundActions from '../actions/round.actions';\r\n\r\nexport const roundsFeatureKey = 'rounds';\r\n\r\nexport interface State extends EntityState<Round> {\r\n  // additional entities state properties\r\n}\r\n\r\nexport const adapter: EntityAdapter<Round> = createEntityAdapter<Round>({\r\n  selectId: (round: Round) => round._id,\r\n});\r\n\r\nexport const initialState: State = adapter.getInitialState({\r\n  // additional entity state properties\r\n});\r\n\r\nexport const reducer = createReducer(\r\n  initialState,\r\n  on(RoundActions.addRound, (state, action) => adapter.addOne(action.round, state)),\r\n  on(RoundActions.upsertRound, (state, action) => adapter.upsertOne(action.round, state)),\r\n  on(RoundActions.addRounds, (state, action) => adapter.addMany(action.rounds, state)),\r\n  on(RoundActions.upsertRounds, (state, action) => adapter.upsertMany(action.rounds, state)),\r\n  on(RoundActions.updateRound, (state, action) => adapter.updateOne(action.round, state)),\r\n  on(RoundActions.updateRounds, (state, action) => adapter.updateMany(action.rounds, state)),\r\n  on(RoundActions.deleteRound, (state, action) => adapter.removeOne(action.id, state)),\r\n  on(RoundActions.deleteRounds, (state, action) => adapter.removeMany(action.ids, state)),\r\n  on(RoundActions.loadRounds, (state, action) => adapter.setAll(action.rounds, state)),\r\n  on(RoundActions.clearRounds, (state) => adapter.removeAll(state)),\r\n);\r\n\r\nexport const { selectIds, selectEntities, selectAll, selectTotal } = adapter.getSelectors();\r\n\r\nexport const selectFeature = createFeatureSelector<State>(roundsFeatureKey);\r\nexport const selectAllRounds = createSelector(selectFeature, selectAll);\r\nexport const selectEntitiesRounds = createSelector(selectFeature, selectEntities);\r\nexport const selectByIdRound = (id: string) =>\r\n  createSelector(selectEntitiesRounds, (entities) => entities[id]);\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, ofType } from '@ngrx/effects';\r\nimport { of } from 'rxjs';\r\nimport { filter, switchMap, tap } from 'rxjs/operators';\r\nimport { EntityAction, ofEntityOp, OP_ERROR, OP_SUCCESS, EntityCacheAction } from '@ngrx/data';\r\nimport * as fromAnalyticsActions from './actions/analytics.actions';\r\nimport * as fromAuthActions from './actions/auth.actions';\r\nimport { Action, Store } from '@ngrx/store';\r\nimport { ToastService } from '../services/toast.service';\r\nimport { SharedService } from '../services/shared.service';\r\n\r\n/** Report ngrx-data success/error actions as toast messages **/\r\n@Injectable({ providedIn: 'root' })\r\nexport class StoreErrorService {\r\n  constructor(\r\n    private store: Store,\r\n    private actions$: Actions,\r\n    public toastService: ToastService,\r\n    private sharedService: SharedService,\r\n  ) {\r\n    actions$\r\n      .pipe(\r\n        ofEntityOp(),\r\n        filter((ea: EntityAction) => ea.payload.entityOp.endsWith(OP_ERROR)),\r\n      )\r\n      .subscribe((action) => {\r\n        console.log('ofEntityOp error', action);\r\n        this.store.dispatch(fromAuthActions.error({ error: action.payload.data.error.message }));\r\n      });\r\n\r\n    actions$.pipe(ofType(EntityCacheAction.SAVE_ENTITIES_ERROR)).subscribe((action) => {\r\n      console.log('entity save toast error', action);\r\n      this.toastService.presentErrorToast(`Error SAVE_ENTITIES_ERROR`);\r\n    });\r\n\r\n    actions$\r\n      .pipe(\r\n        ofType(fromAnalyticsActions.error, fromAuthActions.error),\r\n        filter((action) => action.error !== null),\r\n        switchMap((action) => {\r\n          switch (action.type) {\r\n            case fromAnalyticsActions.AnalyticsActionTypes.errorType:\r\n              this.toastService.presentErrorToast(`${action.error}`, fromAnalyticsActions.error);\r\n              console.log('entity toast error AnalyticsActionTypes', action);\r\n              break;\r\n            case fromAuthActions.AuthActionTypes.errorType:\r\n              this.toastService.presentErrorToast(`${action.error}`, fromAuthActions.error);\r\n              console.log('entity toast error AuthActionTypes', action);\r\n              break;\r\n            default:\r\n          }\r\n          return this.sharedService.logErrorToDB(action.error);\r\n        }),\r\n      )\r\n      .subscribe(\r\n        (result) => {\r\n          console.log('Error successefuly logged to db');\r\n        },\r\n        (error) => {\r\n          console.log('Fail to log error', error);\r\n        },\r\n      );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { DefaultDataServiceConfig, EntityDataModule, EntityDataService } from '@ngrx/data';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\nimport {\r\n  ActionReducer,\r\n  MetaReducer,\r\n  META_REDUCERS,\r\n  StoreModule,\r\n  USER_PROVIDED_META_REDUCERS,\r\n} from '@ngrx/store';\r\nimport { EffectsModule } from '@ngrx/effects';\r\n\r\nimport { reducers, metaReducers } from './reducers';\r\n\r\nimport { GameDataService } from './game-data.service';\r\nimport { GamerDataService } from './gamer-data.service';\r\nimport { entityMetadata } from './entity-metadata';\r\nimport { environment } from 'src/environments/environment';\r\nimport { AuthEffects } from './effects/auth.effects';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { InjectionToken } from '@angular/core';\r\nimport { AuthService } from '../modules/auth/auth.service';\r\nimport { SharedService } from '../services/shared.service';\r\nimport { HydrationEffects } from './effects/hydration.effects';\r\nimport { AnalyticsEffects } from './effects/analytics.effects';\r\n// import { StoreAppService } from './store-app.service';\r\nimport { AppEffects } from './effects/app.effects';\r\nimport { RoundEffects } from './effects/round.effects';\r\nimport { RoundMemberEffects } from './effects/round-member.effects';\r\nimport { routerReducer, StoreRouterConnectingModule } from '@ngrx/router-store';\r\nimport { PersistStoreEffects } from './effects/persist-store.effects';\r\nimport { PlayerEffects } from './effects/player.effects';\r\nimport { StoreErrorService } from './store-error.service';\r\n\r\nexport const defaultDataServiceConfig: DefaultDataServiceConfig = {\r\n  root: environment.host + 'api/store/',\r\n  timeout: 3000,\r\n  entityHttpResourceUrls: {\r\n    game: {\r\n      entityResourceUrl: environment.host + 'api/store/game/',\r\n      collectionResourceUrl: environment.host + 'api/store/games/',\r\n    },\r\n    gamer: {\r\n      entityResourceUrl: environment.host + 'api/store/gamer/',\r\n      collectionResourceUrl: environment.host + 'api/store/gamers/',\r\n    },\r\n  },\r\n};\r\n\r\n@NgModule({\r\n  imports: [\r\n    HttpClientModule,\r\n    StoreModule.forRoot(reducers, {\r\n      metaReducers,\r\n      runtimeChecks: {\r\n        strictStateImmutability: true,\r\n        strictActionImmutability: true,\r\n      },\r\n    }),\r\n\r\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production }),\r\n    EffectsModule.forRoot([\r\n      AuthEffects,\r\n      HydrationEffects,\r\n      AnalyticsEffects,\r\n      AppEffects,\r\n      RoundEffects,\r\n      RoundMemberEffects,\r\n      PersistStoreEffects,\r\n      PlayerEffects,\r\n    ]),\r\n    StoreRouterConnectingModule.forRoot({ stateKey: 'router' }),\r\n\r\n    // Connects RouterModule with StoreModule\r\n    EntityDataModule.forRoot({ entityMetadata }),\r\n  ],\r\n  providers: [\r\n    GameDataService,\r\n    GamerDataService,\r\n    { provide: DefaultDataServiceConfig, useValue: defaultDataServiceConfig },\r\n  ],\r\n})\r\nexport class AppStoreModule {\r\n  constructor(\r\n    entityDataService: EntityDataService,\r\n    gameDataService: GameDataService,\r\n    gamerDataService: GamerDataService,\r\n    storeErrorService: StoreErrorService,\r\n    // storeAppService: StoreAppService,\r\n  ) {\r\n    entityDataService.registerService('Game', gameDataService);\r\n    entityDataService.registerService('Gamer', gamerDataService);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  appVersion: require('../../package.json').version + '-dev',\r\n  host: '',\r\n  // host: 'https://10.0.2.2:8084/',\r\n  production: false,\r\n  games: {\r\n    rummy: {\r\n      name: 'Rummy',\r\n      showToolbarMenu: false,\r\n      maxPlayersQty: 4,\r\n      minPlayersQty: 2,\r\n      playersColors: ['black'],\r\n      namedScores: [\r\n        { name: '1', value: -1, picture: './assets/games/uno/1.svg' },\r\n        { name: '2', value: -2, picture: './assets/games/uno/2.svg' },\r\n        { name: '3', value: -3, picture: './assets/games/uno/3.svg' },\r\n        { name: '4', value: -4, picture: './assets/games/uno/4.svg' },\r\n        { name: '5', value: -5, picture: './assets/games/uno/5.svg' },\r\n        { name: '6', value: -6, picture: './assets/games/uno/6.svg' },\r\n        { name: '7', value: -7, picture: './assets/games/uno/7.svg' },\r\n        { name: '8', value: -8, picture: './assets/games/uno/8.svg' },\r\n        { name: '9', value: -9, picture: './assets/games/uno/9.svg' },\r\n        { name: '10', value: -10, picture: './assets/games/uno/9.svg' },\r\n        { name: '11', value: -11, picture: './assets/games/uno/9.svg' },\r\n        { name: '12', value: -12, picture: './assets/games/uno/9.svg' },\r\n        { name: '13', value: -13, picture: './assets/games/uno/9.svg' },\r\n        { name: 'Joker', value: -30, picture: './assets/games/uno/reverse.svg' },\r\n      ],\r\n      rounds: [\r\n        {\r\n          _id: 'start',\r\n          icon: 'log-out-outline',\r\n          namePostfix: '',\r\n          initialScoresLine: [],\r\n          initialNamedScoresLine: [],\r\n        },\r\n        {\r\n          _id: 'round',\r\n          icon: 'copy-outline',\r\n          namePostfix: '',\r\n          initialScoresLine: [],\r\n          initialNamedScoresLine: [],\r\n        },\r\n      ],\r\n\r\n      stats: [\r\n        {\r\n          _id: 'getRating',\r\n          icon: 'trophy-outline',\r\n          name: 'rating',\r\n        },\r\n      ],\r\n    },\r\n    uno: {\r\n      name: 'Uno',\r\n      showToolbarMenu: false,\r\n      maxPlayersQty: 10,\r\n      minPlayersQty: 2,\r\n      playersColors: ['black'],\r\n      namedScores: [\r\n        { name: '0', value: 0, picture: './assets/games/uno/0.svg' },\r\n        { name: '1', value: 1, picture: './assets/games/uno/1.svg' },\r\n        { name: '2', value: 2, picture: './assets/games/uno/2.svg' },\r\n        { name: '3', value: 3, picture: './assets/games/uno/3.svg' },\r\n        { name: '4', value: 4, picture: './assets/games/uno/4.svg' },\r\n        { name: '5', value: 5, picture: './assets/games/uno/5.svg' },\r\n        { name: '6', value: 6, picture: './assets/games/uno/6.svg' },\r\n        { name: '7', value: 7, picture: './assets/games/uno/7.svg' },\r\n        { name: '8', value: 8, picture: './assets/games/uno/8.svg' },\r\n        { name: '9', value: 9, picture: './assets/games/uno/9.svg' },\r\n        { name: 'reverse', value: 20, picture: './assets/games/uno/reverse.svg' },\r\n        { name: 'skip', value: 20, picture: './assets/games/uno/skip.svg' },\r\n        { name: 'plus2', value: 20, picture: './assets/games/uno/plus2.svg' },\r\n        { name: 'plus4', value: 50, picture: './assets/games/uno/plus4.svg' },\r\n        { name: 'color', value: 50, picture: './assets/games/uno/color.svg' },\r\n      ],\r\n      rounds: [\r\n        {\r\n          _id: 'start',\r\n          icon: 'log-out-outline',\r\n          namePostfix: '',\r\n          initialScoresLine: [],\r\n          initialNamedScoresLine: [],\r\n        },\r\n        {\r\n          _id: 'round',\r\n          icon: 'copy-outline',\r\n          namePostfix: '1',\r\n          initialScoresLine: [],\r\n          initialNamedScoresLine: [],\r\n        },\r\n      ],\r\n    },\r\n    thousand: {\r\n      name: 'Thousand - 1000',\r\n      showToolbarMenu: false,\r\n      maxPlayersQty: 4,\r\n      minPlayersQty: 2,\r\n      playersColors: ['black'],\r\n      rounds: [\r\n        {\r\n          _id: 'start',\r\n          namePostfix: '',\r\n          icon: 'log-out-outline',\r\n          initialScoresLine: [],\r\n          initialNamedScoresLine: [],\r\n        },\r\n        {\r\n          _id: 'round',\r\n          namePostfix: '',\r\n          icon: 'trail-sign-outline',\r\n          initialScoresLine: [],\r\n          initialNamedScoresLine: [],\r\n        },\r\n      ],\r\n    },\r\n    train: {\r\n      name: 'Ticket to ride',\r\n      showToolbarMenu: true,\r\n      maxPlayersQty: 5,\r\n      minPlayersQty: 2,\r\n      playersColors: ['red', 'green', 'blue', 'black', 'yellow'],\r\n      routesScores: [\r\n        { name: '5', value: 5 },\r\n        { name: '6', value: 6 },\r\n        { name: '7', value: 7 },\r\n        { name: '8', value: 8 },\r\n        { name: '9', value: 9 },\r\n        { name: '10', value: 10 },\r\n        { name: '11', value: 11 },\r\n        { name: '12', value: 12 },\r\n        { name: '13', value: 13 },\r\n        { name: '20', value: 20 },\r\n        { name: '21', value: 21 },\r\n      ],\r\n      longestRouteScore: 10,\r\n      carsScores: [\r\n        { name: 1, value: 1 },\r\n        { name: 2, value: 2 },\r\n        { name: 3, value: 4 },\r\n        { name: 4, value: 7 },\r\n        { name: 6, value: 15 },\r\n        { name: 8, value: 21 },\r\n      ],\r\n      stats: [\r\n        {\r\n          _id: 'getRatingByWins',\r\n          icon: 'trophy-outline',\r\n          name: 'byWins',\r\n        },\r\n        {\r\n          _id: 'getRatingByWinsToGames',\r\n          icon: 'podium-outline',\r\n          name: 'byWinsToGames',\r\n        },\r\n      ],\r\n      rounds: [\r\n        {\r\n          _id: 'start',\r\n          icon: 'log-out-outline',\r\n          namePostfix: '',\r\n          initialScoresLine: [],\r\n          initialNamedScoresLine: [],\r\n        },\r\n        {\r\n          _id: 'routes',\r\n          icon: 'trail-sign-outline',\r\n          namePostfix: '',\r\n          initialScoresLine: [],\r\n          initialNamedScoresLine: [],\r\n        },\r\n        {\r\n          _id: 'length',\r\n          icon: 'code-working-outline',\r\n          namePostfix: '',\r\n          initialScoresLine: [],\r\n          initialNamedScoresLine: [],\r\n        },\r\n        {\r\n          _id: 'stations',\r\n          namePostfix: '',\r\n          icon: 'prism-outline',\r\n          initialScoresLine: [4, 4, 4],\r\n          initialNamedScoresLine: [],\r\n        },\r\n        {\r\n          _id: 'cars',\r\n          namePostfix: '',\r\n          icon: 'train-outline',\r\n          initialScoresLine: [],\r\n          initialNamedScoresLine: [],\r\n        },\r\n      ],\r\n    },\r\n  },\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch((err) => console.log(err));\r\n","var map = {\n\t\"./ion-accordion_2.entry.js\": [\n\t\t3477,\n\t\t\"node_modules_ionic_core_dist_esm_ion-accordion_2_entry_js\"\n\t],\n\t\"./ion-action-sheet.entry.js\": [\n\t\t7196,\n\t\t\"node_modules_ionic_core_dist_esm_ion-action-sheet_entry_js\"\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t8081,\n\t\t\"node_modules_ionic_core_dist_esm_ion-alert_entry_js\"\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t5017,\n\t\t\"node_modules_ionic_core_dist_esm_ion-app_8_entry_js\"\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t9721,\n\t\t\"node_modules_ionic_core_dist_esm_ion-avatar_3_entry_js\"\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t9216,\n\t\t\"node_modules_ionic_core_dist_esm_ion-back-button_entry_js\"\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t6612,\n\t\t\"node_modules_ionic_core_dist_esm_ion-backdrop_entry_js\"\n\t],\n\t\"./ion-breadcrumb_2.entry.js\": [\n\t\t2694,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-breadcrumb_2_entry_js\"\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t2938,\n\t\t\"node_modules_ionic_core_dist_esm_ion-button_2_entry_js\"\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t1379,\n\t\t\"node_modules_ionic_core_dist_esm_ion-card_5_entry_js\"\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t7552,\n\t\t\"node_modules_ionic_core_dist_esm_ion-checkbox_entry_js\"\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t7218,\n\t\t\"node_modules_ionic_core_dist_esm_ion-chip_entry_js\"\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t7479,\n\t\t\"node_modules_ionic_core_dist_esm_ion-col_3_entry_js\"\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t4134,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-datetime_3_entry_js\"\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t1439,\n\t\t\"node_modules_ionic_core_dist_esm_ion-fab_3_entry_js\"\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t6397,\n\t\t\"node_modules_ionic_core_dist_esm_ion-img_entry_js\"\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t3296,\n\t\t\"node_modules_ionic_core_dist_esm_ion-infinite-scroll_2_entry_js\"\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t2413,\n\t\t\"node_modules_ionic_core_dist_esm_ion-input_entry_js\"\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t9411,\n\t\t\"node_modules_ionic_core_dist_esm_ion-item-option_3_entry_js\"\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t9133,\n\t\t\"node_modules_ionic_core_dist_esm_ion-item_8_entry_js\"\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t9003,\n\t\t\"node_modules_ionic_core_dist_esm_ion-loading_entry_js\"\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t6065,\n\t\t\"node_modules_ionic_core_dist_esm_ion-menu_3_entry_js\"\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t6991,\n\t\t\"node_modules_ionic_core_dist_esm_ion-modal_entry_js\"\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t2947,\n\t\t\"node_modules_ionic_core_dist_esm_ion-nav_2_entry_js\"\n\t],\n\t\"./ion-picker-column-internal.entry.js\": [\n\t\t5919,\n\t\t\"node_modules_ionic_core_dist_esm_ion-picker-column-internal_entry_js\"\n\t],\n\t\"./ion-picker-internal.entry.js\": [\n\t\t3109,\n\t\t\"node_modules_ionic_core_dist_esm_ion-picker-internal_entry_js\"\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t9459,\n\t\t\"node_modules_ionic_core_dist_esm_ion-popover_entry_js\"\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t301,\n\t\t\"node_modules_ionic_core_dist_esm_ion-progress-bar_entry_js\"\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t3799,\n\t\t\"node_modules_ionic_core_dist_esm_ion-radio_2_entry_js\"\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t2140,\n\t\t\"node_modules_ionic_core_dist_esm_ion-range_entry_js\"\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t6197,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-refresher_2_entry_js\"\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t1975,\n\t\t\"node_modules_ionic_core_dist_esm_ion-reorder_2_entry_js\"\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t8387,\n\t\t\"node_modules_ionic_core_dist_esm_ion-ripple-effect_entry_js\"\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t8659,\n\t\t\"node_modules_ionic_core_dist_esm_ion-route_4_entry_js\"\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t6404,\n\t\t\"node_modules_ionic_core_dist_esm_ion-searchbar_entry_js\"\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t5253,\n\t\t\"node_modules_ionic_core_dist_esm_ion-segment_2_entry_js\"\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t2619,\n\t\t\"node_modules_ionic_core_dist_esm_ion-select_3_entry_js\"\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t2871,\n\t\t\"node_modules_ionic_core_dist_esm_ion-slide_2_entry_js\"\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t7668,\n\t\t\"node_modules_ionic_core_dist_esm_ion-spinner_entry_js\"\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t5342,\n\t\t\"node_modules_ionic_core_dist_esm_ion-split-pane_entry_js\"\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t174,\n\t\t\"node_modules_ionic_core_dist_esm_ion-tab-bar_2_entry_js\"\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t6185,\n\t\t\"node_modules_ionic_core_dist_esm_ion-tab_2_entry_js\"\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t7337,\n\t\t\"node_modules_ionic_core_dist_esm_ion-text_entry_js\"\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t4833,\n\t\t\"node_modules_ionic_core_dist_esm_ion-textarea_entry_js\"\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t9468,\n\t\t\"node_modules_ionic_core_dist_esm_ion-toast_entry_js\"\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t5705,\n\t\t\"node_modules_ionic_core_dist_esm_ion-toggle_entry_js\"\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t7463,\n\t\t\"node_modules_ionic_core_dist_esm_ion-virtual-scroll_entry_js\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 863;\nmodule.exports = webpackAsyncContext;","export default \"<ion-app>\\r\\n  <ion-router-outlet></ion-router-outlet>\\r\\n</ion-app>\\r\\n\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title class=\\\"ion-text-center\\\">{{'modules.games.results' | translate}}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content class=\\\"ion-padding\\\">\\n  <ion-grid class=\\\"ion-no-margin ion-no-padding\\\">\\n    <ion-row>\\n      <ion-col size-lg=\\\"6\\\" size-md=\\\"8\\\" size-sm=\\\"10\\\" offset-lg=\\\"3\\\" offset-md=\\\"2\\\" offset-sm=\\\"1\\\">\\n        <ion-card>\\n          <ion-card-content>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-buttons slot=\\\"end\\\">\\n                <ion-button (click)=\\\"confirm()\\\">Ok</ion-button>\\n              </ion-buttons>\\n            </ion-item>\\n            <ion-list>\\n              <ion-item *ngFor=\\\"let result of resultWithNames; let idx = index\\\">\\n                <div\\n                  slot=\\\"start\\\"\\n                  [ngStyle]=\\\"{\\n                    'border-right': '6px solid ' + result.color,\\n                    'padding-right': '10px'\\n                  }\\\"\\n                >\\n                  {{ idx + 1 }}\\n                </div>\\n                <ion-label>\\n                  {{ result.name }}\\n                </ion-label>\\n                <ion-text slot=\\\"end\\\" color=\\\"primary\\\">\\n                  {{ result.score }}\\n                </ion-text>\\n              </ion-item>\\n            </ion-list>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\";"],"names":[],"sourceRoot":"webpack:///"}