{"version":3,"file":"src_app_modules_analytics-tab_stat_stat_module_ts.js","mappings":"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","sources":["./src/app/modules/analytics-tab/stat/rummy/rummy.page.ts","./src/app/modules/analytics-tab/stat/stat-interfaces.ts","./src/app/modules/analytics-tab/stat/stat-routing.module.ts","./src/app/modules/analytics-tab/stat/stat-wrapper/stat-wrapper.component.ts","./src/app/modules/analytics-tab/stat/stat.component.ts","./src/app/modules/analytics-tab/stat/stat.directive.ts","./src/app/modules/analytics-tab/stat/stat.module.ts","./src/app/modules/analytics-tab/stat/thousand/thousand.component.ts","./src/app/modules/analytics-tab/stat/train/train.page.ts","./src/app/modules/analytics-tab/stat/rummy/rummy.page.html","./src/app/modules/analytics-tab/stat/stat-wrapper/stat-wrapper.component.html","./src/app/modules/analytics-tab/stat/stat.component.html","./src/app/modules/analytics-tab/stat/thousand/thousand.component.html","./src/app/modules/analytics-tab/stat/train/train.page.html"],"sourcesContent":["import { Component, Injector, OnInit } from '@angular/core';\r\nimport { STAT_COMPONENT } from '../stat-interfaces';\r\nimport { StatBaseDirective } from '../stat.directive';\r\n\r\n@Component({\r\n  selector: 'app-rummy',\r\n  templateUrl: './rummy.page.html',\r\n  styleUrls: ['./rummy.page.scss'],\r\n  providers: [\r\n    {\r\n      provide: STAT_COMPONENT,\r\n      useExisting: RummyPage,\r\n    },\r\n  ],\r\n})\r\nexport class RummyPage extends StatBaseDirective implements OnInit {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {}\r\n}\r\n","import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { GameType, IGame, IGamer } from 'src/app/interfaces';\n\nexport const STAT_COMPONENT = new InjectionToken<StatBase>('statComponent');\n\nexport interface Stat {\n  _id: string;\n  icon: string;\n  name: string;\n}\n\nexport interface StatBase {\n  analytics$: Observable<IGamer[]>;\n  gameType: GameType;\n  stat: Stat;\n  math: Math;\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { StatComponent } from './stat.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: StatComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class StatRoutingModule {}\r\n","import { Component, ContentChild, Input, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { GameType } from 'src/app/interfaces';\nimport { selectLoading } from 'src/app/store/reducers/analytics.reducer';\nimport { Stat, StatBase, STAT_COMPONENT } from '../stat-interfaces';\n\n@Component({\n  selector: 'app-stat-wrapper',\n  templateUrl: './stat-wrapper.component.html',\n  styleUrls: ['./stat-wrapper.component.scss'],\n})\nexport class StatWrapperComponent implements OnInit {\n  @Input() gameType: GameType;\n  @Input() stat: Stat;\n  @ContentChild(STAT_COMPONENT, { static: true })\n  statComponent: StatBase;\n  loading$: Observable<boolean>;\n  array = Array;\n\n  constructor(protected store: Store) {}\n\n  ngOnInit() {\n    this.loading$ = this.store.select(selectLoading);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { GameType, IGamer } from 'src/app/interfaces';\nimport * as fromAnalyticsActions from 'src/app/store/actions/analytics.actions';\nimport { selectRating } from 'src/app/store/reducers/analytics.reducer';\nimport { environment } from 'src/environments/environment';\nimport { Stat } from './stat-interfaces';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-stat',\n  templateUrl: './stat.component.html',\n  styleUrls: ['./stat.component.scss'],\n})\nexport class StatComponent implements OnInit {\n  stats: Stat[];\n  stat: Stat;\n  gameType: GameType;\n  analytics$: Observable<IGamer[]>;\n\n  constructor(protected store: Store, protected route: ActivatedRoute) {}\n\n  ngOnInit() {\n    this.route.params.subscribe((params) => {\n      this.gameType = params.id;\n      this.stats = environment.games[this.gameType].stats;\n      if (!this.stat) {\n        this.stat = this.stats[0];\n      }\n      console.log('gameType', this.gameType);\n      this.store.dispatch(fromAnalyticsActions[this.stat._id]({ gameType: this.gameType }));\n    });\n    this.analytics$ = this.store.select(selectRating);\n  }\n\n  onMenuClickHandler(e: any) {\n    this.stat = e.target.value;\n    this.store.dispatch(fromAnalyticsActions[this.stat._id]({ gameType: this.gameType }));\n  }\n}\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IGamer, IGame, GameType } from 'src/app/interfaces';\nimport { Stat, StatBase } from './stat-interfaces';\n\n@Directive({\n  selector: '[appStat]',\n})\nexport class StatBaseDirective implements StatBase, OnInit {\n  @Input() gameType: GameType;\n  @Input() analytics$: Observable<IGamer[]>;\n  @Input() stat: Stat;\n  math: Math = Math;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StatComponent } from './stat.component';\nimport { StatRoutingModule } from './stat-routing.module';\nimport { IonicModule } from '@ionic/angular';\nimport { RummyPage } from './rummy/rummy.page';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { TrainPage } from './train/train.page';\nimport { FormsModule } from '@angular/forms';\nimport { StatWrapperComponent } from './stat-wrapper/stat-wrapper.component';\nimport { ThousandComponent } from './thousand/thousand.component';\n\n@NgModule({\n  declarations: [StatComponent, StatWrapperComponent, RummyPage, TrainPage, ThousandComponent],\n  imports: [\n    CommonModule,\n    StatRoutingModule,\n    FormsModule,\n    IonicModule,\n    TranslateModule.forChild({\n      extend: true,\n    }),\n  ],\n  // exports: [StatWrapperComponent, RummyPage, TrainPage],\n})\nexport class StatModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { RummyPage } from '../rummy/rummy.page';\nimport { STAT_COMPONENT } from '../stat-interfaces';\nimport { StatBaseDirective } from '../stat.directive';\n\n@Component({\n  selector: 'app-thousand',\n  templateUrl: './thousand.component.html',\n  styleUrls: ['./thousand.component.scss'],\n  providers: [\n    {\n      provide: STAT_COMPONENT,\n      useExisting: ThousandComponent,\n    },\n  ],\n})\nexport class ThousandComponent extends StatBaseDirective implements OnInit {\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {}\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { STAT_COMPONENT } from '../stat-interfaces';\r\nimport { StatBaseDirective } from '../stat.directive';\r\n\r\n@Component({\r\n  selector: 'app-train',\r\n  templateUrl: './train.page.html',\r\n  styleUrls: ['./train.page.scss'],\r\n  providers: [\r\n    {\r\n      provide: STAT_COMPONENT,\r\n      useExisting: TrainPage,\r\n    },\r\n  ],\r\n})\r\nexport class TrainPage extends StatBaseDirective implements OnInit {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {}\r\n}\r\n","export default \"<ion-item *ngFor=\\\"let player of (analytics$ | async); let idx = index\\\">\\r\\n  <div\\r\\n    slot=\\\"start\\\"\\r\\n    [ngStyle]=\\\"{\\r\\n                  'border-right': '6px solid ' + player.color,\\r\\n                  'padding-right': '10px'\\r\\n                }\\\"\\r\\n  >\\r\\n    {{idx+1}}\\r\\n  </div>\\r\\n  <ion-label> {{player.name}} </ion-label>\\r\\n\\r\\n  <ion-text slot=\\\"end\\\" color=\\\"primary\\\">\\r\\n    <ion-text class=\\\"bold\\\" [color]=\\\"player.rating.scores < 0 ? 'danger' : 'success'\\\">\\r\\n      {{player.rating.scores}}</ion-text\\r\\n    >\\r\\n    / {{player.rating.totalGames}} / {{player.rating.wins}}\\r\\n  </ion-text>\\r\\n</ion-item>\";","export default \"\\n<ion-card>\\n  <ion-card-header>\\n    <ion-card-title class=\\\"ion-text-center\\\">{{ 'games.' + gameType + '.title' | translate }}</ion-card-title>\\n    <ion-card-subtitle class=\\\"ion-text-center\\\"\\n      >{{ ('modules.analytics.' + stat?.name) | translate }}\\n    </ion-card-subtitle>\\n  </ion-card-header>\\n  <ion-card-content>\\n    <ion-list *ngIf=\\\"(loading$ | async) === true\\\">\\n      <ion-item lines=\\\"none\\\" *ngFor=\\\"let x of array(5).fill('')\\\">\\n        <ion-skeleton-text slot=\\\"start\\\" animated style=\\\"width: 60%\\\"> </ion-skeleton-text>\\n        <ion-skeleton-text slot=\\\"end\\\" animated> </ion-skeleton-text>\\n      </ion-item>\\n    </ion-list>\\n    <ion-list *ngIf=\\\"(loading$ | async) === false\\\">\\n       <ng-content></ng-content>\\n     </ion-list>\\n  </ion-card-content>\\n</ion-card>\\n\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-menu-button menu=\\\"analytics-menu\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-segment *ngIf=\\\"stats?.length\\\" [value]=\\\"stats[0]\\\" (ionChange)=\\\"onMenuClickHandler($event)\\\">\\n      <ion-segment-button *ngFor=\\\"let stat of stats; let idx = index\\\" [value]=\\\"stat\\\">\\n        <ion-icon [name]=\\\"stat.icon\\\"></ion-icon>\\n      </ion-segment-button>\\n    </ion-segment>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <ion-grid class=\\\"ion-no-margin ion-no-padding\\\">\\n    <ion-row>\\n      <ion-col size-lg=\\\"6\\\" size-md=\\\"8\\\" size-sm=\\\"10\\\" offset-lg=\\\"3\\\" offset-md=\\\"2\\\" offset-sm=\\\"1\\\">\\n        <app-stat-wrapper *ngIf=\\\"gameType === 'train'\\\" [gameType]=\\\"gameType\\\" [stat]=\\\"stat\\\">\\n          <app-train [gameType]=\\\"gameType\\\" [analytics$]=\\\"analytics$\\\" [stat]=\\\"stat\\\"></app-train>\\n        </app-stat-wrapper>\\n        <app-stat-wrapper *ngIf=\\\"gameType === 'rummy'\\\" [gameType]=\\\"gameType\\\" [stat]=\\\"stat\\\">\\n          <app-rummy [gameType]=\\\"gameType\\\" [analytics$]=\\\"analytics$\\\" [stat]=\\\"stat\\\"></app-rummy>\\n        </app-stat-wrapper>\\n        <app-stat-wrapper *ngIf=\\\"gameType === 'thousand'\\\" [gameType]=\\\"gameType\\\" [stat]=\\\"stat\\\">\\n          <app-thousand [gameType]=\\\"gameType\\\" [analytics$]=\\\"analytics$\\\" [stat]=\\\"stat\\\"></app-thousand>\\n        </app-stat-wrapper>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\";","export default \"<ion-item *ngFor=\\\"let player of (analytics$ | async); let idx = index\\\">\\n  <div\\n    slot=\\\"start\\\"\\n    [ngStyle]=\\\"{\\n                  'border-right': '6px solid ' + player.color,\\n                  'padding-right': '10px'\\n                }\\\"\\n  >\\n    {{idx+1}}\\n  </div>\\n  <ion-label> {{player.name}} </ion-label>\\n  <ion-text *ngIf=\\\"stat?._id === 'getRatingByWins'\\\" slot=\\\"end\\\" color=\\\"primary\\\">\\n    {{player.rating.wins}}\\n  </ion-text>\\n  <ion-text *ngIf=\\\"stat?._id === 'getRatingByWinsToGames'\\\" slot=\\\"end\\\" color=\\\"primary\\\">\\n    {{player.rating.wins}} / {{player.rating.gamesCount}}\\n    <ion-text class=\\\"bold\\\"\\n      >( {{player.rating.wins ? math.floor(player.rating.winsToGames * 100) : 0}}% )\\n    </ion-text>\\n  </ion-text>\\n</ion-item>\";","export default \"<ion-item *ngFor=\\\"let player of (analytics$ | async); let idx = index\\\">\\r\\n  <div\\r\\n    slot=\\\"start\\\"\\r\\n    [ngStyle]=\\\"{\\r\\n                  'border-right': '6px solid ' + player.color,\\r\\n                  'padding-right': '10px'\\r\\n                }\\\"\\r\\n  >\\r\\n    {{idx+1}}\\r\\n  </div>\\r\\n  <ion-label> {{player.name}} </ion-label>\\r\\n  <ion-text *ngIf=\\\"stat?._id === 'getRatingByWins'\\\" slot=\\\"end\\\" color=\\\"primary\\\">\\r\\n    {{player.rating.wins}}\\r\\n  </ion-text>\\r\\n  <ion-text *ngIf=\\\"stat?._id === 'getRatingByWinsToGames'\\\" slot=\\\"end\\\" color=\\\"primary\\\">\\r\\n    {{player.rating.wins}} / {{player.rating.gamesCount}}\\r\\n    <ion-text class=\\\"bold\\\"\\r\\n      >( {{player.rating.wins ? math.floor(player.rating.winsToGames * 100) : 0}}% )\\r\\n    </ion-text>\\r\\n  </ion-text>\\r\\n</ion-item>\\r\\n\";"],"names":[],"sourceRoot":"webpack:///"}