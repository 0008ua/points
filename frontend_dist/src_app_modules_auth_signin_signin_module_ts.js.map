{"version":3,"file":"src_app_modules_auth_signin_signin_module_ts.js","mappings":"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","sources":["./src/app/modules/auth/signin/signin-routing.module.ts","./src/app/modules/auth/signin/signin.module.ts","./src/app/modules/auth/signin/signin.page.ts","./src/app/modules/auth/signin/signin.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SigninPage } from './signin.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SigninPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class SigninPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { SigninPageRoutingModule } from './signin-routing.module';\r\n\r\nimport { SigninPage } from './signin.page';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { PipesModule } from 'src/app/pipes/pipes.module';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    SigninPageRoutingModule,\r\n    ReactiveFormsModule,\r\n    PipesModule,\r\n    TranslateModule.forChild({\r\n      extend: true,\r\n    }),\r\n  ],\r\n  declarations: [SigninPage]\r\n})\r\nexport class SigninPageModule {}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, FormGroupDirective, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { IUser } from 'src/app/interfaces';\r\nimport { signin } from 'src/app/store/actions/auth.actions';\r\n// import { Login } from 'src/app/store/actions/user.actions';\r\nimport { State } from 'src/app/store/reducers';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n  selector: 'app-signin',\r\n  templateUrl: './signin.page.html',\r\n  styleUrls: ['./signin.page.scss'],\r\n})\r\nexport class SigninPage implements OnInit {\r\n  @ViewChild('signinFormDirective', { static: false }) signinFormDirective: FormGroupDirective;\r\n  lang: string;\r\n  signinForm: FormGroup;\r\n  inputType: 'password' | 'text' = 'password';\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private store: Store,\r\n    public translate: TranslateService,\r\n\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.lang = this.translate.currentLang;\r\n\r\n    this.signinForm = new FormGroup({\r\n      name: new FormControl(\r\n        '',\r\n        {\r\n          updateOn: 'change',\r\n          validators: [\r\n            // Validators.pattern('^[a-zA-Z0-9_-]+$'),\r\n            Validators.minLength(2),\r\n            // Validators.maxLength(60),\r\n            Validators.required,\r\n          ],\r\n        }),\r\n      password: new FormControl(\r\n        '',\r\n        {\r\n          updateOn: 'change',\r\n          validators: [\r\n            Validators.required,\r\n          ],\r\n        }),\r\n    });\r\n  }\r\n\r\n  switchInputType() {\r\n    if (this.inputType === 'password') {\r\n      this.inputType = 'text';\r\n    } else {\r\n      this.inputType = 'password';\r\n    }\r\n  }\r\n\r\n  onSignin() {\r\n    const user: IUser = {\r\n      name: this.signinForm.get('name').value,\r\n      password: this.signinForm.get('password').value,\r\n    };\r\n\r\n    this.store.dispatch(signin({ user }));\r\n    this.resetForm();\r\n  }\r\n\r\n  resetForm() {\r\n    if (this.signinFormDirective) {\r\n      this.signinFormDirective.resetForm();\r\n    }\r\n  }\r\n\r\n  switchLanguage() {\r\n    if (this.lang === 'en') {\r\n      this.lang = 'uk';\r\n    } else {\r\n      this.lang = 'en';\r\n    }\r\n    this.translate.use(this.lang);\r\n  }\r\n}\r\n","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>Scores</ion-title>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-item (click)=\\\"switchLanguage()\\\" button lines=\\\"none\\\">\\r\\n        <ion-icon name=\\\"earth-outline\\\" slot=\\\"start\\\"></ion-icon>\\r\\n        <ion-label>{{'language' | translate}}</ion-label>\\r\\n      </ion-item>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n\\r\\n<ion-content>\\r\\n  <form [formGroup]=\\\"signinForm\\\" #signinFormDirective=\\\"ngForm\\\">\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n\\r\\n        <ion-col size-lg=\\\"6\\\" size-md=\\\"8\\\" size-sm=\\\"10\\\" offset-lg=\\\"3\\\" offset-md=\\\"2\\\" offset-sm=\\\"1\\\">\\r\\n\\r\\n          <ion-card>\\r\\n            <ion-card-header>\\r\\n              <!-- <div>\\r\\n                <img class=\\\"logo_signin\\\" src=\\\"/assets/banner.svg\\\">\\r\\n              </div> -->\\r\\n              <ion-card-title class=\\\"ion-text-center\\\">{{'modules.user.signin' | translate}}</ion-card-title>\\r\\n              <ion-card-subtitle class=\\\"ion-text-center\\\">\\r\\n                <a button color=\\\"primary\\\" routerLink=\\\"/auth/signup\\\">{{'modules.user.orSignup' | translate}}</a>\\r\\n              </ion-card-subtitle>\\r\\n            </ion-card-header>\\r\\n\\r\\n            <ion-card-content>\\r\\n              <ion-list>\\r\\n                <ion-item>\\r\\n                  <ion-icon class=\\\"ion-align-self-center\\\" name=\\\"person-outline\\\" slot=\\\"start\\\"></ion-icon>\\r\\n                  <ion-label position=\\\"floating\\\">{{'modules.user.name' | translate}}</ion-label>\\r\\n                  <ion-input type=\\\"text\\\" autocomplete autocorrect formControlName=\\\"name\\\"></ion-input>\\r\\n                </ion-item>\\r\\n                <ng-container *ngIf=\\\"signinForm.get('name').dirty && signinForm.get('name').errors\\\">\\r\\n                  <ion-text *ngFor=\\\"let error of signinForm.get('name').errors | errorExtractor\\\" class=\\\"input-error\\\"\\r\\n                    color=\\\"danger\\\">\\r\\n                    {{'errors.' + error | translate}}\\r\\n                  </ion-text>\\r\\n                </ng-container>\\r\\n                <ion-item lines=\\\"none\\\">\\r\\n                  <ion-icon class=\\\"ion-align-self-center\\\" name=\\\"lock-closed-outline\\\" slot=\\\"start\\\"></ion-icon>\\r\\n                  <ion-label position=\\\"floating\\\">{{'modules.user.password' | translate}}</ion-label>\\r\\n                  <ion-input [type]=\\\"inputType\\\" autocomplete autocorrect formControlName=\\\"password\\\"></ion-input>\\r\\n                  <ion-icon class=\\\"ion-align-self-center\\\"\\r\\n                    [name]=\\\"inputType === 'password' ? 'eye-outline' : 'eye-off-outline'\\\" slot=\\\"end\\\"\\r\\n                    (click)=switchInputType()></ion-icon>\\r\\n                </ion-item>\\r\\n                <ng-container *ngIf=\\\"signinForm.get('password').dirty && signinForm.get('password').errors\\\">\\r\\n                  <ion-text *ngFor=\\\"let error of signinForm.get('password').errors | errorExtractor\\\" class=\\\"input-error\\\"\\r\\n                    color=\\\"danger\\\">\\r\\n                    {{'errors.' + error | translate}}\\r\\n                  </ion-text>\\r\\n                </ng-container>\\r\\n              </ion-list>\\r\\n            </ion-card-content>\\r\\n\\r\\n          </ion-card>\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-button expand=\\\"block\\\" [disabled]=\\\"signinForm.status === 'INVALID'\\\" (click)=\\\"onSignin()\\\">\\r\\n                {{'modules.user.signin' | translate}}\\r\\n              </ion-button>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </form>\\r\\n</ion-content>\";"],"names":[],"sourceRoot":"webpack:///"}