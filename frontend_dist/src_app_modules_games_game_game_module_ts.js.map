{"version":3,"file":"src_app_modules_games_game_game_module_ts.js","mappings":"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","sources":["./src/app/modules/auth/deactivate-route.guard.ts","./src/app/modules/games/game/game-routing.module.ts","./src/app/modules/games/game/game.module.ts","./src/app/modules/games/game/game.page.ts","./src/app/modules/games/gamers/choose-players/choose-players.component.ts","./src/app/modules/games/gamers/create-gamer/create-gamer.component.ts","./src/app/modules/games/gamers/gamers.module.ts","./src/app/modules/games/gamers/select-color/select-color.component.ts","./src/app/modules/games/games.service.ts","./src/app/modules/games/round/round-interfaces.ts","./src/app/modules/games/round/round-t-wrapper/round-t-wrapper.component.ts","./src/app/modules/games/round/round-wrapper/round-wrapper.component.ts","./src/app/modules/games/round/round.component.ts","./src/app/modules/games/round/round.directive.ts","./src/app/modules/games/round/round.module.ts","./src/app/modules/games/round/rummy/round-rummy/round-rummy.component.ts","./src/app/modules/games/round/thousand/round-thousand/round-thousand.component.ts","./src/app/modules/games/round/train/round-cars/round-cars.component.ts","./src/app/modules/games/round/train/round-length/round-length.component.ts","./src/app/modules/games/round/train/round-routes/round-routes.component.ts","./src/app/modules/games/round/train/round-stations/round-stations.component.ts","./src/app/modules/games/round/uno/round-uno/round-uno.component.ts","./src/app/modules/games/game/game.page.scss","./src/app/modules/games/gamers/choose-players/choose-players.component.scss","./src/app/modules/games/gamers/create-gamer/create-gamer.component.scss","./src/app/modules/games/gamers/select-color/select-color.component.scss","./src/app/modules/games/round/round-t-wrapper/round-t-wrapper.component.scss","./src/app/modules/games/round/round-wrapper/round-wrapper.component.scss","./src/app/modules/games/round/round.component.scss","./src/app/modules/games/round/rummy/round-rummy/round-rummy.component.scss","./src/app/modules/games/round/thousand/round-thousand/round-thousand.component.scss","./src/app/modules/games/round/train/round-cars/round-cars.component.scss","./src/app/modules/games/round/train/round-length/round-length.component.scss","./src/app/modules/games/round/train/round-routes/round-routes.component.scss","./src/app/modules/games/round/train/round-stations/round-stations.component.scss","./src/app/modules/games/round/uno/round-uno/round-uno.component.scss"],"sourcesContent":["import { Component, Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanDeactivate,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { CanDeactivateComponent, GameActionConfirmModalData } from 'src/app/interfaces';\nimport { ModalService } from 'src/app/services/modal.service';\nimport { ActionConfirmComponent } from '../common/action-confirm/action-confirm.component';\nimport { GamePage } from '../games/game/game.page';\nimport * as fromAppActions from 'src/app/store/actions/app.actions';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DeactivateRouteGuard implements CanDeactivate<CanDeactivateComponent> {\n  constructor(private modalService: ModalService, private store: Store) {}\n  canDeactivate(\n    component: CanDeactivateComponent,\n    currentRoute: ActivatedRouteSnapshot,\n    currentState: RouterStateSnapshot,\n    nextState?: RouterStateSnapshot,\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (!component.canDeactivate()) {\n      const data: GameActionConfirmModalData = {\n        title: 'elements.button.leaveGame',\n        text: 'common.leaveGameQuestion',\n        cancelBtnText: 'elements.button.returnToGame',\n        confirmBtnText: 'elements.button.leaveGame',\n      };\n      return this.modalService.presentModal(ActionConfirmComponent, { data }).then(({ role }) => {\n        if (role === 'confirm') {\n          this.store.dispatch(fromAppActions.clearGame());\n          return true;\n        }\n        return false;\n      });\n    } else {\n      return Promise.resolve(true);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DeactivateRouteGuard } from '../../auth/deactivate-route.guard';\r\n\r\nimport { GamePage } from './game.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: GamePage,\r\n    canDeactivate: [DeactivateRouteGuard],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class GamePageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { GamePageRoutingModule } from './game-routing.module';\r\n\r\nimport { GamePage } from './game.page';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { RoundModule } from '../round/round.module';\r\nimport { GamersModule } from '../gamers/gamers.module';\r\nimport { GameResultComponent } from './game-result/game-result.component';\r\nimport { SharedModule } from '../../common/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    GamePageRoutingModule,\r\n    TranslateModule.forChild({\r\n      extend: true,\r\n    }),\r\n    RoundModule,\r\n    GamersModule,\r\n    SharedModule,\r\n  ],\r\n  declarations: [GamePage, GameResultComponent],\r\n})\r\nexport class GamePageModule {}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { combineLatest, Observable, ReplaySubject } from 'rxjs';\r\nimport {\r\n  CanDeactivateComponent,\r\n  GameActionConfirmModalData,\r\n  GameType,\r\n  IGamer,\r\n  IGamerTotal,\r\n  Round,\r\n  RoundCfg,\r\n  RoundMember,\r\n  UID,\r\n} from 'src/app/interfaces';\r\nimport { environment } from 'src/environments/environment';\r\nimport * as fromAppReducer from '../../../store/reducers/app.reducer';\r\nimport * as fromRoundsReducer from '../../../store/reducers/round.reducer';\r\nimport * as fromPlayersReducer from '../../../store/reducers/player.reducer';\r\nimport * as fromRoundMembersReducer from '../../../store/reducers/round-member.reducer';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { SharedService } from 'src/app/services/shared.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport * as fromAppActions from 'src/app/store/actions/app.actions';\r\nimport { ModalService } from 'src/app/services/modal.service';\r\nimport { IonModal } from '@ionic/angular';\r\nimport { ActionConfirmComponent } from '../../common/action-confirm/action-confirm.component';\r\n\r\n@Component({\r\n  selector: 'app-game',\r\n  templateUrl: './game.page.html',\r\n  styleUrls: ['./game.page.scss'],\r\n})\r\nexport class GamePage implements OnInit, CanDeactivateComponent {\r\n  @ViewChild(IonModal) modal: IonModal;\r\n\r\n  roundsCfg: RoundCfg[];\r\n  nextRound: RoundCfg;\r\n\r\n  gameType: string;\r\n  gameType$: Observable<GameType>;\r\n  environment = environment;\r\n  showToolbarMenu = false;\r\n\r\n  activeRound: string;\r\n  activeRoundId$ = new ReplaySubject<string>(1);\r\n  activePlayerId$ = new ReplaySubject<UID>(1);\r\n  activePlayerId: UID;\r\n\r\n  loading$: Observable<boolean>;\r\n  rounds$: Observable<Round[]>;\r\n  rounds: Round[];\r\n\r\n  players$: Observable<IGamer[]>;\r\n  players: IGamer[];\r\n  playersWithTotal: IGamerTotal[];\r\n  roundMembers$: Observable<RoundMember[]>;\r\n  roundMembers: RoundMember[];\r\n\r\n  constructor(\r\n    private store: Store,\r\n    private sharedService: SharedService,\r\n    private route: ActivatedRoute,\r\n    private modalService: ModalService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.loading$ = this.store.select(fromAppReducer.selectLoading);\r\n    this.gameType$ = this.store.select(fromAppReducer.selectGameType);\r\n    this.rounds$ = this.store.select(fromRoundsReducer.selectAllRounds);\r\n\r\n    combineLatest([this.gameType$, this.rounds$]).subscribe(([gameType, rounds]) => {\r\n      console.log(gameType);\r\n      if (!gameType ) {\r\n        return;\r\n      }\r\n      this.gameType = gameType;\r\n\r\n      this.showToolbarMenu = environment.games[gameType]?.showToolbarMenu;\r\n\r\n      this.roundsCfg = environment.games[gameType]?.rounds;\r\n      if (gameType === 'uno') {\r\n        this.nextRound = this.roundsCfg[1];\r\n      }\r\n      this.rounds = rounds;\r\n      if (!this.roundsCfg) {\r\n        return;\r\n      }\r\n      if (rounds.length) {\r\n        // game started and active menu 'start'\r\n        if (this.gameType === 'uno') {\r\n          this.activeRoundId$.next(\r\n            this.roundsCfg[1]._id +\r\n              (rounds.length === 1 ? this.roundsCfg[1].namePostfix : rounds.length),\r\n          );\r\n        } else {\r\n          this.activeRoundId$.next(this.roundsCfg[1]._id);\r\n        }\r\n      } else {\r\n        // game not started and active menu !'start'\r\n        this.activeRoundId$.next(this.roundsCfg[0]._id);\r\n      }\r\n    });\r\n\r\n    this.roundMembers$ = this.store.select(fromRoundMembersReducer.selectAllRoundMembers);\r\n\r\n    this.players$ = this.store.select(fromPlayersReducer.selectAllPlayers);\r\n    this.players$.subscribe((players) => {\r\n      if (players.length) {\r\n        this.activePlayerId$.next(players[0]._id);\r\n      }\r\n    });\r\n\r\n    this.players$\r\n      .pipe(\r\n        switchMap((players) => {\r\n          this.players = players;\r\n          return this.roundMembers$;\r\n        }),\r\n      )\r\n      .subscribe((roundMembers) => {\r\n        this.roundMembers = roundMembers;\r\n        this.playersWithTotal = this.players\r\n\r\n          .map((player) => {\r\n            return {\r\n              ...player,\r\n              totalScore: this.getPlayerTotalScores(player._id),\r\n            };\r\n          })\r\n          .sort((a, b) => b.totalScore - a.totalScore);\r\n      });\r\n    this.activePlayerId$.subscribe((activePlayerId) => (this.activePlayerId = activePlayerId));\r\n\r\n    this.route.params.subscribe((params) => {\r\n      // this.gameType = params.id;\r\n    });\r\n  }\r\n\r\n  canDeactivate(): boolean {\r\n    return this.rounds.length === 0;\r\n  }\r\n\r\n  finishGameDisabled(playersWithTotal: IGamer[]): boolean {\r\n    let countZeros = 0;\r\n\r\n    playersWithTotal.forEach((player: IGamer) => {\r\n      if (this.getPlayerTotalScores(player._id) === 0) {\r\n        countZeros++;\r\n      }\r\n    });\r\n    return countZeros !== 1;\r\n  }\r\n\r\n  getPlayerTotalScores(player: string): number {\r\n    return this.sharedService.getPlayerTotalScores(player);\r\n  }\r\n\r\n  onMenuClickHandler(e: any) {\r\n    this.activeRoundId$.next(e.target.value);\r\n  }\r\n\r\n  async onFinishGameHandler() {\r\n    const data: GameActionConfirmModalData = {\r\n      title: 'elements.button.finishGame',\r\n      text: 'common.finishGameQuestion',\r\n      cancelBtnText: 'elements.button.returnToGame',\r\n      confirmBtnText: 'elements.button.finishGame',\r\n    };\r\n    const { role } = await this.modalService.presentModal(ActionConfirmComponent, { data });\r\n    if (role === 'confirm') {\r\n      this.store.dispatch(fromAppActions.finishGame());\r\n    }\r\n  }\r\n\r\n  async onCancelGameHandler() {\r\n    const data: GameActionConfirmModalData = {\r\n      title: 'elements.button.cancelGame',\r\n      text: 'common.cancelGameQuestion',\r\n      cancelBtnText: 'elements.button.returnToGame',\r\n      confirmBtnText: 'elements.button.cancelGame',\r\n    };\r\n    const { role } = await this.modalService.presentModal(ActionConfirmComponent, { data });\r\n    if (role === 'confirm') {\r\n      this.store.dispatch(fromAppActions.clearGame());\r\n    }\r\n  }\r\n\r\n  openNextRound() {\r\n    this.store.dispatch(fromAppActions.openNextRound());\r\n    // this.sharedService.addRounds(this.nextRound);\r\n  }\r\n\r\n  selectPlayer(playerId: UID) {\r\n    if (this.gameType === 'thousand') {\r\n      return;\r\n    }\r\n    this.activePlayerId$.next(playerId);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport {\r\n  FormControl,\r\n  FormGroup,\r\n  FormGroupDirective,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport {\r\n  CollectionSelectors,\r\n  EntityActionFactory,\r\n  MergeStrategy,\r\n} from '@ngrx/data';\r\nimport { ReducerManager, Store } from '@ngrx/store';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable } from 'rxjs';\r\nimport { switchMap, take } from 'rxjs/operators';\r\nimport { IGamer, Colors, IGame, GameType } from 'src/app/interfaces';\r\nimport {\r\n  GamerDataService,\r\n  GamerService,\r\n} from 'src/app/store/gamer-data.service';\r\nimport { AuthService } from '../../../auth/auth.service';\r\nimport { AlertController, PopoverController } from '@ionic/angular';\r\nimport { SelectColorComponent } from '../select-color/select-color.component';\r\nimport { CreateGamerComponent } from '../create-gamer/create-gamer.component';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { GameService } from 'src/app/store/game-data.service';\r\nimport { addRound, loadRounds } from 'src/app/store/actions/round.actions';\r\nimport { loadPlayers } from 'src/app/store/actions/player.actions';\r\nimport * as fromPlayerReducer from '../../../../store/reducers/player.reducer';\r\nimport * as fromAppReducer from '../../../../store/reducers/app.reducer';\r\n\r\nimport * as fromPlayerActions from '../../../../store/actions/player.actions';\r\nimport * as fromAppActions from '../../../../store/actions/app.actions';\r\nimport { SharedService } from 'src/app/services/shared.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-choose-players',\r\n  templateUrl: './choose-players.component.html',\r\n  styleUrls: ['./choose-players.component.scss'],\r\n})\r\nexport class ChoosePlayersComponent implements OnInit {\r\n  // @Input() gameType: string;\r\n  environment = environment;\r\n\r\n  gamers$: Observable<IGamer[]> | Store<IGamer[]>;\r\n  gamers: IGamer[] = [];\r\n\r\n  gameType$: Observable<GameType>;\r\n  gameType: GameType;\r\n\r\n  filtredGamers: IGamer[] = [];\r\n  // showSelectColor: number | null;\r\n  players: IGamer[] = [];\r\n  players$: Observable<IGamer[]>;\r\n  // recentPlayers$: Observable<IGamer[]>;\r\n  // playersTotal$: Observable<number>;\r\n\r\n  playersColors: Colors[];\r\n  filtredColors: Colors[];\r\n\r\n  constructor(\r\n    private store: Store,\r\n    public translate: TranslateService,\r\n    private gamerService: GamerService,\r\n    public popoverController: PopoverController,\r\n    public alertController: AlertController,\r\n    private sharedService: SharedService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.gameType$ = this.store.select(fromAppReducer.selectGameType);\r\n    this.gameType$.subscribe((gameType) => {\r\n      this.gameType = gameType;\r\n      this.playersColors = environment.games[gameType]\r\n        ?.playersColors as Colors[];\r\n      this.filtredColors = environment.games[gameType]\r\n        ?.playersColors as Colors[];\r\n    });\r\n\r\n    this.players$ = this.store.select(fromPlayerReducer.selectAllPlayers);\r\n    this.players$.subscribe((players) => {\r\n      this.players = players;\r\n      this.filter();\r\n    });\r\n\r\n    this.gamers$ = this.gamerService.entities$;\r\n    this.gamers$.subscribe((gamers) => {\r\n      this.gamers = gamers;\r\n      this.filter();\r\n    });\r\n  }\r\n\r\n  startGameHandler() {\r\n    this.store.dispatch(fromAppActions.createRounds());\r\n    // this.sharedService.createRounds(this.gameType);\r\n  }\r\n\r\n  async presentPopover(event: Event, component: any, data: any): Promise<any> {\r\n    const popover = await this.popoverController.create({\r\n      component,\r\n      cssClass: 'select-color-popover',\r\n      // event,\r\n      componentProps: data,\r\n      translucent: true,\r\n    });\r\n    await popover.present();\r\n    return await popover.onDidDismiss();\r\n  }\r\n\r\n  async showSelectColorPopup(event: Event, index: number) {\r\n    const { data } = await this.presentPopover(event, SelectColorComponent, {\r\n      colors: this.filtredColors,\r\n    });\r\n    if (data) {\r\n      const { color } = data;\r\n      this.chooseColorHandler(color, index);\r\n    }\r\n  }\r\n\r\n  async showCreateGamerPopup(event: Event) {\r\n    const { data } = await this.presentPopover(\r\n      event,\r\n      CreateGamerComponent,\r\n      null,\r\n    );\r\n    if (data) {\r\n      const { gamer } = data;\r\n      this.createGamerHandler(gamer);\r\n    }\r\n  }\r\n\r\n  filter() {\r\n    this.filtredGamers = this.gamers.filter((gamer) => {\r\n      for (const player of this.players) {\r\n        if (player._id === gamer._id) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    });\r\n    const filtredColors = this.playersColors?.filter((color, idx) => {\r\n      for (const player of this.players) {\r\n        if (player.color === color) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    });\r\n    this.filtredColors = filtredColors?.length\r\n      ? filtredColors\r\n      : this.filtredColors;\r\n  }\r\n\r\n  choosePlayerHandler(e: any, index: number) {\r\n    const players = this.players.map((player, idx) => {\r\n      if (idx === index) {\r\n        const preferredColor = this.filtredGamers[0].color;\r\n        if (this.filtredColors.includes(preferredColor)) {\r\n          return e.target.value;\r\n        } else {\r\n          return { ...e.target.value, color: this.filtredColors[0] };\r\n        }\r\n      }\r\n      return player;\r\n    });\r\n    this.store.dispatch(fromPlayerActions.loadPlayers({ players }));\r\n  }\r\n\r\n  chooseColorHandler(color: Colors, index: number) {\r\n    this.players = this.players.map((player, idx) => {\r\n      if (idx === index) {\r\n        return { ...player, color };\r\n      }\r\n      return player;\r\n    });\r\n    this.filter();\r\n  }\r\n\r\n  removePlayerHandler(_id: string) {\r\n    this.store.dispatch(fromPlayerActions.deletePlayer({ id: _id }));\r\n  }\r\n\r\n  removeAllPlayersHandler() {\r\n    this.store.dispatch(fromPlayerActions.clearPlayers());\r\n  }\r\n\r\n  addPlayerHandler(firstEl = true) {\r\n    if (!this.filtredGamers.length) {\r\n      return;\r\n    }\r\n    let candidate = this.filtredGamers[0];\r\n    if (!firstEl) {\r\n      candidate = this.filtredGamers[this.filtredGamers.length - 1];\r\n    }\r\n    const preferredColor = candidate.color;\r\n    if (this.filtredColors.includes(preferredColor)) {\r\n      this.store.dispatch(\r\n        fromPlayerActions.addPlayer({ player: { ...candidate } }),\r\n      );\r\n    } else {\r\n      this.store.dispatch(\r\n        fromPlayerActions.addPlayer({\r\n          player: { ...candidate, color: this.filtredColors[0] },\r\n        }),\r\n      );\r\n    }\r\n    // this.filter();\r\n  }\r\n\r\n  createGamerHandler(gamer: IGamer) {\r\n    this.gamerService.add(gamer).subscribe((result) => {\r\n      // console.log(result);\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PopoverController } from '@ionic/angular';\r\nimport { Colors, IGamer } from 'src/app/interfaces';\r\nimport { environment } from 'src/environments/environment';\r\nimport { SelectColorComponent } from '../select-color/select-color.component';\r\n\r\n@Component({\r\n  selector: 'app-create-gamer',\r\n  templateUrl: './create-gamer.component.html',\r\n  styleUrls: ['./create-gamer.component.scss'],\r\n})\r\nexport class CreateGamerComponent implements OnInit {\r\n  playersColors = environment.games.train.playersColors as Colors[];\r\n  color: Colors = this.playersColors[0];\r\n  name: string;\r\n  constructor(public popoverController: PopoverController) {}\r\n\r\n  ngOnInit() {}\r\n  async presentPopover(event: Event, component: any, data: any): Promise<any> {\r\n    const popover = await this.popoverController.create({\r\n      component,\r\n      cssClass: 'select-color-popover',\r\n      // event,\r\n      componentProps: data,\r\n      translucent: true,\r\n    });\r\n    await popover.present();\r\n    return await popover.onDidDismiss();\r\n  }\r\n\r\n  async showSelectColorPopup(event: Event) {\r\n    const { data } = await this.presentPopover(event, SelectColorComponent, {\r\n      colors: this.playersColors,\r\n    });\r\n    if (data) {\r\n      const { color } = data;\r\n      this.color = color;\r\n    }\r\n  }\r\n\r\n  dismiss(data?: any): void {\r\n    this.popoverController.dismiss(data);\r\n  }\r\n\r\n  onCreate() {\r\n    this.dismiss({\r\n      gamer: {\r\n        color: this.color,\r\n        name: this.name,\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ChoosePlayersComponent } from './choose-players/choose-players.component';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { SelectColorComponent } from './select-color/select-color.component';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { CreateGamerComponent } from './create-gamer/create-gamer.component';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [ChoosePlayersComponent, SelectColorComponent, CreateGamerComponent],\r\n  imports: [\r\n    FormsModule,\r\n    CommonModule,\r\n    IonicModule,\r\n    TranslateModule.forChild({\r\n      extend: true,\r\n    }),\r\n  ],\r\n  exports: [ChoosePlayersComponent],\r\n})\r\nexport class GamersModule {}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { PopoverController } from '@ionic/angular';\r\nimport { Colors } from 'src/app/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-select-color',\r\n  templateUrl: './select-color.component.html',\r\n  styleUrls: ['./select-color.component.scss'],\r\n})\r\nexport class SelectColorComponent implements OnInit {\r\n  @Input() colors: Colors[];\r\n\r\n  constructor(public popoverController: PopoverController) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  dismiss(data?: any): void {\r\n    this.popoverController.dismiss(data);\r\n  }\r\n\r\n  onSelect(color: Colors) {\r\n    this.dismiss({\r\n      color,\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Update } from '@ngrx/entity';\nimport { Store } from '@ngrx/store';\nimport { first } from 'rxjs/operators';\nimport {\n  NamedScore,\n  RoundMember,\n  RoundScores,\n  RoundScoresType,\n  UID,\n} from 'src/app/interfaces';\nimport { SharedService } from 'src/app/services/shared.service';\nimport { selectByIdRoundMember } from 'src/app/store/reducers/round-member.reducer';\nimport * as fromRoundMembersActions from '../../store/actions/round-member.actions';\nimport { TelegramService } from '../auth/telegram/telegram.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GamesService {\n  constructor(\n    protected store: Store,\n    protected sharedService: SharedService,\n    protected telegramService: TelegramService,\n  ) {}\n\n  storeRoundScores(scores: RoundScoresType) {\n    const updates: Update<RoundMember>[] = [];\n    for (const key in scores) {\n      // TODO: Object.keys\n      if (scores.hasOwnProperty(key)) {\n        this.store\n          .select(selectByIdRoundMember(key))\n          .pipe(first())\n          .subscribe((roundMember) => {\n            const namedScore: NamedScore = {\n              name: scores[key].name,\n              value: scores[key].value,\n            };\n            updates.push({\n              id: roundMember._id,\n              changes: {\n                ...roundMember,\n                namedScoresLine: [...roundMember.namedScoresLine, namedScore],\n                scoresLine: [...roundMember.scoresLine, namedScore.value],\n              },\n            });\n          });\n      }\n    }\n    this.store.dispatch(\n      fromRoundMembersActions.updateRoundMembers({\n        roundMembers: updates,\n      }),\n    );\n  }\n\n  addToNamedScoresLine(namedScore: NamedScore, playerId: UID, roundId: string) {\n    const roundMember = this.sharedService.getMemberByPlayerId(playerId, roundId);\n    const changes = {\n      ...roundMember,\n      namedScoresLine: [...roundMember.namedScoresLine, namedScore],\n      scoresLine: [...roundMember.scoresLine, namedScore.value],\n    };\n\n    this.store.dispatch(\n      fromRoundMembersActions.updateRoundMember({\n        roundMember: {\n          id: roundMember._id,\n          changes,\n        },\n      }),\n    );\n    // this.addToScoresLine(namedScore.value, playerId, roundId);\n  }\n\n  addToScoresLine(score: number, playerId: UID, roundId: string) {\n    const roundMember = this.sharedService.getMemberByPlayerId(playerId, roundId);\n    const changes = {\n      ...roundMember,\n      scoresLine: [...roundMember.scoresLine, score],\n    };\n\n    this.store.dispatch(\n      fromRoundMembersActions.updateRoundMember({\n        roundMember: {\n          id: roundMember._id,\n          changes,\n        },\n      }),\n    );\n  }\n\n  removeFromNamedScoresLine(namedScore: NamedScore, playerId: UID, roundId: string) {\n    const roundMember = this.sharedService.getMemberByPlayerId(playerId, roundId);\n    const namedScoresLine = [...roundMember.namedScoresLine];\n    const index = namedScoresLine.findIndex((ns) => ns.name === namedScore.name);\n    if (index !== -1) {\n      namedScoresLine.splice(index, 1);\n      const changes = {\n        ...roundMember,\n        namedScoresLine,\n      };\n      this.store.dispatch(\n        fromRoundMembersActions.updateRoundMember({\n          roundMember: {\n            id: roundMember._id,\n            changes,\n          },\n        }),\n      );\n\n      this.removeFromScoresLine(namedScore.value, playerId, roundId);\n    }\n  }\n\n  removeFromScoresLine(score: number, playerId: UID, roundId: string) {\n    const roundMember = this.sharedService.getMemberByPlayerId(playerId, roundId);\n    const scoresLine = [...roundMember.scoresLine];\n    const index = scoresLine.indexOf(score);\n    scoresLine.splice(index, 1);\n\n    const changes = {\n      ...roundMember,\n      scoresLine,\n    };\n\n    this.store.dispatch(\n      fromRoundMembersActions.updateRoundMember({\n        roundMember: {\n          id: roundMember._id,\n          changes,\n        },\n      }),\n    );\n  }\n\n  setScoresLine(scoresLine: number[], playerId: UID, roundId: string) {\n    const roundMember = this.sharedService.getMemberByPlayerId(playerId, roundId);\n    const changes = {\n      ...roundMember,\n      scoresLine,\n    };\n\n    this.store.dispatch(\n      fromRoundMembersActions.updateRoundMember({\n        roundMember: {\n          id: roundMember._id,\n          changes,\n        },\n      }),\n    );\n  }\n}\n","import { InjectionToken } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { IGamer, NamedScore, Round, RoundMember, UID } from 'src/app/interfaces';\r\nimport { SharedService } from 'src/app/services/shared.service';\r\nimport { GamesService } from '../games.service';\r\n\r\nexport const ROUND_COMPONENT = new InjectionToken<RoundBase>('roundComponent');\r\n\r\nexport interface RoundBase {\r\n  playerId: UID;\r\n  roundId: string;\r\n  sharedService: SharedService;\r\n  gamesService: GamesService;\r\n  getMemberByPlayerId: (playerId: string) => RoundMember;\r\n}\r\n\r\nexport interface RoundBaseWrapper {\r\n  roundComponent: RoundBase;\r\n  playerId: UID;\r\n  roundId: string;\r\n  sharedService: SharedService;\r\n  getRoundById: (roundId: string) => Round;\r\n  calcScores: (playerId: string) => number;\r\n  getPlayerColor: (playerId: string) => string;\r\n  getPlayerName: (playerId: string) => string;\r\n  getMemberByPlayerId: (playerId: string) => RoundMember;\r\n}\r\n\r\nexport interface RoundScoresLine extends RoundBase {\r\n  addToScoresLine: (score: number) => void;\r\n  removeFromScoresLine: (score: number) => void;\r\n  addToNamedScoresLine: (namedScore: NamedScore, playerId?: UID) => void;\r\n  removeFromNamedScoresLine: (namedScore: NamedScore) => void;\r\n}\r\n\r\nexport interface RoundTBase extends RoundScoresLine, RoundBase {\r\n  store: Store;\r\n  rounds$: Observable<Round[]>;\r\n}\r\n\r\nexport interface RoundLongest {\r\n  longestRouteScoreEnv: number;\r\n  onMarkLongestHandler: (e: any) => void;\r\n}\r\n\r\nexport type Inverse = 1 | -1;\r\n\r\nexport interface RoundRoutes {\r\n  routesScoresEnv: NamedScore[];\r\n  inverse: Inverse;\r\n  inverseScore: (e: any) => void;\r\n}\r\n\r\nexport interface RoundCars {\r\n  carsScoresEnv: {\r\n    name: number;\r\n    value: number;\r\n  }[];\r\n  calcQtyOfArrItems: (e: any) => void;\r\n}\r\n","import { Component, ContentChild, Input, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { GameType, IGamer, Round, RoundMember, UID } from 'src/app/interfaces';\r\nimport { SharedService } from 'src/app/services/shared.service';\r\nimport { RoundBase, RoundBaseWrapper, ROUND_COMPONENT } from '../round-interfaces';\r\nimport { selectGameType, selectLoading } from '../../../../store/reducers/app.reducer';\r\nimport { Observable } from 'rxjs';\r\nimport { selectAllPlayers } from 'src/app/store/reducers/player.reducer';\r\n\r\n@Component({\r\n  selector: 'app-round-t-wrapper',\r\n  templateUrl: './round-t-wrapper.component.html',\r\n  styleUrls: ['./round-t-wrapper.component.scss'],\r\n})\r\nexport class RoundTWrapperComponent implements OnInit, RoundBaseWrapper {\r\n  @ContentChild(ROUND_COMPONENT, { static: true })\r\n  roundComponent: RoundBase;\r\n\r\n  @Input() playerId: UID;\r\n  @Input() roundId: string;\r\n  players$: Observable<IGamer[]>;\r\n\r\n  gameType$: Observable<GameType>;\r\n  loading$: Observable<boolean>;\r\n  gameType: GameType;\r\n\r\n  constructor(public sharedService: SharedService, private store: Store) {}\r\n\r\n  ngOnInit() {\r\n    this.loading$ = this.store.select(selectLoading);\r\n    this.gameType$ = this.store.select(selectGameType);\r\n    this.players$ = this.store.select(selectAllPlayers);\r\n    this.gameType$.subscribe((gameType) => (this.gameType = gameType));\r\n  }\r\n\r\n  getRoundById(): Round {\r\n    return this.sharedService.getRoundById(this.roundId);\r\n  }\r\n\r\n  calcScores(): number {\r\n    return this.getMemberByPlayerId()?.scoresLine.reduce((prev, cur) => prev + cur, 0);\r\n  }\r\n\r\n  getPlayerColor(): string {\r\n    return this.sharedService.getPlayerColor(this.playerId);\r\n  }\r\n\r\n  getPlayerName(): string {\r\n    return this.sharedService.getPlayerName(this.playerId);\r\n  }\r\n\r\n  getMemberByPlayerId(): RoundMember {\r\n    return this.sharedService.getMemberByPlayerId(this.playerId, this.roundId);\r\n  }\r\n}\r\n","import { Component, ContentChild, Input, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { GameType, Round, RoundMember, UID } from 'src/app/interfaces';\r\nimport { SharedService } from 'src/app/services/shared.service';\r\nimport { RoundBase, RoundBaseWrapper, ROUND_COMPONENT } from '../round-interfaces';\r\nimport { selectGameType, selectLoading } from '../../../../store/reducers/app.reducer';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-round-wrapper',\r\n  templateUrl: './round-wrapper.component.html',\r\n  styleUrls: ['./round-wrapper.component.scss'],\r\n})\r\nexport class RoundWrapperComponent implements OnInit, RoundBaseWrapper {\r\n  @ContentChild(ROUND_COMPONENT, { static: true })\r\n  roundComponent: RoundBase;\r\n  @Input() playerId: UID;\r\n  @Input() roundId: string;\r\n  gameType$: Observable<GameType>;\r\n  loading$: Observable<boolean>;\r\n  gameType: GameType;\r\n\r\n  constructor(public sharedService: SharedService, private store: Store) {}\r\n\r\n  ngOnInit() {\r\n    this.loading$ = this.store.select(selectLoading);\r\n    this.gameType$ = this.store.select(selectGameType);\r\n    this.gameType$.subscribe((gameType) => (this.gameType = gameType));\r\n  }\r\n\r\n  getRoundById(): Round {\r\n    return this.sharedService.getRoundById(this.roundId);\r\n  }\r\n\r\n  calcScores(): number {\r\n    return this.getMemberByPlayerId()?.scoresLine.reduce((prev, cur) => prev + cur, 0);\r\n  }\r\n\r\n  getPlayerColor(): string {\r\n    return this.sharedService.getPlayerColor(this.playerId);\r\n  }\r\n\r\n  getPlayerName(): string {\r\n    return this.sharedService.getPlayerName(this.playerId);\r\n  }\r\n\r\n  getMemberByPlayerId(): RoundMember {\r\n    return this.sharedService.getMemberByPlayerId(this.playerId, this.roundId);\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { GameType, IGamer, Round, UID } from 'src/app/interfaces';\r\nimport { selectGameType } from 'src/app/store/reducers/app.reducer';\r\nimport { selectAllRounds } from 'src/app/store/reducers/round.reducer';\r\n\r\n@Component({\r\n  selector: 'app-round',\r\n  templateUrl: './round.component.html',\r\n  styleUrls: ['./round.component.scss'],\r\n})\r\nexport class RoundComponent implements OnInit {\r\n  @Input() activeRoundId$: Observable<string>;\r\n  @Input() activePlayerId$: Observable<UID>;\r\n  @Input() gameType$: Observable<GameType>;\r\n  @Input() players$: Observable<IGamer[]>;\r\n\r\n  rounds$: Observable<Round[]>;\r\n  // gameType$: Observable<GameType>;\r\n\r\n  constructor(private store: Store) {}\r\n\r\n  ngOnInit() {\r\n    this.rounds$ = this.store.select(selectAllRounds);\r\n    // this.gameType$ = this.store.select(selectGameType);\r\n  }\r\n}\r\n","import { Directive, Injector, Input } from '@angular/core';\r\nimport { Actions } from '@ngrx/effects';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { IGamer, NamedScore, Round, RoundMember, UID } from 'src/app/interfaces';\r\nimport { SharedService } from 'src/app/services/shared.service';\r\nimport { selectAllRoundMembers } from 'src/app/store/reducers/round-member.reducer';\r\nimport { selectAllRounds } from 'src/app/store/reducers/round.reducer';\r\nimport { environment } from 'src/environments/environment';\r\nimport { TelegramService } from '../../auth/telegram/telegram.service';\r\nimport { GamesService } from '../games.service';\r\nimport { RoundBase, RoundScoresLine, RoundTBase } from './round-interfaces';\r\n\r\n@Directive({\r\n  selector: '[appRound]',\r\n})\r\nexport class RoundBaseDirective implements RoundBase {\r\n  @Input() playerId: UID;\r\n  @Input() roundId: string;\r\n  sharedService: SharedService;\r\n  gamesService: GamesService;\r\n  telegramService: TelegramService;\r\n  actions$: Actions;\r\n\r\n  constructor(injector: Injector) {\r\n    this.sharedService = injector.get(SharedService);\r\n    this.gamesService = injector.get(GamesService);\r\n    this.telegramService = injector.get(TelegramService);\r\n    this.actions$ = injector.get(Actions);\r\n  }\r\n\r\n  getMemberByPlayerId(): RoundMember {\r\n    return this.sharedService.getMemberByPlayerId(this.playerId, this.roundId);\r\n  }\r\n\r\n  addToScoresLine(score: number): void {\r\n    this.gamesService.addToScoresLine(score, this.playerId, this.roundId);\r\n  }\r\n\r\n  removeFromScoresLine(score: number): void {\r\n    this.gamesService.removeFromScoresLine(score, this.playerId, this.roundId);\r\n  }\r\n\r\n  setScoresLine(scoresLine: number[], playerId: UID, roundId: string) {\r\n    this.gamesService.setScoresLine(scoresLine, playerId, roundId);\r\n  }\r\n}\r\n\r\n@Directive({\r\n  selector: '[appRoundScoresLine]',\r\n})\r\nexport class RoundScoresLineDirective extends RoundBaseDirective implements RoundScoresLine {\r\n  constructor(injector: Injector) {\r\n    super(injector);\r\n  }\r\n\r\n  addToNamedScoresLine(namedScore: NamedScore, playerId?: UID) {\r\n    this.gamesService.addToNamedScoresLine(namedScore, playerId || this.playerId, this.roundId);\r\n  }\r\n\r\n  removeFromNamedScoresLine(namedScore: NamedScore) {\r\n    this.gamesService.removeFromNamedScoresLine(namedScore, this.playerId, this.roundId);\r\n  }\r\n}\r\n\r\n@Directive({\r\n  selector: '[appRoundT]',\r\n})\r\nexport class RoundTBaseDirective extends RoundScoresLineDirective implements RoundTBase {\r\n  store: Store;\r\n  rounds$: Observable<Round[]>;\r\n  roundMembers$: Observable<RoundMember[]>;\r\n  // roundMembers: RoundMember[];\r\n\r\n  constructor(injector: Injector) {\r\n    super(injector);\r\n    this.store = injector.get(Store);\r\n    this.rounds$ = this.store.select(selectAllRounds);\r\n    this.roundMembers$ = this.store.select(selectAllRoundMembers);\r\n\r\n    // this.roundMembers$.subscribe((roundMembers) => this.roundMembers = roundMembers)\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RoundWrapperComponent } from './round-wrapper/round-wrapper.component';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { RoundComponent } from './round.component';\r\nimport { RoundRoutesComponent } from './train/round-routes/round-routes.component';\r\nimport { RoundLengthComponent } from './train/round-length/round-length.component';\r\nimport { RoundStationsComponent } from './train/round-stations/round-stations.component';\r\nimport { RoundCarsComponent } from './train/round-cars/round-cars.component';\r\nimport { RoundUnoComponent } from './uno/round-uno/round-uno.component';\r\nimport { GamersModule } from '../gamers/gamers.module';\r\nimport { RoundTWrapperComponent } from './round-t-wrapper/round-t-wrapper.component';\r\nimport { RoundThousandComponent } from './thousand/round-thousand/round-thousand.component';\r\nimport { RoundRummyComponent } from './rummy/round-rummy/round-rummy.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RoundWrapperComponent,\r\n    RoundTWrapperComponent,\r\n    RoundComponent,\r\n    RoundRoutesComponent,\r\n    RoundLengthComponent,\r\n    RoundStationsComponent,\r\n    RoundCarsComponent,\r\n    RoundUnoComponent,\r\n    RoundThousandComponent,\r\n    RoundRummyComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    TranslateModule.forChild({\r\n      extend: true,\r\n    }),\r\n    GamersModule,\r\n  ],\r\n  exports: [RoundComponent],\r\n})\r\nexport class RoundModule {}\r\n","import { Component, Injector, OnInit } from '@angular/core';\r\nimport { NamedScore } from 'src/app/interfaces';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ROUND_COMPONENT } from '../../round-interfaces';\r\nimport { RoundBaseDirective, RoundScoresLineDirective } from '../../round.directive';\r\n\r\n@Component({\r\n  selector: 'app-round-rummy',\r\n  templateUrl: './round-rummy.component.html',\r\n  styleUrls: ['./round-rummy.component.scss'],\r\n  providers: [\r\n    {\r\n      provide: ROUND_COMPONENT,\r\n      useExisting: RoundRummyComponent,\r\n    },\r\n  ],\r\n})\r\nexport class RoundRummyComponent extends RoundScoresLineDirective implements OnInit {\r\n  namedScoresEnv = environment.games.rummy.namedScores;\r\n  namedScoreLine: NamedScore[] = [];\r\n\r\n  constructor(injector: Injector) {\r\n    super(injector);\r\n  }\r\n\r\n  ngOnInit() {}\r\n}\r\n","import { Component, Injector, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { ofType } from '@ngrx/effects';\r\nimport {\r\n  MessageDto,\r\n  MessageThousandRound,\r\n  NamedScore,\r\n  RoundMember,\r\n  RoundScoresOptionsType,\r\n  RoundScoresType,\r\n} from 'src/app/interfaces';\r\nimport { ROUND_COMPONENT } from '../../round-interfaces';\r\nimport { RoundTBaseDirective } from '../../round.directive';\r\nimport * as fromAppActions from '../../../../../store/actions/app.actions';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-round-thousand',\r\n  templateUrl: './round-thousand.component.html',\r\n  styleUrls: ['./round-thousand.component.scss'],\r\n  providers: [\r\n    {\r\n      provide: ROUND_COMPONENT,\r\n      useExisting: RoundThousandComponent,\r\n    },\r\n  ],\r\n})\r\nexport class RoundThousandComponent\r\n  extends RoundTBaseDirective\r\n  implements OnInit, OnDestroy\r\n{\r\n  scores: RoundScoresType = {};\r\n  initialScores: RoundScoresType = {};\r\n  roundScoresOption: RoundScoresOptionsType;\r\n  qtyOfPlayers: number;\r\n  roundMembers: RoundMember[];\r\n  activeRoundMemberId: string;\r\n  isFinished = false;\r\n  sub: any;\r\n  constructor(injector: Injector) {\r\n    super(injector);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.sub.unsubscribe();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.sub = this.roundMembers$.subscribe((roundMembers) => {\r\n      this.qtyOfPlayers = roundMembers.length;\r\n      this.roundMembers = roundMembers;\r\n      if (this.checkOnFinishGame() && !this.isFinished) {\r\n        // game finished\r\n        this.isFinished = true;\r\n        return this.store.dispatch(fromAppActions.finishGame());\r\n      } else if (\r\n        roundMembers.length &&\r\n        roundMembers[0].namedScoresLine.length &&\r\n        roundMembers[0].namedScoresLine.length % roundMembers.length === 0\r\n      ) {\r\n        // game started and at least one round finished\r\n        const messages: MessageDto<MessageThousandRound>[] = this.addTotals(\r\n          roundMembers,\r\n        ).map((roundMember) => {\r\n          const { name, value, total } =\r\n            roundMember.namedScoresLine[roundMember.namedScoresLine.length - 1];\r\n          return {\r\n            playerId: roundMember.player,\r\n            data: { lastScores: { name, value, total } },\r\n            gameType: 'thousand',\r\n          };\r\n        });\r\n        this.telegramService\r\n          .sendMessagesThousandRoundDto(messages)\r\n          .subscribe((_) => _);\r\n      }\r\n\r\n      if (this.roundMembers.length) {\r\n        this.resetScores();\r\n      }\r\n    });\r\n\r\n    // cancel prev game\r\n    this.actions$\r\n      .pipe(ofType(fromAppActions.clearGame))\r\n      .subscribe((_) => (this.scores = {}));\r\n  }\r\n\r\n  addTotals(roundMembers: RoundMember[]): RoundMember[] {\r\n    return roundMembers.map((roundMember) => {\r\n      let acc = 0;\r\n      return {\r\n        ...roundMember,\r\n        namedScoresLine: roundMember.namedScoresLine.map(\r\n          (namedScore: NamedScore) => {\r\n            acc = namedScore.value + acc;\r\n            return { ...namedScore, total: acc };\r\n          },\r\n        ),\r\n      };\r\n    });\r\n  }\r\n\r\n  changeScoresState(\r\n    roundMemberId: string,\r\n    option: RoundScoresOptionsType,\r\n  ): void {\r\n    if (this.scores[roundMemberId].barrel > 0) {\r\n      return;\r\n    }\r\n\r\n    const currentState = this.scores[roundMemberId];\r\n    this.roundScoresOption = option;\r\n\r\n    if (currentState.disabled.includes(option)) {\r\n      return;\r\n    }\r\n    if (currentState.name === option) {\r\n      this.scores = JSON.parse(JSON.stringify(this.initialScores));\r\n      return;\r\n    }\r\n    this.scores[roundMemberId].name = option;\r\n    this.scores[roundMemberId].value = option === 'r' ? 0 : -100;\r\n\r\n    Object.keys(this.scores)\r\n      .filter((key) => key !== roundMemberId)\r\n      .forEach((key) => {\r\n        this.scores[key] = {\r\n          ...this.initialScores[key],\r\n          value: option === 'r' ? 60 : 0,\r\n        };\r\n      });\r\n  }\r\n\r\n  resetScores(): void {\r\n    const activeRoundMemberPosition = this.roundMembers.length\r\n      ? (this.roundMembers[0].namedScoresLine.length + this.qtyOfPlayers) %\r\n        this.qtyOfPlayers\r\n      : 0;\r\n    this.roundMembers.forEach((roundMember, i) => {\r\n      if (i === activeRoundMemberPosition) {\r\n        this.activeRoundMemberId = roundMember._id;\r\n      }\r\n\r\n      this.scores[roundMember._id] = {\r\n        name: 'score',\r\n        value: null,\r\n        disabled: [],\r\n        doubleZero: false,\r\n        barrel: 0,\r\n      };\r\n\r\n      if (roundMember.namedScoresLine.length > 1) {\r\n        const isDoubleZero =\r\n          roundMember.namedScoresLine[roundMember.namedScoresLine.length - 1]\r\n            .value === 0 &&\r\n          roundMember.namedScoresLine[roundMember.namedScoresLine.length - 2]\r\n            .value === 0;\r\n        if (isDoubleZero) {\r\n          this.scores[roundMember._id].doubleZero = true;\r\n        }\r\n      }\r\n\r\n      let acc = 0;\r\n      roundMember.namedScoresLine.map((namedScore: NamedScore) => {\r\n        acc = namedScore.value + acc;\r\n        if (acc >= 900 && acc < 1000) {\r\n          this.scores[roundMember._id].barrel += 1;\r\n        } else {\r\n          this.scores[roundMember._id].barrel = 0;\r\n        }\r\n      });\r\n\r\n      const isAlreadyR = roundMember.namedScoresLine.find(\r\n        (score) => score.name === 'r',\r\n      );\r\n      if (isAlreadyR) {\r\n        this.scores[roundMember._id].disabled.push('r');\r\n      }\r\n      const isAlreadyS = roundMember.namedScoresLine.find(\r\n        (score) => score.name === 's',\r\n      );\r\n      if (isAlreadyS) {\r\n        this.scores[roundMember._id].disabled.push('s');\r\n      }\r\n    });\r\n    this.initialScores = JSON.parse(JSON.stringify(this.scores));\r\n  }\r\n\r\n  checkOnTrippleZero(): void {\r\n    Object.keys(this.scores).forEach((key) => {\r\n      if (this.scores[key].barrel > 0) {\r\n        return;\r\n      }\r\n      if (this.scores[key].doubleZero && this.scores[key].value === 0) {\r\n        this.scores[key].value = -100;\r\n      }\r\n    });\r\n  }\r\n\r\n  checkOnBarrelTimes(): void {\r\n    Object.keys(this.scores).forEach((key) => {\r\n      if (\r\n        this.scores[key].barrel >= this.qtyOfPlayers ||\r\n        this.scores[key].barrel >= 3\r\n      ) {\r\n        let acc = 0;\r\n        this.roundMembers\r\n          .find((roundMember) => roundMember._id === key)\r\n          .namedScoresLine.map((namedScore: NamedScore) => {\r\n            acc = namedScore.value + acc;\r\n          });\r\n\r\n        if (acc + this.scores[key].value < 1000) {\r\n          this.scores[key].value = this.customRoundNumber(acc) - 100 - acc;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  checkOnFinishGame(): boolean {\r\n    let isFinishGame = false;\r\n    Object.keys(this.scores).forEach((key) => {\r\n      let acc = 0;\r\n      this.roundMembers\r\n        .find((roundMember) => roundMember._id === key)\r\n        .namedScoresLine.map((namedScore: NamedScore) => {\r\n          acc = namedScore.value + acc;\r\n        });\r\n      if (acc >= 1000) {\r\n        isFinishGame = true;\r\n      }\r\n    });\r\n    return isFinishGame;\r\n  }\r\n\r\n  checkGetOnBarrelOrWin(): void {\r\n    Object.keys(this.scores).forEach((key) => {\r\n      let acc = 0;\r\n      this.roundMembers\r\n        .find((roundMember) => roundMember._id === key)\r\n        .namedScoresLine.map((namedScore: NamedScore) => {\r\n          acc = namedScore.value + acc;\r\n        });\r\n      acc = acc + this.scores[key].value;\r\n      if (acc > 900 && acc < 1000 && !this.scores[key].barrel) {\r\n        this.scores[key].value = this.scores[key].value - (acc - 900);\r\n      }\r\n      if (acc >= 1000) {\r\n        this.scores[key].value = this.scores[key].value - (acc - 1000);\r\n      }\r\n    });\r\n  }\r\n\r\n  checkOnValueIsNumber() {\r\n    Object.keys(this.scores).forEach((key) => {\r\n      if (typeof this.scores[key].value !== 'number') {\r\n        this.scores[key].value = 0;\r\n      }\r\n    });\r\n  }\r\n\r\n  checkOnRoundedValue() {\r\n    Object.keys(this.scores).forEach((key) => {\r\n      if (!this.scores[key].barrel) {\r\n        this.scores[key].value = this.customRoundNumber(this.scores[key].value);\r\n      }\r\n    });\r\n  }\r\n\r\n  storeRoundScores(): void {\r\n    this.checkOnValueIsNumber();\r\n    this.checkOnTrippleZero();\r\n    this.checkOnBarrelTimes();\r\n    this.checkGetOnBarrelOrWin();\r\n    this.checkOnRoundedValue();\r\n    this.gamesService.storeRoundScores(this.scores);\r\n  }\r\n\r\n  private customRoundNumber(n: number): number {\r\n    const int = Math.floor(n);\r\n    return int % 10 <= 5 ? Math.floor(int / 10) * 10 : Math.ceil(int / 10) * 10;\r\n  }\r\n}\r\n","import { Component, Injector, Input, OnInit } from '@angular/core';\r\nimport { UID } from 'src/app/interfaces';\r\nimport { SharedService } from 'src/app/services/shared.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RoundCars, ROUND_COMPONENT } from '../../round-interfaces';\r\nimport { RoundScoresLineDirective } from '../../round.directive';\r\n\r\n@Component({\r\n  selector: 'app-round-cars',\r\n  templateUrl: './round-cars.component.html',\r\n  styleUrls: ['./round-cars.component.scss'],\r\n  providers: [\r\n    {\r\n      provide: ROUND_COMPONENT,\r\n      useExisting: RoundCarsComponent,\r\n    },\r\n  ],\r\n})\r\nexport class RoundCarsComponent extends RoundScoresLineDirective implements OnInit, RoundCars {\r\n  // @Input() playerId: UID;\r\n  // @Input() roundId: string;\r\n\r\n  carsScoresEnv = environment.games.train.carsScores;\r\n  constructor(injector: Injector) {\r\n    super(injector);\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  calcQtyOfArrItems(item: string | number) {\r\n    return this.sharedService.calcQtyOfArrItems(item, this.playerId, this.roundId);\r\n  }\r\n\r\n  // addToScoresLine(score: number): void {\r\n  //   this.sharedService.addToScoresLine(score, this.playerId, this.roundId);\r\n  // }\r\n\r\n  // removeFromScoresLine(score: number): void {\r\n  //   this.sharedService.removeFromScoresLine(score, this.playerId, this.roundId);\r\n  // }\r\n}\r\n","import { Component, Injector, Input, OnInit } from '@angular/core';\r\nimport { RoundMember, UID } from 'src/app/interfaces';\r\nimport { SharedService } from 'src/app/services/shared.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RoundLongest } from '../../round-interfaces';\r\nimport { ROUND_COMPONENT } from '../../round-interfaces';\r\nimport { RoundBaseDirective } from '../../round.directive';\r\n\r\n@Component({\r\n  selector: 'app-round-length',\r\n  templateUrl: './round-length.component.html',\r\n  styleUrls: ['./round-length.component.scss'],\r\n  providers: [\r\n    {\r\n      provide: ROUND_COMPONENT,\r\n      useExisting: RoundLengthComponent,\r\n    },\r\n  ],\r\n})\r\nexport class RoundLengthComponent extends RoundBaseDirective implements OnInit, RoundLongest {\r\n  // @Input() playerId: UID;\r\n  // @Input() roundId: string;\r\n\r\n  longestRouteScoreEnv = environment.games.train.longestRouteScore;\r\n  constructor(injector: Injector) {\r\n    super(injector);\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  // getMemberByPlayerId(): RoundMember {\r\n  //   return super.sharedService.getMemberByPlayerId(this.playerId, this.roundId);\r\n  // }\r\n\r\n  onMarkLongestHandler(e: any) {\r\n    const checked = e.target.checked;\r\n    if (checked) {\r\n      this.setScoresLine([this.longestRouteScoreEnv], this.playerId, this.roundId);\r\n    } else {\r\n      this.setScoresLine([], this.playerId, this.roundId);\r\n    }\r\n  }\r\n}\r\n","import { Component, Injector, Input, OnInit } from '@angular/core';\r\nimport { UID } from 'src/app/interfaces';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Inverse, RoundRoutes } from '../../round-interfaces';\r\nimport { RoundScoresLineDirective } from '../../round.directive';\r\nimport { ROUND_COMPONENT } from '../../round-interfaces';\r\n\r\n@Component({\r\n  selector: 'app-round-routes',\r\n  templateUrl: './round-routes.component.html',\r\n  styleUrls: ['./round-routes.component.scss'],\r\n  providers: [\r\n    {\r\n      provide: ROUND_COMPONENT,\r\n      useExisting: RoundRoutesComponent,\r\n    },\r\n  ],\r\n})\r\nexport class RoundRoutesComponent\r\n  extends RoundScoresLineDirective\r\n  implements OnInit, RoundRoutes\r\n{\r\n  // @Input() playerId: UID;\r\n  // @Input() roundId: string;\r\n\r\n  routesScoresEnv = environment.games.train.routesScores;\r\n  inverse: Inverse = 1;\r\n  numberFn = Number;\r\n\r\n  constructor(injector: Injector) {\r\n    super(injector);\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  inverseScore() {\r\n    this.inverse = (this.inverse * -1) as Inverse;\r\n  }\r\n}\r\n","import { Component, Injector, Input, OnInit } from '@angular/core';\r\nimport { RoundMember, UID } from 'src/app/interfaces';\r\nimport { SharedService } from 'src/app/services/shared.service';\r\nimport { ROUND_COMPONENT } from '../../round-interfaces';\r\nimport { RoundBaseDirective } from '../../round.directive';\r\n\r\n@Component({\r\n  selector: 'app-round-stations',\r\n  templateUrl: './round-stations.component.html',\r\n  styleUrls: ['./round-stations.component.scss'],\r\n  providers: [\r\n    {\r\n      provide: ROUND_COMPONENT,\r\n      useExisting: RoundStationsComponent,\r\n    },\r\n  ],\r\n})\r\nexport class RoundStationsComponent extends RoundBaseDirective implements OnInit {\r\n  // @Input() playerId: UID;\r\n  // @Input() roundId: string;\r\n\r\n  constructor(injector: Injector) {\r\n    super(injector);\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  calcScores(): number {\r\n    return this.getMemberByPlayerId().scoresLine.reduce((prev, cur) => prev + cur, 0);\r\n  }\r\n}\r\n","import { Component, Injector, OnInit } from '@angular/core';\r\nimport { NamedScore } from 'src/app/interfaces';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ROUND_COMPONENT } from '../../round-interfaces';\r\nimport { RoundBaseDirective, RoundScoresLineDirective } from '../../round.directive';\r\n\r\n@Component({\r\n  selector: 'app-round-uno',\r\n  templateUrl: './round-uno.component.html',\r\n  styleUrls: ['./round-uno.component.scss'],\r\n  providers: [\r\n    {\r\n      provide: ROUND_COMPONENT,\r\n      useExisting: RoundUnoComponent,\r\n    },\r\n  ],\r\n})\r\nexport class RoundUnoComponent extends RoundScoresLineDirective implements OnInit {\r\n  namedScoresEnv = environment.games.uno.namedScores;\r\n  namedScoreLine: NamedScore[] = [];\r\n\r\n  constructor(injector: Injector) {\r\n    super(injector);\r\n  }\r\n\r\n  ngOnInit() {}\r\n}\r\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ``, \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ``, \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ``, \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ``, \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ``, \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ``, \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ``, \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ``, \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ``, \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ``, \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ``, \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ``, \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ``, \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ``, \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n"],"names":["Injectable","Store","ModalService","ActionConfirmComponent","fromAppActions","DeactivateRouteGuard","_class","constructor","modalService","store","canDeactivate","component","currentRoute","currentState","nextState","data","title","text","cancelBtnText","confirmBtnText","presentModal","then","role","dispatch","clearGame","Promise","resolve","__decorate","providedIn","NgModule","RouterModule","GamePage","routes","path","GamePageRoutingModule","imports","forChild","exports","CommonModule","FormsModule","IonicModule","TranslateModule","RoundModule","GamersModule","GameResultComponent","SharedModule","GamePageModule","extend","declarations","Component","ViewChild","combineLatest","ReplaySubject","environment","fromAppReducer","fromRoundsReducer","fromPlayersReducer","fromRoundMembersReducer","switchMap","SharedService","ActivatedRoute","IonModal","sharedService","route","showToolbarMenu","activeRoundId$","activePlayerId$","ngOnInit","loading$","select","selectLoading","gameType$","selectGameType","rounds$","selectAllRounds","subscribe","gameType","rounds","_environment$games$ga","_environment$games$ga2","console","log","games","roundsCfg","nextRound","length","next","_id","namePostfix","roundMembers$","selectAllRoundMembers","players$","selectAllPlayers","players","pipe","roundMembers","playersWithTotal","map","player","totalScore","getPlayerTotalScores","sort","a","b","activePlayerId","params","finishGameDisabled","countZeros","forEach","onMenuClickHandler","e","target","value","onFinishGameHandler","_this","_asyncToGenerator","finishGame","onCancelGameHandler","_this2","openNextRound","selectPlayer","playerId","args","selector","template","__NG_CLI_RESOURCE__0","TranslateService","GamerService","AlertController","PopoverController","SelectColorComponent","CreateGamerComponent","fromPlayerReducer","fromPlayerActions","ChoosePlayersComponent","translate","gamerService","popoverController","alertController","gamers","filtredGamers","playersColors","filtredColors","filter","gamers$","entities$","startGameHandler","createRounds","presentPopover","event","popover","create","cssClass","componentProps","translucent","present","onDidDismiss","showSelectColorPopup","index","colors","color","chooseColorHandler","showCreateGamerPopup","_this3","gamer","createGamerHandler","_this$playersColors","idx","choosePlayerHandler","preferredColor","includes","loadPlayers","removePlayerHandler","deletePlayer","id","removeAllPlayersHandler","clearPlayers","addPlayerHandler","firstEl","candidate","addPlayer","add","result","train","dismiss","onCreate","name","Input","onSelect","first","selectByIdRoundMember","fromRoundMembersActions","TelegramService","GamesService","telegramService","storeRoundScores","scores","updates","key","hasOwnProperty","roundMember","namedScore","push","changes","namedScoresLine","scoresLine","updateRoundMembers","addToNamedScoresLine","roundId","getMemberByPlayerId","updateRoundMember","addToScoresLine","score","removeFromNamedScoresLine","findIndex","ns","splice","removeFromScoresLine","indexOf","setScoresLine","InjectionToken","ROUND_COMPONENT","ContentChild","RoundTWrapperComponent","getRoundById","calcScores","_this$getMemberByPlay","reduce","prev","cur","getPlayerColor","getPlayerName","static","RoundWrapperComponent","RoundComponent","Directive","Injector","Actions","RoundBaseDirective","injector","get","gamesService","actions$","RoundScoresLineDirective","_class2","RoundTBaseDirective","_class3","RoundRoutesComponent","RoundLengthComponent","RoundStationsComponent","RoundCarsComponent","RoundUnoComponent","RoundThousandComponent","RoundRummyComponent","RoundRummyComponent_1","namedScoresEnv","rummy","namedScores","namedScoreLine","providers","provide","useExisting","ofType","RoundThousandComponent_1","initialScores","isFinished","ngOnDestroy","sub","unsubscribe","qtyOfPlayers","checkOnFinishGame","messages","addTotals","total","lastScores","sendMessagesThousandRoundDto","_","resetScores","acc","changeScoresState","roundMemberId","option","barrel","roundScoresOption","disabled","JSON","parse","stringify","Object","keys","activeRoundMemberPosition","i","activeRoundMemberId","doubleZero","isDoubleZero","isAlreadyR","find","isAlreadyS","checkOnTrippleZero","checkOnBarrelTimes","customRoundNumber","isFinishGame","checkGetOnBarrelOrWin","checkOnValueIsNumber","checkOnRoundedValue","n","int","Math","floor","ceil","RoundCarsComponent_1","carsScoresEnv","carsScores","calcQtyOfArrItems","item","RoundLengthComponent_1","longestRouteScoreEnv","longestRouteScore","onMarkLongestHandler","checked","RoundRoutesComponent_1","routesScoresEnv","routesScores","inverse","numberFn","Number","inverseScore","RoundStationsComponent_1","RoundUnoComponent_1","uno"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}