{"version":3,"file":"src_app_modules_auth_error-log_error-log_module_ts.js","mappings":"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","sources":["./src/app/interfaces.ts","./src/app/modules/auth/error-log/error-details/error-details.component.ts","./src/app/modules/auth/error-log/error-log-routing.module.ts","./src/app/modules/auth/error-log/error-log.component.ts","./src/app/modules/auth/error-log/error-log.module.ts","./src/app/modules/auth/error-log/error-details/error-details.component.html","./src/app/modules/auth/error-log/error-log.component.html"],"sourcesContent":["import { environment } from '../environments/environment';\r\n\r\ntype UserRoles = 'member' | 'admin' | 'guest';\r\nexport type UID = string;\r\nexport type UUID = string;\r\nexport type RoundMemberUUID = string;\r\nexport type Colors = 'red' | 'green' | 'blue' | 'black' | 'yellow';\r\nexport type GameType = keyof typeof environment.games;\r\n\r\nexport interface IUser {\r\n  _id?: UID;\r\n  name: string;\r\n  password: string;\r\n  role?: UserRoles;\r\n  createdAt?: string;\r\n  updatedAt?: string;\r\n}\r\n\r\nexport interface IGamer {\r\n  _id?: UID;\r\n  owner?: UID;\r\n  name: string;\r\n  // uniqueName?: string;\r\n  rating?: any;\r\n  color: Colors;\r\n  telegramCheckCode: string;\r\n  telegramSubscriptionName: string;\r\n  // telegramIds?: string[];\r\n  // createdAt?: string;\r\n  // updatedAt?: string;\r\n}\r\n\r\nexport type IGamerTotal = IGamer & { totalScore: number };\r\n\r\nexport interface PlayersResult {\r\n  _id: UID;\r\n  score: number;\r\n}\r\n\r\nexport interface IGame {\r\n  _id?: UID;\r\n  type: GameType;\r\n  owner?: UID;\r\n  rounds: {\r\n    _id?: UID;\r\n    players: PlayersResult[];\r\n  }[];\r\n  createdAt?: string;\r\n  updatedAt?: string;\r\n}\r\n\r\nexport type ClientGame = Pick<IGame, '_id' | 'type'>;\r\n\r\nexport interface Round {\r\n  _id: string;\r\n  roundMembers: RoundMemberUUID[]; // RoundMember\r\n  clientGame?: ClientGame;\r\n  icon?: string;\r\n  name: string;\r\n  namePostfix: string;\r\n}\r\n\r\nexport interface RoundWithTotal {\r\n  _id: string;\r\n  players: PlayersResult[];\r\n}\r\n\r\nexport interface ResultRoundWithTotal extends RoundWithTotal {\r\n  _id: 'result';\r\n}\r\n\r\nexport interface RoundMember {\r\n  _id: RoundMemberUUID;\r\n  player: UID;\r\n  scoresLine: number[];\r\n  namedScoresLine?: NamedScore[];\r\n}\r\n\r\nexport interface MessageDto<T> {\r\n  playerId: UID;\r\n  gameType: GameType;\r\n  data: T;\r\n}\r\n\r\nexport interface MessageThousandRound {\r\n  lastScores: Pick<NamedScore, 'value' | 'name' | 'total'>;\r\n}\r\n\r\nexport interface MessageFinishGame {\r\n  score: string;\r\n}\r\n\r\nexport interface RoundCfg {\r\n  _id: string;\r\n  icon: string;\r\n  namePostfix: string;\r\n  initialScoresLine: number[];\r\n  initialNamedScoresLine?: NamedScore[];\r\n}\r\n\r\nexport type PersistStore = {\r\n  _id: GameType;\r\n  players: IGamer[];\r\n};\r\n\r\nexport interface NamedScore {\r\n  name: string;\r\n  value: number;\r\n  picture?: string;\r\n  total?: number;\r\n}\r\n\r\nexport type RoundScoresNameType = 'r' | 's' | 'score';\r\nexport type RoundScoresOptionsType = 'r' | 's';\r\nexport type RoundScoresDisabledType = RoundScoresOptionsType[];\r\nexport type RoundScoresType = {\r\n  [key: RoundMemberUUID]: {\r\n    name: RoundScoresNameType;\r\n    value: number;\r\n    disabled: RoundScoresDisabledType;\r\n    doubleZero: boolean;\r\n    barrel: number;\r\n  };\r\n};\r\n\r\nexport interface RoundScores {\r\n  [key: RoundMemberUUID]: number | string; // TODO: only number\r\n}\r\n\r\nexport interface GameActionConfirmModalData {\r\n  title: string;\r\n  text: string;\r\n  cancelBtnText: string;\r\n  confirmBtnText: string;\r\n}\r\n\r\nexport interface GameResultModalData {\r\n  results: PlayersResult[];\r\n  order: 1 | -1;\r\n}\r\n\r\nexport interface CanDeactivateComponent {\r\n  canDeactivate(): boolean;\r\n}\r\n\r\n// global\r\n\r\nexport const errors = [\r\n  'unknownError',\r\n  'analytics/error',\r\n  'auth/error',\r\n  'app/error',\r\n  'ngrxDataError',\r\n] as const;\r\n\r\n// export type ErrorTypes = typeof errors[number];\r\n\r\nexport type ErrorTypes = typeof errors[number];\r\n\r\n// global\r\nexport interface ErrorBody {\r\n  error: any;\r\n}\r\n\r\n// global\r\nexport interface ErrorType {\r\n  errorType: ErrorTypes;\r\n}\r\n\r\n// global\r\nexport interface Owner {\r\n  owner: string;\r\n}\r\n\r\n// global\r\nexport interface OwnerData {\r\n  owner: string;\r\n  name: string;\r\n}\r\n\r\n// global\r\nexport interface ErrorMessage {\r\n  message: string;\r\n}\r\n\r\nexport interface IErrorData extends ErrorBody, ErrorType {}\r\n","import { AfterViewInit, Component, Input, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { ErrorLoggerDocumentDto } from 'src/app/dtos';\n\n@Component({\n  selector: 'app-error-details',\n  templateUrl: './error-details.component.html',\n  styleUrls: ['./error-details.component.scss'],\n})\nexport class ErrorDetailsComponent implements OnInit, AfterViewInit {\n  @Input() error: ErrorLoggerDocumentDto;\n  constructor(private modalController: ModalController) {}\n\n  ngAfterViewInit(): void {\n    console.log('ngAfterViewInit', this.error);\n  }\n\n  ngOnInit() {\n    console.log('ngOnInit', this.error);\n  }\n\n  cancel() {\n    this.modalController.dismiss(null, 'cancel');\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ErrorLogComponent } from './error-log.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ErrorLogComponent,\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: '',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ErrorLogRoutingModule {}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { InfiniteScrollCustomEvent, IonModal } from '@ionic/angular';\nimport { Store } from '@ngrx/store';\nimport {\n  BehaviorSubject,\n  combineLatest,\n  Observable,\n  of,\n  ReplaySubject,\n  Subject,\n} from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { selectUser } from 'src/app/store/reducers/auth.reducer';\nimport {\n  ErrorLoggerDocumentDto,\n  ErrorLogQueryDto,\n  OwnerDataDto,\n  OwnerQueryDto,\n} from 'src/app/dtos';\nimport { errors, ErrorTypes, IUser, OwnerData } from 'src/app/interfaces';\nimport { ModalService } from 'src/app/services/modal.service';\nimport { selectAllErrorLogs } from 'src/app/store/reducers/error-log.reducer';\nimport * as fromErrorLogActions from '../../../store/actions/error-log.actions';\nimport { SelectWithSearchComponent } from '../../common/select-with-search/select-with-search.component';\nimport { SelectWithSearchItem } from '../../common/select-with-search/select-with-search.interface';\nimport { ErrorDetailsComponent } from './error-details/error-details.component';\nimport { ErrorLogService } from './error-log.service';\n\n@Component({\n  selector: 'app-error-log',\n  templateUrl: './error-log.component.html',\n  styleUrls: ['./error-log.component.scss'],\n})\nexport class ErrorLogComponent implements OnInit {\n  @ViewChild('modal', { static: true }) modal!: IonModal;\n  loadedErrorsWithQuery$: Observable<ErrorLoggerDocumentDto[]>;\n  user$: Observable<IUser>;\n  allErrors: ErrorLoggerDocumentDto[] = [];\n  errorTypes = ['all', ...errors];\n  allOwners: OwnerDataDto;\n  ownersQuery: OwnerQueryDto;\n  selectedOwner: OwnerData;\n  errorsQuery: ErrorLogQueryDto;\n  getOwnersWithQuery$: ReplaySubject<OwnerQueryDto>;\n  newOwnersSearch = true;\n  newErrorsSearch = true;\n\n  constructor(\n    private store: Store,\n    private errorLogService: ErrorLogService,\n    private modalService: ModalService,\n  ) {}\n\n  ngOnInit() {\n    this.errorsQuery = { skip: 0, limit: 20 };\n    this.ownersQuery = { name: '', skip: 0, limit: 20 };\n    this.allOwners = { data: [], totalDocuments: 0 };\n\n    this.loadedErrorsWithQuery$ = this.store.select(selectAllErrorLogs);\n\n    this.loadedErrorsWithQuery$.subscribe((loadedErrorsWithQuery) => {\n      if (this.newErrorsSearch) {\n        return (this.allErrors = loadedErrorsWithQuery);\n      }\n      return this.allErrors.push(...loadedErrorsWithQuery);\n    });\n    this.user$ = this.store.select(selectUser);\n\n    this.getOwnersWithQuery$ = new ReplaySubject(1);\n    // this.getOwnersWithQuery$ = new ReplaySubject(this.ownersQuery);\n\n    this.getOwnersWithQuery$\n      .pipe(\n        switchMap((ownersQuery) => this.errorLogService.getOwnersWithQuery(ownersQuery)),\n      )\n      .subscribe((loadedOwners) => {\n        if (this.newOwnersSearch) {\n          return (this.allOwners = loadedOwners);\n        }\n        return (this.allOwners = {\n          totalDocuments: loadedOwners.totalDocuments,\n          data: [...this.allOwners.data, ...loadedOwners.data],\n        });\n      });\n\n    this.user$.subscribe((user) => {\n      this.errorsQuery = { ...this.errorsQuery, owner: user._id };\n      this.getErrorsWithQuery();\n    });\n  }\n\n  errorDetails(error: ErrorLoggerDocumentDto) {\n    this.modalService.presentModal(ErrorDetailsComponent, { error });\n  }\n\n  onSelectErrorType(event: any) {\n    if (event.target.value === 'all') {\n      const { errorType, ...rest } = this.errorsQuery;\n      this.errorsQuery = rest;\n    } else {\n      this.errorsQuery = {\n        ...this.errorsQuery,\n        errorType: event.target.value,\n      };\n    }\n    this.newErrorsSearch = true;\n    this.getErrorsWithQuery();\n  }\n\n  convertOwnersToItems(owners: OwnerDataDto): SelectWithSearchItem[] {\n    return owners.data.map(({ name, owner }) => ({ name, data: owner }));\n  }\n\n  convertItemToOwner(item: SelectWithSearchItem): OwnerData {\n    const { name, data } = item;\n    return { name, owner: data };\n  }\n\n  onSelectOwner(item: SelectWithSearchItem): void {\n    this.selectedOwner = this.convertItemToOwner(item);\n    this.errorsQuery = { ...this.errorsQuery, owner: this.selectedOwner.owner };\n    this.newErrorsSearch = true;\n    this.getErrorsWithQuery();\n    this.modal.dismiss();\n  }\n\n  onIonInfinite(event: any) {\n    this.newErrorsSearch = false;\n    this.getErrorsWithQuery(this.allErrors.length);\n    (event as InfiniteScrollCustomEvent).target.complete();\n  }\n\n  onIonInfiniteSelectwithSearch(event: any) {\n    this.newOwnersSearch = false;\n    this.getOwnersWithQuery(this.allOwners.data.length);\n  }\n\n  searchOwnersWithQuery(name: string) {\n    this.ownersQuery = { ...this.ownersQuery, name };\n    this.newOwnersSearch = true;\n    this.getOwnersWithQuery();\n  }\n\n  private getOwnersWithQuery(skip = 0): void {\n    this.ownersQuery = { ...this.ownersQuery, skip };\n    this.getOwnersWithQuery$.next(this.ownersQuery);\n  }\n\n  private getErrorsWithQuery(skip = 0): void {\n    this.errorsQuery = { ...this.errorsQuery, skip };\n    this.store.dispatch(fromErrorLogActions.getWithQuery({ query: this.errorsQuery }));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { ErrorLogRoutingModule } from './error-log-routing.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ErrorLogComponent } from './error-log.component';\nimport { SharedModule } from '../../common/shared.module';\nimport { ErrorDetailsComponent } from './error-details/error-details.component';\n\n@NgModule({\n  declarations: [ErrorLogComponent, ErrorDetailsComponent],\n  imports: [\n    CommonModule,\n    IonicModule,\n    ErrorLogRoutingModule,\n    TranslateModule.forChild({\n      extend: true,\n    }),\n    SharedModule,\n  ],\n})\nexport class ErrorLogModule {}\n","export default \"<div class=\\\"ion-page\\\">\\n  <ion-header>\\n    <ion-toolbar>\\n      <ion-buttons slot=\\\"end\\\">\\n        <ion-button (click)=\\\"cancel()\\\">Cancel</ion-button>\\n      </ion-buttons>\\n      <ion-title>Error details</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n  <ion-content class=\\\"ion-padding\\\">\\n    <ion-item *ngFor=\\\"let pair of error | keyvalue\\\">\\n      <ion-label *ngIf=\\\"pair.key === 'error'\\\" class=\\\"ion-text-wrap\\\">\\n        <h2>{{ pair.key }}</h2>\\n        <p>{{ pair.value | json }}</p>\\n      </ion-label>\\n      <ion-label *ngIf=\\\"pair.key !== 'error'\\\">\\n        <h2>{{ pair.key }}</h2>\\n        <p>{{ pair.value }}</p>\\n      </ion-label>\\n    </ion-item>\\n  </ion-content>\\n</div>\\n\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>{{ 'modules.profile.errorLog' | translate }}</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-menu-button menu=\\\"profile-menu\\\"></ion-menu-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <ion-grid class=\\\"ion-no-margin ion-no-padding\\\">\\n    <ion-row>\\n      <ion-col\\n        size-lg=\\\"6\\\"\\n        size-md=\\\"8\\\"\\n        size-sm=\\\"10\\\"\\n        offset-lg=\\\"3\\\"\\n        offset-md=\\\"2\\\"\\n        offset-sm=\\\"1\\\"\\n      >\\n        <ion-card>\\n          <ion-card-header>\\n            <ion-card-title class=\\\"ion-text-center\\\">{{\\n              'modules.profile.errorLogTitle' | translate\\n            }}</ion-card-title>\\n            <ion-card-subtitle class=\\\"ion-text-center\\\">{{\\n              'modules.profile.errorLogDescription' | translate\\n            }}</ion-card-subtitle>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <ion-list>\\n              <ion-item>\\n                <ion-label>Select error type</ion-label>\\n                <ion-select\\n                  interface=\\\"popover\\\"\\n                  placeholder=\\\"Select error type\\\"\\n                  (ionChange)=\\\"onSelectErrorType($event)\\\"\\n                  [value]=\\\"errorTypes[0]\\\"\\n                >\\n                  <ion-select-option\\n                    *ngFor=\\\"let error of errorTypes\\\"\\n                    [value]=\\\"error\\\"\\n                    slot=\\\"end\\\"\\n                    >{{ error }}</ion-select-option\\n                  >\\n                </ion-select>\\n              </ion-item>\\n              <ion-item button=\\\"true\\\" detail=\\\"true\\\" id=\\\"select-owners\\\">\\n                <ion-label>Select user</ion-label>\\n                <div slot=\\\"end\\\">{{ selectedOwner?.name || (user$ | async).name || 'all' }}</div>\\n              </ion-item>\\n            </ion-list>\\n\\n            <ion-list>\\n              <ion-item\\n                *ngFor=\\\"let item of allErrors; let i = index\\\"\\n                button\\n                detail=\\\"true\\\"\\n                (click)=\\\"errorDetails(item)\\\"\\n              >\\n                <ion-label>\\n                  {{ i + '. ' + item.createdAt + ' ' + item.message }}</ion-label\\n                >\\n              </ion-item>\\n            </ion-list>\\n            <ion-infinite-scroll (ionInfinite)=\\\"onIonInfinite($event)\\\">\\n              <ion-infinite-scroll-content></ion-infinite-scroll-content>\\n            </ion-infinite-scroll>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n<ion-modal trigger=\\\"select-owners\\\" #modal>\\n  <ng-template>\\n    <app-select-with-search\\n      class=\\\"ion-page\\\"\\n      title=\\\"Select user\\\"\\n      [items]=\\\"convertOwnersToItems(allOwners)\\\"\\n      [totalItems]=\\\"allOwners.totalDocuments\\\"\\n      (searchQuery)=\\\"searchOwnersWithQuery($event)\\\"\\n      (selectionChange)=\\\"onSelectOwner($event)\\\"\\n      (selectionCancel)=\\\"modal.dismiss()\\\"\\n      (ionInfinite)=\\\"onIonInfiniteSelectwithSearch($event)\\\"\\n    ></app-select-with-search>\\n  </ng-template>\\n</ion-modal>\\n\";"],"names":[],"sourceRoot":"webpack:///"}