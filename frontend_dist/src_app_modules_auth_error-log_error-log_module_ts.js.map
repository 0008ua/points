{"version":3,"file":"src_app_modules_auth_error-log_error-log_module_ts.js","mappings":";;;;;;;;;;;;;;;;AAAmD;AACX;AACiB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACe;AACf,EAAE,sEAAY;AACd,aAAa,4DAAM;AACnB,eAAe,mEAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AClCmD;AACX;AACiB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACe;AACf,EAAE,sEAAY;AACd,aAAa,4DAAM;AACnB,eAAe,mEAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC5DwD;AACd;AACI;AACN;AACiB;AACN;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACe;AACf,EAAE,sEAAY;AACd,mBAAmB,6EAAO;AAC1B,+BAA+B,mEAAS;AACxC,iCAAiC,mEAAS;AAC1C,+BAA+B,mEAAS;AACxC,6BAA6B,mEAAS;AACtC,+BAA+B,mEAAS;AACxC,mCAAmC,mEAAS;AAC5C,mCAAmC,mEAAS;;AAE5C;AACA,aAAa,4DAAM;AACnB,yCAAyC,+DAAS;;AAElD;AACA,qCAAqC,6DAAO;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACrE0C;AACe;AACN;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACe;AACf,EAAE,sEAAY;AACd,eAAe,mEAAS;AACxB,SAAS,6DAAO;AAChB;;;;;;;;;;;;;;;;;ACzBmD;AACL;AACW;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACe;AACf,EAAE,sEAAY;AACd,eAAe,mEAAS;AACxB,SAAS,+DAAS;AAClB;;;;;;;;;;;;;;;;;;;ACzBwD;AACd;AACI;AACW;AACN;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACe;AACf,EAAE,sEAAY;AACd,mBAAmB,6EAAO;AAC1B,+BAA+B,mEAAS;AACxC,iCAAiC,mEAAS;AAC1C,+BAA+B,mEAAS;AACxC,6BAA6B,mEAAS;AACtC,+BAA+B,mEAAS;AACxC,mCAAmC,mEAAS;AAC5C,mCAAmC,mEAAS;;AAE5C;AACA,0BAA0B,+DAAS;;AAEnC;AACA,wBAAwB,6DAAO;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC8EA,SAAS;AAEF,MAAM,MAAM,GAAG;IACpB,cAAc;IACd,iBAAiB;IACjB,YAAY;IACZ,WAAW;IACX,eAAe;CACP,CAAC;;;;;;;;;;;;;;;;;;;;;;;ACzJ6D;AACvB;I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","sources":["./node_modules/date-fns/esm/addDays/index.js","./node_modules/date-fns/esm/addMonths/index.js","./node_modules/date-fns/esm/add/index.js","./node_modules/date-fns/esm/subDays/index.js","./node_modules/date-fns/esm/subMonths/index.js","./node_modules/date-fns/esm/sub/index.js","./src/app/interfaces.ts","./src/app/modules/auth/error-log/error-details/error-details.component.ts","./src/app/modules/auth/error-log/error-log-routing.module.ts","./src/app/modules/auth/error-log/error-log.component.ts","./src/app/modules/auth/error-log/error-log.module.ts","./src/app/modules/auth/error-log/error-details/error-details.component.html","./src/app/modules/auth/error-log/error-log.component.html"],"sourcesContent":["import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} - the new date with the days added\n * @throws {TypeError} - 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\nexport default function addMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n  var dayOfMonth = date.getDate();\n\n  // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n  var endOfDesiredMonth = new Date(date.getTime());\n  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);\n  var daysInMonth = endOfDesiredMonth.getDate();\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);\n    return date;\n  }\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport addDays from \"../addDays/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name add\n * @category Common Helpers\n * @summary Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @description\n * Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n *\n * | Key            | Description                        |\n * |----------------|------------------------------------|\n * | years          | Amount of years to be added        |\n * | months         | Amount of months to be added       |\n * | weeks          | Amount of weeks to be added        |\n * | days           | Amount of days to be added         |\n * | hours          | Amount of hours to be added        |\n * | minutes        | Amount of minutes to be added      |\n * | seconds        | Amount of seconds to be added      |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add the following duration to 1 September 2014, 10:19:50\n * const result = add(new Date(2014, 8, 1, 10, 19, 50), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30,\n * })\n * //=> Thu Jun 15 2017 15:29:20\n */\nexport default function add(dirtyDate, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || _typeof(duration) !== 'object') return new Date(NaN);\n  var years = duration.years ? toInteger(duration.years) : 0;\n  var months = duration.months ? toInteger(duration.months) : 0;\n  var weeks = duration.weeks ? toInteger(duration.weeks) : 0;\n  var days = duration.days ? toInteger(duration.days) : 0;\n  var hours = duration.hours ? toInteger(duration.hours) : 0;\n  var minutes = duration.minutes ? toInteger(duration.minutes) : 0;\n  var seconds = duration.seconds ? toInteger(duration.seconds) : 0;\n\n  // Add years and months\n  var date = toDate(dirtyDate);\n  var dateWithMonths = months || years ? addMonths(date, months + years * 12) : date;\n\n  // Add weeks and days\n  var dateWithDays = days || weeks ? addDays(dateWithMonths, days + weeks * 7) : dateWithMonths;\n\n  // Add days, hours, minutes and seconds\n  var minutesToAdd = minutes + hours * 60;\n  var secondsToAdd = seconds + minutesToAdd * 60;\n  var msToAdd = secondsToAdd * 1000;\n  var finalDate = new Date(dateWithDays.getTime() + msToAdd);\n  return finalDate;\n}","import addDays from \"../addDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name subDays\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the days subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * const result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\nexport default function subDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addDays(dirtyDate, -amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * const result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport default function subMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, -amount);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport subDays from \"../subDays/index.js\";\nimport subMonths from \"../subMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name sub\n * @category Common Helpers\n * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @description\n * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be subtracted\n *\n * | Key     | Description                        |\n * |---------|------------------------------------|\n * | years   | Amount of years to be subtracted   |\n * | months  | Amount of months to be subtracted  |\n * | weeks   | Amount of weeks to be subtracted   |\n * | days    | Amount of days to be subtracted    |\n * | hours   | Amount of hours to be subtracted   |\n * | minutes | Amount of minutes to be subtracted |\n * | seconds | Amount of seconds to be subtracted |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract the following duration from 15 June 2017 15:29:20\n * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30\n * })\n * //=> Mon Sep 1 2014 10:19:50\n */\nexport default function sub(date, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || _typeof(duration) !== 'object') return new Date(NaN);\n  var years = duration.years ? toInteger(duration.years) : 0;\n  var months = duration.months ? toInteger(duration.months) : 0;\n  var weeks = duration.weeks ? toInteger(duration.weeks) : 0;\n  var days = duration.days ? toInteger(duration.days) : 0;\n  var hours = duration.hours ? toInteger(duration.hours) : 0;\n  var minutes = duration.minutes ? toInteger(duration.minutes) : 0;\n  var seconds = duration.seconds ? toInteger(duration.seconds) : 0;\n\n  // Subtract years and months\n  var dateWithoutMonths = subMonths(date, months + years * 12);\n\n  // Subtract weeks and days\n  var dateWithoutDays = subDays(dateWithoutMonths, days + weeks * 7);\n\n  // Subtract hours, minutes and seconds\n  var minutestoSub = minutes + hours * 60;\n  var secondstoSub = seconds + minutestoSub * 60;\n  var mstoSub = secondstoSub * 1000;\n  var finalDate = new Date(dateWithoutDays.getTime() - mstoSub);\n  return finalDate;\n}","import { environment } from '../environments/environment';\r\n\r\ntype UserRoles = 'member' | 'admin' | 'guest';\r\nexport type UID = string;\r\nexport type UUID = string;\r\nexport type RoundMemberUUID = string;\r\nexport type Colors = 'red' | 'green' | 'blue' | 'black' | 'yellow';\r\nexport type GameType = keyof typeof environment.games;\r\n\r\nexport interface IUser {\r\n  _id?: UID;\r\n  name: string;\r\n  password: string;\r\n  role?: UserRoles;\r\n  createdAt?: string;\r\n  updatedAt?: string;\r\n}\r\n\r\nexport interface IGamer {\r\n  _id?: UID;\r\n  owner?: UID;\r\n  name: string;\r\n  // uniqueName?: string;\r\n  rating?: any;\r\n  color: Colors;\r\n  telegramCheckCode: string;\r\n  telegramSubscriptionName: string;\r\n  // telegramIds?: string[];\r\n  // createdAt?: string;\r\n  // updatedAt?: string;\r\n}\r\n\r\nexport type IGamerTotal = IGamer & { totalScore: number };\r\n\r\nexport interface PlayersResult {\r\n  _id: UID;\r\n  score: number;\r\n}\r\n\r\nexport interface IGame {\r\n  _id?: UID;\r\n  type: GameType;\r\n  owner?: UID;\r\n  rounds: {\r\n    _id?: UID;\r\n    players: PlayersResult[];\r\n  }[];\r\n  createdAt?: string;\r\n  updatedAt?: string;\r\n}\r\n\r\nexport type ClientGame = Pick<IGame, '_id' | 'type'>;\r\n\r\nexport interface Round {\r\n  _id: string;\r\n  roundMembers: RoundMemberUUID[]; // RoundMember\r\n  clientGame?: ClientGame;\r\n  icon?: string;\r\n  name: string;\r\n  namePostfix: string;\r\n}\r\n\r\nexport interface RoundWithTotal {\r\n  _id: string;\r\n  players: PlayersResult[];\r\n}\r\n\r\nexport interface ResultRoundWithTotal extends RoundWithTotal {\r\n  _id: 'result';\r\n}\r\n\r\nexport interface RoundMember {\r\n  _id: RoundMemberUUID;\r\n  player: UID;\r\n  scoresLine: number[];\r\n  namedScoresLine?: NamedScore[];\r\n}\r\n\r\nexport interface MessageDto<T> {\r\n  playerId: UID;\r\n  gameType: GameType;\r\n  data: T;\r\n}\r\n\r\nexport interface MessageThousandRound {\r\n  lastScores: Pick<NamedScore, 'value' | 'name' | 'total'>;\r\n}\r\n\r\nexport interface MessageFinishGame {\r\n  score: string;\r\n}\r\n\r\nexport interface RoundCfg {\r\n  _id: string;\r\n  icon: string;\r\n  namePostfix: string;\r\n  initialScoresLine: number[];\r\n  initialNamedScoresLine?: NamedScore[];\r\n}\r\n\r\nexport type PersistStore = {\r\n  _id: GameType;\r\n  players: IGamer[];\r\n};\r\n\r\nexport interface NamedScore {\r\n  name: string;\r\n  value: number;\r\n  picture?: string;\r\n  total?: number;\r\n}\r\n\r\nexport type RoundScoresNameType = 'r' | 's' | 'score';\r\nexport type RoundScoresOptionsType = 'r' | 's';\r\nexport type RoundScoresDisabledType = RoundScoresOptionsType[];\r\nexport type RoundScoresType = {\r\n  [key: RoundMemberUUID]: {\r\n    name: RoundScoresNameType;\r\n    value: number;\r\n    disabled: RoundScoresDisabledType;\r\n    doubleZero: boolean;\r\n    barrel: number;\r\n  };\r\n};\r\n\r\nexport interface RoundScores {\r\n  [key: RoundMemberUUID]: number | string; // TODO: only number\r\n}\r\n\r\nexport interface GameActionConfirmModalData {\r\n  title: string;\r\n  text: string;\r\n  cancelBtnText: string;\r\n  confirmBtnText: string;\r\n}\r\n\r\nexport interface GameResultModalData {\r\n  results: PlayersResult[];\r\n  order: 1 | -1;\r\n}\r\n\r\nexport interface CanDeactivateComponent {\r\n  canDeactivate(): boolean;\r\n}\r\n\r\n// global\r\n\r\nexport const errors = [\r\n  'unknownError',\r\n  'analytics/error',\r\n  'auth/error',\r\n  'app/error',\r\n  'ngrxDataError',\r\n] as const;\r\n\r\n// export type ErrorTypes = typeof errors[number];\r\n\r\nexport type ErrorTypes = typeof errors[number];\r\n\r\n// global\r\nexport interface ErrorBody {\r\n  error: any;\r\n}\r\n\r\n// global\r\nexport interface ErrorType {\r\n  errorType: ErrorTypes;\r\n}\r\n\r\n// global\r\nexport interface Owner {\r\n  owner: string;\r\n}\r\n\r\n// global\r\nexport interface OwnerData {\r\n  owner: string;\r\n  name: string;\r\n}\r\n\r\n// global\r\nexport interface ErrorMessage {\r\n  message: string;\r\n}\r\n\r\nexport interface IErrorData extends ErrorBody, ErrorType {}\r\n","import { AfterViewInit, Component, Input, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { ErrorLoggerDocumentDto } from 'src/app/dtos';\n\n@Component({\n  selector: 'app-error-details',\n  templateUrl: './error-details.component.html',\n  styleUrls: ['./error-details.component.scss'],\n})\nexport class ErrorDetailsComponent implements OnInit, AfterViewInit {\n  @Input() error: ErrorLoggerDocumentDto;\n  constructor(private modalController: ModalController) {}\n\n  ngAfterViewInit(): void {\n    console.log('ngAfterViewInit', this.error);\n  }\n\n  ngOnInit() {\n    console.log('ngOnInit', this.error);\n  }\n\n  cancel() {\n    this.modalController.dismiss(null, 'cancel');\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ErrorLogComponent } from './error-log.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ErrorLogComponent,\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: '',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ErrorLogRoutingModule {}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { InfiniteScrollCustomEvent, IonModal } from '@ionic/angular';\nimport { Store } from '@ngrx/store';\nimport {\n  BehaviorSubject,\n  combineLatest,\n  Observable,\n  of,\n  ReplaySubject,\n  Subject,\n} from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { selectUser } from 'src/app/store/reducers/auth.reducer';\nimport {\n  ErrorLoggerDocumentDto,\n  ErrorLogQueryDto,\n  OwnerDataDto,\n  OwnerQueryDto,\n} from 'src/app/dtos';\nimport { errors, ErrorTypes, IUser, OwnerData } from 'src/app/interfaces';\nimport { ModalService } from 'src/app/services/modal.service';\nimport { selectAllErrorLogs } from 'src/app/store/reducers/error-log.reducer';\nimport * as fromErrorLogActions from '../../../store/actions/error-log.actions';\nimport { SelectWithSearchComponent } from '../../common/select-with-search/select-with-search.component';\nimport { SelectWithSearchItem } from '../../common/select-with-search/select-with-search.interface';\nimport { ErrorDetailsComponent } from './error-details/error-details.component';\nimport { ErrorLogService } from './error-log.service';\nimport { SharedService } from 'src/app/services/shared.service';\nimport { sub, isAfter, parseISO, add } from 'date-fns';\n\n@Component({\n  selector: 'app-error-log',\n  templateUrl: './error-log.component.html',\n  styleUrls: ['./error-log.component.scss'],\n})\nexport class ErrorLogComponent implements OnInit {\n  @ViewChild('modal', { static: true }) modal!: IonModal;\n  loadedErrorsWithQuery$: Observable<ErrorLoggerDocumentDto[]>;\n  user$: Observable<IUser>;\n  allErrors: ErrorLoggerDocumentDto[] = [];\n  errorTypes = ['all', ...errors];\n  allOwners: OwnerDataDto;\n  ownersQuery: OwnerQueryDto;\n  selectedOwner: OwnerData;\n  errorsQuery: ErrorLogQueryDto;\n  getOwnersWithQuery$: ReplaySubject<OwnerQueryDto>;\n  newOwnersSearch = true;\n  newErrorsSearch = true;\n  minDate: string;\n  maxDate: string;\n  maxDateRange: {\n    min: string;\n    max: string;\n  };\n  minDateRange: {\n    max: string;\n  };\n\n  constructor(\n    private store: Store,\n    private errorLogService: ErrorLogService,\n    private modalService: ModalService,\n    private sharedService: SharedService,\n  ) {}\n\n  ngOnInit() {\n    this.minDate = this.sharedService.convertDateToISO(sub(new Date(), { days: 7 }));\n    this.maxDate = this.sharedService.convertDateToISO(new Date());\n    this.createDateRanges();\n\n    this.errorsQuery = { skip: 0, limit: 20 };\n    this.ownersQuery = { name: '', skip: 0, limit: 20 };\n    this.allOwners = { data: [], totalDocuments: 0 };\n\n    this.loadedErrorsWithQuery$ = this.store.select(selectAllErrorLogs);\n\n    this.loadedErrorsWithQuery$.subscribe((loadedErrorsWithQuery) => {\n      if (this.newErrorsSearch) {\n        return (this.allErrors = loadedErrorsWithQuery);\n      }\n      return this.allErrors.push(...loadedErrorsWithQuery);\n    });\n    this.user$ = this.store.select(selectUser);\n\n    this.getOwnersWithQuery$ = new ReplaySubject(1);\n    // this.getOwnersWithQuery$ = new ReplaySubject(this.ownersQuery);\n\n    this.getOwnersWithQuery$\n      .pipe(\n        switchMap((ownersQuery) => this.errorLogService.getOwnersWithQuery(ownersQuery)),\n      )\n      .subscribe((loadedOwners) => {\n        if (this.newOwnersSearch) {\n          return (this.allOwners = loadedOwners);\n        }\n        return (this.allOwners = {\n          totalDocuments: loadedOwners.totalDocuments,\n          data: [...this.allOwners.data, ...loadedOwners.data],\n        });\n      });\n\n    this.user$.subscribe((user) => {\n      this.errorsQuery = { ...this.errorsQuery, owner: user._id };\n      this.getErrorsWithQuery();\n    });\n  }\n\n  createDateRanges(): void {\n    this.maxDateRange = {\n      min: this.sharedService.convertDateToISO(\n        add(this.sharedService.convertISOToDate(this.minDate), { days: 1 }),\n      ),\n      max: this.sharedService.convertDateToISO(new Date()),\n    };\n    this.minDateRange = {\n      max: this.sharedService.convertDateToISO(\n        sub(this.sharedService.convertISOToDate(this.maxDate), { days: 1 }),\n      ),\n    };\n  }\n\n  onMinDateChange() {\n    this.createDateRanges();\n    // if (\n    //   isAfter(\n    //     this.sharedService.convertISOToDate(this.minDate),\n    //     this.sharedService.convertISOToDate(this.maxDate),\n    //   )\n    // ) {\n    //   this.minDate = this.sharedService.convertDateToISO(sub(new Date(), { days: 1 }));\n    // }\n  }\n\n  onMaxDateChange() {\n    this.createDateRanges();\n\n    // if (isAfter(this.sharedService.convertISOToDate(this.maxDate), new Date())) {\n    //   this.maxDate = this.sharedService.convertDateToISO(new Date());\n    // }\n\n    console.log('maxDate', parseISO(this.maxDate));\n  }\n\n  errorDetails(error: ErrorLoggerDocumentDto) {\n    this.modalService.presentModal(ErrorDetailsComponent, { error });\n  }\n\n  onSelectErrorType(event: any) {\n    if (event.target.value === 'all') {\n      const { errorType, ...rest } = this.errorsQuery;\n      this.errorsQuery = rest;\n    } else {\n      this.errorsQuery = {\n        ...this.errorsQuery,\n        errorType: event.target.value,\n      };\n    }\n    this.newErrorsSearch = true;\n    this.getErrorsWithQuery();\n  }\n\n  convertOwnersToItems(owners: OwnerDataDto): SelectWithSearchItem[] {\n    return owners.data.map(({ name, owner }) => ({ name, data: owner }));\n  }\n\n  convertItemToOwner(item: SelectWithSearchItem): OwnerData {\n    const { name, data } = item;\n    return { name, owner: data };\n  }\n\n  onSelectOwner(item: SelectWithSearchItem): void {\n    this.selectedOwner = this.convertItemToOwner(item);\n    this.errorsQuery = { ...this.errorsQuery, owner: this.selectedOwner.owner };\n    this.newErrorsSearch = true;\n    this.getErrorsWithQuery();\n    this.modal.dismiss();\n  }\n\n  onIonInfinite(event: any) {\n    this.newErrorsSearch = false;\n    this.getErrorsWithQuery(this.allErrors.length);\n    (event as InfiniteScrollCustomEvent).target.complete();\n  }\n\n  onIonInfiniteSelectwithSearch(event: any) {\n    this.newOwnersSearch = false;\n    this.getOwnersWithQuery(this.allOwners.data.length);\n  }\n\n  searchOwnersWithQuery(name: string) {\n    this.ownersQuery = { ...this.ownersQuery, name };\n    this.newOwnersSearch = true;\n    this.getOwnersWithQuery();\n  }\n\n  private getOwnersWithQuery(skip = 0): void {\n    this.ownersQuery = { ...this.ownersQuery, skip };\n    this.getOwnersWithQuery$.next(this.ownersQuery);\n  }\n\n  private getErrorsWithQuery(skip = 0): void {\n    this.errorsQuery = { ...this.errorsQuery, skip };\n    this.store.dispatch(fromErrorLogActions.getWithQuery({ query: this.errorsQuery }));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { ErrorLogRoutingModule } from './error-log-routing.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ErrorLogComponent } from './error-log.component';\nimport { SharedModule } from '../../common/shared.module';\nimport { ErrorDetailsComponent } from './error-details/error-details.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [ErrorLogComponent, ErrorDetailsComponent],\n  imports: [\n    CommonModule,\n    IonicModule,\n    FormsModule,\n    ErrorLogRoutingModule,\n    TranslateModule.forChild({\n      extend: true,\n    }),\n    SharedModule,\n  ],\n})\nexport class ErrorLogModule {}\n","export default \"<div class=\\\"ion-page\\\">\\n  <ion-header>\\n    <ion-toolbar>\\n      <ion-buttons slot=\\\"end\\\">\\n        <ion-button (click)=\\\"cancel()\\\">Cancel</ion-button>\\n      </ion-buttons>\\n      <ion-title>Error details</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n  <ion-content class=\\\"ion-padding\\\">\\n    <ion-item *ngFor=\\\"let pair of error | keyvalue\\\">\\n      <ion-label *ngIf=\\\"pair.key === 'error'\\\" class=\\\"ion-text-wrap\\\">\\n        <h2>{{ pair.key }}</h2>\\n        <p>{{ pair.value | json }}</p>\\n      </ion-label>\\n      <ion-label *ngIf=\\\"pair.key !== 'error'\\\">\\n        <h2>{{ pair.key }}</h2>\\n        <p>{{ pair.value }}</p>\\n      </ion-label>\\n    </ion-item>\\n  </ion-content>\\n</div>\\n\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>{{ 'modules.profile.errorLog' | translate }}</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-menu-button menu=\\\"profile-menu\\\"></ion-menu-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <ion-grid class=\\\"ion-no-margin ion-no-padding\\\">\\n    <ion-row>\\n      <ion-col\\n        size-lg=\\\"6\\\"\\n        size-md=\\\"8\\\"\\n        size-sm=\\\"10\\\"\\n        offset-lg=\\\"3\\\"\\n        offset-md=\\\"2\\\"\\n        offset-sm=\\\"1\\\"\\n      >\\n        <ion-card>\\n          <ion-card-header>\\n            <ion-card-title class=\\\"ion-text-center\\\">{{\\n              'modules.profile.errorLogTitle' | translate\\n            }}</ion-card-title>\\n            <ion-card-subtitle class=\\\"ion-text-center\\\">{{\\n              'modules.profile.errorLogDescription' | translate\\n            }}</ion-card-subtitle>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <ion-list>\\n              <ion-row class=\\\"ion-justify-content-around\\\">\\n                <ion-col size=\\\"5\\\" class=\\\"ion-justify-content-center\\\">\\n                  <ion-datetime-button datetime=\\\"minDateTime\\\"></ion-datetime-button>\\n                  <ion-modal [keepContentsMounted]=\\\"true\\\">\\n                    <ng-template>\\n                      <ion-datetime\\n                        #minDateTimeModal\\n                        id=\\\"minDateTime\\\"\\n                        presentation=\\\"date\\\"\\n                        [max]=\\\"minDateRange.max\\\"\\n                        [(ngModel)]=\\\"minDate\\\"\\n                        (ionChange)=\\\"onMinDateChange(); minDateTimeModal.confirm(true)\\\"\\n                      ></ion-datetime>\\n                    </ng-template>\\n                  </ion-modal>\\n                </ion-col>\\n                <ion-col size=\\\"2\\\" class=\\\"ion-justify-content-center\\\">\\n                  <!-- <span>1 of 2</span> -->\\n                </ion-col>\\n                <ion-col size=\\\"5\\\" class=\\\"ion-justify-content-center\\\">\\n                  <ion-datetime-button datetime=\\\"maxDateTime\\\"></ion-datetime-button>\\n                  <ion-modal [keepContentsMounted]=\\\"true\\\">\\n                    <ng-template>\\n                      <ion-datetime\\n                        id=\\\"maxDateTime\\\"\\n                        #maxDateTimeModal\\n                        presentation=\\\"date\\\"\\n                        [(ngModel)]=\\\"maxDate\\\"\\n                        [min]=\\\"maxDateRange.min\\\"\\n                        [max]=\\\"maxDateRange.max\\\"\\n                        (ionChange)=\\\"onMaxDateChange(); maxDateTimeModal.confirm(true)\\\"\\n                      ></ion-datetime>\\n                    </ng-template>\\n                  </ion-modal>\\n                </ion-col>\\n              </ion-row>\\n\\n              <!-- <ion-item>\\n                <ion-datetime-button\\n                  datetime=\\\"minDateTime\\\"\\n                ></ion-datetime-button>\\n                <ion-modal [keepContentsMounted]=\\\"true\\\">\\n                  <ng-template>\\n                    <ion-datetime\\n                      #minDateTimeModal\\n                      id=\\\"minDateTime\\\"\\n                      presentation=\\\"date\\\"\\n                      [max]=\\\"minDateRange.max\\\"\\n                      [(ngModel)]=\\\"minDate\\\"\\n                      (ionChange)=\\\"onMinDateChange(); minDateTimeModal.confirm(true)\\\"\\n                    ></ion-datetime>\\n                  </ng-template>\\n                </ion-modal>\\n                <ion-datetime-button datetime=\\\"maxDateTime\\\"></ion-datetime-button>\\n                <ion-modal [keepContentsMounted]=\\\"true\\\">\\n                  <ng-template>\\n                    <ion-datetime\\n                      id=\\\"maxDateTime\\\"\\n                      #maxDateTimeModal\\n                      presentation=\\\"date\\\"\\n                      [(ngModel)]=\\\"maxDate\\\"\\n                      [min]=\\\"maxDateRange.min\\\"\\n                      [max]=\\\"maxDateRange.max\\\"\\n                      (ionChange)=\\\"onMaxDateChange(); maxDateTimeModal.confirm(true)\\\"\\n                    ></ion-datetime>\\n                  </ng-template>\\n                </ion-modal>\\n              </ion-item> -->\\n              <ion-item slot=\\\"start\\\">\\n                <ion-label>Select error type</ion-label>\\n                <ion-select\\n                  interface=\\\"popover\\\"\\n                  placeholder=\\\"Select error type\\\"\\n                  (ionChange)=\\\"onSelectErrorType($event)\\\"\\n                  [value]=\\\"errorTypes[0]\\\"\\n                >\\n                  <ion-select-option\\n                    *ngFor=\\\"let error of errorTypes\\\"\\n                    [value]=\\\"error\\\"\\n                    slot=\\\"end\\\"\\n                    >{{ error }}</ion-select-option\\n                  >\\n                </ion-select>\\n              </ion-item>\\n              <ion-item button=\\\"true\\\" detail=\\\"true\\\" id=\\\"select-owners\\\" slot=\\\"end\\\">\\n                <ion-label>Select user</ion-label>\\n                <div slot=\\\"end\\\">\\n                  {{ selectedOwner?.name || (user$ | async).name || 'all' }}\\n                </div>\\n              </ion-item>\\n            </ion-list>\\n\\n            <ion-list>\\n              <ion-item\\n                *ngFor=\\\"let item of allErrors; let i = index\\\"\\n                button\\n                detail=\\\"true\\\"\\n                (click)=\\\"errorDetails(item)\\\"\\n              >\\n                <ion-label>\\n                  {{ i + '. ' + item.createdAt + ' ' + item.message }}</ion-label\\n                >\\n              </ion-item>\\n            </ion-list>\\n            <ion-infinite-scroll (ionInfinite)=\\\"onIonInfinite($event)\\\">\\n              <ion-infinite-scroll-content></ion-infinite-scroll-content>\\n            </ion-infinite-scroll>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n<ion-modal trigger=\\\"select-owners\\\" #modal>\\n  <ng-template>\\n    <app-select-with-search\\n      class=\\\"ion-page\\\"\\n      title=\\\"Select user\\\"\\n      [items]=\\\"convertOwnersToItems(allOwners)\\\"\\n      [totalItems]=\\\"allOwners.totalDocuments\\\"\\n      (searchQuery)=\\\"searchOwnersWithQuery($event)\\\"\\n      (selectionChange)=\\\"onSelectOwner($event)\\\"\\n      (selectionCancel)=\\\"modal.dismiss()\\\"\\n      (ionInfinite)=\\\"onIonInfiniteSelectwithSearch($event)\\\"\\n    ></app-select-with-search>\\n  </ng-template>\\n</ion-modal>\\n\";"],"names":[],"sourceRoot":"webpack:///"}