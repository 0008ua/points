{"version":3,"file":"src_app_modules_auth_auth_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;AAAyC;AACc;AACd;AACK;AAE9C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,SAAS;QACf,YAAY,EAAE,GAAG,EAAE,CAAC,iLAAkC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,iBAAiB,CAAC;QACrF,OAAO,EAAE,CAAC,kDAAS,CAAC;QACpB,WAAW,EAAE,CAAC,kDAAS,CAAC;KACzB;IACD;QACE,IAAI,EAAE,QAAQ;QACd,YAAY,EAAE,GAAG,EAAE,CAAC,4NAAgC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,gBAAgB,CAAC;QAClF,OAAO,EAAE,CAAC,uDAAW,CAAC;QACtB,WAAW,EAAE,CAAC,uDAAW,CAAC;KAC3B;IACD;QACE,IAAI,EAAE,QAAQ;QACd,YAAY,EAAE,GAAG,EAAE,CAAC,4NAAgC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,gBAAgB,CAAC;QAClF,OAAO,EAAE,CAAC,uDAAW,CAAC;QACtB,WAAW,EAAE,CAAC,uDAAW,CAAC;KAC3B;IACD;QACE,IAAI,EAAE,IAAI;QACV,UAAU,EAAE,QAAQ;QACpB,SAAS,EAAE,MAAM;KAClB;CACF,CAAC;IAMW,iBAAiB,SAAjB,iBAAiB;CAAI;AAArB,iBAAiB;IAJ7B,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,iBAAiB,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCqB;AACqF;AAC1F;AAEF;AAEC;AACe;AACS;IAMxD,SAAS,SAAT,SAAS;IAGpB,YACU,WAAwB,EACxB,MAAc,EACd,KAAY;QAGpB,sDAAsD;QAL9C,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAO;QALtB,cAAS,GAAuB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,+EAAc,CAAC,CAAC;QAUhE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,+EAAc,CAAC,CAAC,IAAI,CACpC,mDAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC,CACtD,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC;IAED,yCAAyC;IACzC,OAAO,CAAC,KAAY,EAAE,QAAsB;QAE1C,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CACxB,mDAAG,CAAC,CAAC,IAAI,EAAE,EAAE;YACX,IAAI,IAAI,KAAK,OAAO,EAAE;gBACpB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;gBAC1C,OAAO,KAAK,CAAC;aACd;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,EACF,oDAAI,CAAC,CAAC,CAAC,CACR,CAAC;IACJ,CAAC;IAED,6DAA6D;IAC7D,yCAAyC;IACzC,WAAW,CAAC,KAA6B,EAAE,KAA0B;QAEnE,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CACxB,mDAAG,CAAC,CAAC,IAAI,EAAE,EAAE;YACX,IAAI,IAAI,KAAK,OAAO,EAAE;gBACpB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;gBAC1C,OAAO,KAAK,CAAC;aACd;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,EACF,0DAAU,CAAC,CAAC,CAAC,EAAE,EAAE;YACf,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;YAC5B,OAAO,gDAAU,CAAC,CAAC,CAAC,CAAC;QACvB,CAAC,CAAC;QACF,WAAW;SACZ,CAAC;IACJ,CAAC;CACF;;YA1DQ,sDAAW;YALuE,mDAAM;YAGhF,8CAAK;;AAUT,SAAS;IAHrB,0DAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,SAAS,CAkDrB;AAlDqB;;;;;;;;;;;;;;;;;;;;ACdmB;AACM;AACW;IAc7C,UAAU,SAAV,UAAU;CAAI;AAAd,UAAU;IATtB,uDAAQ,CAAC;QACR,YAAY,EAAE,EACb;QACD,OAAO,EAAE;YACP,yDAAY;YACZ,mEAAiB;SAElB;KACF,CAAC;GACW,UAAU,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;AChBoB;AACoF;AAG3F;AAEwB;AACS;IAMxD,WAAW,SAAX,WAAW;IAEtB,YACU,MAAc,EACd,KAAY;QADZ,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAO;QAHtB,cAAS,GAAuB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,+EAAc,CAAC,CAAC;QAMhE,sDAAsD;QACtD,8BAA8B;QAC9B,yDAAyD;IAC3D,CAAC;IAED,yCAAyC;IACzC,OAAO,CAAC,KAAY,EAAE,QAAsB;QAC1C,uDAAuD;QAEvD,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CACxB,mDAAG,CAAC,CAAC,IAAI,EAAE,EAAE;YACX,IAAI,IAAI,KAAK,QAAQ,EAAE;gBACrB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;gBAC3C,OAAO,KAAK,CAAC;aACd;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,EACF,oDAAI,CAAC,CAAC,CAAC,CACR,CAAC;IACJ,CAAC;IAGD,WAAW,CAAE,KAA6B,EAAE,KAA0B;QAEpE,uDAAuD;QACvD,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CACxB,mDAAG,CAAC,CAAC,QAAQ,EAAE,EAAE;YACb,IAAI,QAAQ,KAAK,QAAQ,EAAE;gBACzB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;gBAC3C,OAAO,KAAK,CAAC;aACd;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAEL,CAAC;IACJ,CAAC;CACF;;YAvD8D,mDAAM;YAG5D,8CAAK;;AASD,WAAW;IAHvB,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,WAAW,CA2CvB;AA3CuB","sources":["./src/app/modules/auth/auth-routing.module.ts","./src/app/modules/auth/auth.guard.ts","./src/app/modules/auth/auth.module.ts","./src/app/modules/auth/no-auth.guard.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard } from './auth.guard';\r\nimport { NoAuthGuard } from './no-auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'profile',\r\n    loadChildren: () => import('./profile/profile.module').then(m => m.ProfilePageModule),\r\n    canLoad: [AuthGuard],\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'signin',\r\n    loadChildren: () => import('./signin/signin.module').then(m => m.SigninPageModule),\r\n    canLoad: [NoAuthGuard],\r\n    canActivate: [NoAuthGuard],\r\n  },\r\n  {\r\n    path: 'signup',\r\n    loadChildren: () => import('./signup/signup.module').then(m => m.SignupPageModule),\r\n    canLoad: [NoAuthGuard],\r\n    canActivate: [NoAuthGuard],\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: 'signin',\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AuthRoutingModule { }\r\n","import { Injectable, OnInit } from '@angular/core';\r\nimport { CanLoad, Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router, CanActivate } from '@angular/router';\r\nimport { Observable, throwError } from 'rxjs';\r\n\r\nimport { select, Store } from '@ngrx/store';\r\n\r\nimport { AuthService } from './auth.service';\r\nimport { catchError, map, take, tap } from 'rxjs/operators';\r\nimport { selectUserRole } from 'src/app/store/reducers/auth.reducer';\r\nimport { IUser } from 'src/app/interfaces';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanLoad, CanActivate {\r\n  userRole$: Observable<string> = this.store.select(selectUserRole);\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private store: Store,\r\n\r\n  ) {\r\n    // this.userRole$ = this.store.select(selectUserRole);\r\n\r\n    this.store.select(selectUserRole).pipe(\r\n      tap((role) => console.log('role change guard', role))\r\n    ).subscribe((_) => _);\r\n  }\r\n\r\n  // Prevents fetching lazy loading modules\r\n  canLoad(route: Route, segments: UrlSegment[]):\r\n    Observable<boolean> | Promise<boolean> | boolean {\r\n    return this.userRole$.pipe(\r\n      map((role) => {\r\n        if (role === 'guest') {\r\n          this.router.navigateByUrl('/auth/signin');\r\n          return false;\r\n        }\r\n        return true;\r\n      }),\r\n      take(1),\r\n    );\r\n  }\r\n\r\n  // If lazy loadnig module already fetched and user logged out\r\n  // this guard prevents to activate module\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):\r\n    Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    return this.userRole$.pipe(\r\n      map((role) => {\r\n        if (role === 'guest') {\r\n          this.router.navigateByUrl('/auth/signin');\r\n          return false;\r\n        }\r\n        return true;\r\n      }),\r\n      catchError((e) => {\r\n        console.log('err guard', e);\r\n        return throwError(e);\r\n      })\r\n      // take(1),\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { PipesModule } from 'src/app/pipes/pipes.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AuthRoutingModule,\r\n\r\n  ]\r\n})\r\nexport class AuthModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router, CanActivate, Route, UrlSegment } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Store } from '@ngrx/store';\r\n\r\nimport { catchError, map, take, tap } from 'rxjs/operators';\r\nimport { selectUserRole } from 'src/app/store/reducers/auth.reducer';\r\nimport { IUser } from 'src/app/interfaces';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class NoAuthGuard implements CanActivate {\r\n  userRole$: Observable<string> = this.store.select(selectUserRole);\r\n  constructor(\r\n    private router: Router,\r\n    private store: Store,\r\n\r\n  ) {\r\n    // this.userRole$ = this.store.select(selectUserRole);\r\n    // console.log('sdfsdfadfadf')\r\n    // this.store.select(selectUserRole).subscribe((_) => _);\r\n  }\r\n\r\n  // Prevents fetching lazy loading modules\r\n  canLoad(route: Route, segments: UrlSegment[]): Observable<boolean> | Promise<boolean> | boolean {\r\n    // const userRole$ = this.store.select(selectUserRole);\r\n\r\n    return this.userRole$.pipe(\r\n      map((role) => {\r\n        if (role === 'member') {\r\n          this.router.navigateByUrl('/auth/profile');\r\n          return false;\r\n        }\r\n        return true;\r\n      }),\r\n      take(1),\r\n    );\r\n  }\r\n\r\n\r\n  canActivate( route: ActivatedRouteSnapshot, state: RouterStateSnapshot):\r\n  Observable<boolean | UrlTree>| Promise<boolean | UrlTree>| boolean | UrlTree {\r\n    // const userRole$ = this.store.select(selectUserRole);\r\n    return this.userRole$.pipe(\r\n      map((userRole) => {\r\n          if (userRole === 'member') {\r\n            this.router.navigateByUrl('/auth/profile');\r\n            return false;\r\n          }\r\n          return true;\r\n        }),\r\n        // take(1),\r\n    );\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}