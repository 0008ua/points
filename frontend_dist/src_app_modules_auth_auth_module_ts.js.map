{"version":3,"file":"src_app_modules_auth_auth_module_ts.js","mappings":"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","sources":["./src/app/modules/auth/auth-routing.module.ts","./src/app/modules/auth/auth.guard.ts","./src/app/modules/auth/auth.module.ts","./src/app/modules/auth/no-auth.guard.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard } from './auth.guard';\r\nimport { NoAuthGuard } from './no-auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'profile',\r\n    loadChildren: () => import('./profile/profile.module').then((m) => m.ProfilePageModule),\r\n    canLoad: [AuthGuard],\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'signin',\r\n    loadChildren: () => import('./signin/signin.module').then((m) => m.SigninPageModule),\r\n    canLoad: [NoAuthGuard],\r\n    canActivate: [NoAuthGuard],\r\n  },\r\n  {\r\n    path: 'signup',\r\n    loadChildren: () => import('./signup/signup.module').then((m) => m.SignupPageModule),\r\n    canLoad: [NoAuthGuard],\r\n    canActivate: [NoAuthGuard],\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: 'signin',\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AuthRoutingModule {}\r\n","import { Injectable, OnInit } from '@angular/core';\r\nimport {\r\n  CanLoad,\r\n  Route,\r\n  UrlSegment,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n  Router,\r\n  CanActivate,\r\n} from '@angular/router';\r\nimport { Observable, throwError } from 'rxjs';\r\n\r\nimport { select, Store } from '@ngrx/store';\r\n\r\nimport { AuthService } from './auth.service';\r\nimport { catchError, map, take, tap } from 'rxjs/operators';\r\nimport { selectUserRole } from 'src/app/store/reducers/auth.reducer';\r\nimport { IUser } from 'src/app/interfaces';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanLoad, CanActivate {\r\n  userRole$: Observable<string> = this.store.select(selectUserRole);\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private store: Store,\r\n  ) {\r\n    // this.userRole$ = this.store.select(selectUserRole);\r\n    this.store.select(selectUserRole).subscribe((_) => _);\r\n  }\r\n\r\n  // Prevents fetching lazy loading modules\r\n  canLoad(\r\n    route: Route,\r\n    segments: UrlSegment[],\r\n  ): Observable<boolean> | Promise<boolean> | boolean {\r\n    return this.userRole$.pipe(\r\n      map((role) => {\r\n        if (role === 'guest') {\r\n          this.router.navigateByUrl('/auth/signin');\r\n          return false;\r\n        }\r\n        return true;\r\n      }),\r\n      take(1),\r\n    );\r\n  }\r\n\r\n  // If lazy loadnig module already fetched and user logged out\r\n  // this guard prevents to activate module\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot,\r\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    return this.userRole$.pipe(\r\n      map((role) => {\r\n        if (role === 'guest') {\r\n          this.router.navigateByUrl('/auth/signin');\r\n          return false;\r\n        }\r\n        return true;\r\n      }),\r\n      catchError((e) => {\r\n        return throwError(e);\r\n      }),\r\n      // take(1),\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { PipesModule } from 'src/app/pipes/pipes.module';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [CommonModule, AuthRoutingModule],\r\n})\r\nexport class AuthModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n  Router,\r\n  CanActivate,\r\n  Route,\r\n  UrlSegment,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Store } from '@ngrx/store';\r\n\r\nimport { catchError, map, take, tap } from 'rxjs/operators';\r\nimport { selectUserRole } from 'src/app/store/reducers/auth.reducer';\r\nimport { IUser } from 'src/app/interfaces';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class NoAuthGuard implements CanActivate {\r\n  userRole$: Observable<string> = this.store.select(selectUserRole);\r\n  constructor(private router: Router, private store: Store) {}\r\n\r\n  // Prevents fetching lazy loading modules\r\n  canLoad(\r\n    route: Route,\r\n    segments: UrlSegment[],\r\n  ): Observable<boolean> | Promise<boolean> | boolean {\r\n    // const userRole$ = this.store.select(selectUserRole);\r\n\r\n    return this.userRole$.pipe(\r\n      map((role) => {\r\n        if (role === 'member' || role === 'admin') {\r\n          this.router.navigateByUrl('/auth/profile');\r\n          return false;\r\n        }\r\n        return true;\r\n      }),\r\n      take(1),\r\n    );\r\n  }\r\n\r\n  \r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot,\r\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    // const userRole$ = this.store.select(selectUserRole);\r\n    return this.userRole$.pipe(\r\n      map((role) => {\r\n        if (role === 'member' || role === 'admin') {\r\n          this.router.navigateByUrl('/auth/profile');\r\n          return false;\r\n        }\r\n        return true;\r\n      }),\r\n      // take(1),\r\n    );\r\n  }\r\n}\r\n"],"names":["NgModule","RouterModule","AuthGuard","NoAuthGuard","routes","path","loadChildren","then","m","ProfilePageModule","canLoad","canActivate","SigninPageModule","SignupPageModule","redirectTo","pathMatch","AuthRoutingModule","__decorate","imports","forChild","exports","Injectable","Router","throwError","Store","AuthService","catchError","map","take","selectUserRole","_class","constructor","authService","router","store","userRole$","select","subscribe","_","route","segments","pipe","role","navigateByUrl","state","e","providedIn","CommonModule","AuthModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}